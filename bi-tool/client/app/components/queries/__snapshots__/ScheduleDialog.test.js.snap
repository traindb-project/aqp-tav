// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScheduleDialog Sets correct schedule settings Sets to "1 Day 22:15" Sets to correct interval 1`] = `
<div
  data-testid="interval"
>
  <Select
    bordered={true}
    choiceTransitionName="zoom"
    className="input"
    dropdownMatchSelectWidth={false}
    onChange={[Function]}
    transitionName="slide-up"
    value={86400}
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      clearIcon={<ForwardRef(CloseCircleFilled) />}
      dropdownClassName=""
      dropdownMatchSelectWidth={false}
      inputIcon={[Function]}
      listHeight={256}
      listItemHeight={24}
      menuItemSelectedIcon={null}
      notFoundContent={
        <Context.Consumer>
          [Function]
        </Context.Consumer>
      }
      onChange={[Function]}
      prefixCls="ant-select"
      removeIcon={<ForwardRef(CloseOutlined) />}
      transitionName="slide-up"
      value={86400}
    >
      <ForwardRef(Select)
        choiceTransitionName="zoom"
        className="input"
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        dropdownClassName=""
        dropdownMatchSelectWidth={false}
        inputIcon={[Function]}
        listHeight={256}
        listItemHeight={24}
        menuItemSelectedIcon={null}
        notFoundContent={
          <Context.Consumer>
            [Function]
          </Context.Consumer>
        }
        onChange={[Function]}
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        transitionName="slide-up"
        value={86400}
      >
        <div
          className="ant-select input ant-select-single ant-select-show-arrow"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
        >
          <SelectTrigger
            containerWidth={null}
            dropdownClassName=""
            dropdownMatchSelectWidth={false}
            empty={false}
            getTriggerDOMNode={[Function]}
            popupElement={
              <ForwardRef(OptionList)
                childrenAsData={true}
                defaultActiveFirstOption={true}
                flattenOptions={
                  Array [
                    Object {
                      "data": Object {
                        "children": "Never",
                        "key": "never",
                        "value": null,
                      },
                      "groupOption": false,
                      "key": "never",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__minute__",
                        "label": "Minutes",
                        "options": Array [
                          Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__minute__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 minute",
                        "key": "minute-1",
                        "value": 60,
                      },
                      "groupOption": true,
                      "key": "minute-1",
                    },
                    Object {
                      "data": Object {
                        "children": "5 minutes",
                        "key": "minute-5",
                        "value": 300,
                      },
                      "groupOption": true,
                      "key": "minute-5",
                    },
                    Object {
                      "data": Object {
                        "children": "10 minutes",
                        "key": "minute-10",
                        "value": 600,
                      },
                      "groupOption": true,
                      "key": "minute-10",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__hour__",
                        "label": "Hours",
                        "options": Array [
                          Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__hour__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 hour",
                        "key": "hour-1",
                        "value": 3600,
                      },
                      "groupOption": true,
                      "key": "hour-1",
                    },
                    Object {
                      "data": Object {
                        "children": "10 hours",
                        "key": "hour-10",
                        "value": 36000,
                      },
                      "groupOption": true,
                      "key": "hour-10",
                    },
                    Object {
                      "data": Object {
                        "children": "23 hours",
                        "key": "hour-23",
                        "value": 82800,
                      },
                      "groupOption": true,
                      "key": "hour-23",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__day__",
                        "label": "Days",
                        "options": Array [
                          Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__day__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 day",
                        "key": "day-1",
                        "value": 86400,
                      },
                      "groupOption": true,
                      "key": "day-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 days",
                        "key": "day-2",
                        "value": 172800,
                      },
                      "groupOption": true,
                      "key": "day-2",
                    },
                    Object {
                      "data": Object {
                        "children": "6 days",
                        "key": "day-6",
                        "value": 518400,
                      },
                      "groupOption": true,
                      "key": "day-6",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__week__",
                        "label": "Weeks",
                        "options": Array [
                          Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__week__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 week",
                        "key": "week-1",
                        "value": 604800,
                      },
                      "groupOption": true,
                      "key": "week-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 weeks",
                        "key": "week-2",
                        "value": 1209600,
                      },
                      "groupOption": true,
                      "key": "week-2",
                    },
                  ]
                }
                height={256}
                itemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onActiveValue={[Function]}
                onMouseEnter={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                options={
                  Array [
                    Object {
                      "children": "Never",
                      "key": "never",
                      "value": null,
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__minute__",
                      "label": "Minutes",
                      "options": Array [
                        Object {
                          "children": "1 minute",
                          "key": "minute-1",
                          "value": 60,
                        },
                        Object {
                          "children": "5 minutes",
                          "key": "minute-5",
                          "value": 300,
                        },
                        Object {
                          "children": "10 minutes",
                          "key": "minute-10",
                          "value": 600,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__hour__",
                      "label": "Hours",
                      "options": Array [
                        Object {
                          "children": "1 hour",
                          "key": "hour-1",
                          "value": 3600,
                        },
                        Object {
                          "children": "10 hours",
                          "key": "hour-10",
                          "value": 36000,
                        },
                        Object {
                          "children": "23 hours",
                          "key": "hour-23",
                          "value": 82800,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__day__",
                      "label": "Days",
                      "options": Array [
                        Object {
                          "children": "1 day",
                          "key": "day-1",
                          "value": 86400,
                        },
                        Object {
                          "children": "2 days",
                          "key": "day-2",
                          "value": 172800,
                        },
                        Object {
                          "children": "6 days",
                          "key": "day-6",
                          "value": 518400,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__week__",
                      "label": "Weeks",
                      "options": Array [
                        Object {
                          "children": "1 week",
                          "key": "week-1",
                          "value": 604800,
                        },
                        Object {
                          "children": "2 weeks",
                          "key": "week-2",
                          "value": 1209600,
                        },
                      ],
                    },
                  ]
                }
                prefixCls="ant-select"
                searchValue=""
                values={
                  Set {
                    86400,
                  }
                }
                virtual={false}
              />
            }
            prefixCls="ant-select"
            transitionName="slide-up"
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getTriggerDOMNode={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div>
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "Never",
                            "key": "never",
                            "value": null,
                          },
                          "groupOption": false,
                          "key": "never",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__minute__",
                            "label": "Minutes",
                            "options": Array [
                              Object {
                                "children": "1 minute",
                                "key": "minute-1",
                                "value": 60,
                              },
                              Object {
                                "children": "5 minutes",
                                "key": "minute-5",
                                "value": 300,
                              },
                              Object {
                                "children": "10 minutes",
                                "key": "minute-10",
                                "value": 600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__minute__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          "groupOption": true,
                          "key": "minute-1",
                        },
                        Object {
                          "data": Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          "groupOption": true,
                          "key": "minute-5",
                        },
                        Object {
                          "data": Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                          "groupOption": true,
                          "key": "minute-10",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__hour__",
                            "label": "Hours",
                            "options": Array [
                              Object {
                                "children": "1 hour",
                                "key": "hour-1",
                                "value": 3600,
                              },
                              Object {
                                "children": "10 hours",
                                "key": "hour-10",
                                "value": 36000,
                              },
                              Object {
                                "children": "23 hours",
                                "key": "hour-23",
                                "value": 82800,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__hour__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          "groupOption": true,
                          "key": "hour-1",
                        },
                        Object {
                          "data": Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          "groupOption": true,
                          "key": "hour-10",
                        },
                        Object {
                          "data": Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                          "groupOption": true,
                          "key": "hour-23",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__day__",
                            "label": "Days",
                            "options": Array [
                              Object {
                                "children": "1 day",
                                "key": "day-1",
                                "value": 86400,
                              },
                              Object {
                                "children": "2 days",
                                "key": "day-2",
                                "value": 172800,
                              },
                              Object {
                                "children": "6 days",
                                "key": "day-6",
                                "value": 518400,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__day__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          "groupOption": true,
                          "key": "day-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          "groupOption": true,
                          "key": "day-2",
                        },
                        Object {
                          "data": Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                          "groupOption": true,
                          "key": "day-6",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__week__",
                            "label": "Weeks",
                            "options": Array [
                              Object {
                                "children": "1 week",
                                "key": "week-1",
                                "value": 604800,
                              },
                              Object {
                                "children": "2 weeks",
                                "key": "week-2",
                                "value": 1209600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__week__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          "groupOption": true,
                          "key": "week-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                          "groupOption": true,
                          "key": "week-2",
                        },
                      ]
                    }
                    height={256}
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "Never",
                          "key": "never",
                          "value": null,
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__minute__",
                          "label": "Minutes",
                          "options": Array [
                            Object {
                              "children": "1 minute",
                              "key": "minute-1",
                              "value": 60,
                            },
                            Object {
                              "children": "5 minutes",
                              "key": "minute-5",
                              "value": 300,
                            },
                            Object {
                              "children": "10 minutes",
                              "key": "minute-10",
                              "value": 600,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__hour__",
                          "label": "Hours",
                          "options": Array [
                            Object {
                              "children": "1 hour",
                              "key": "hour-1",
                              "value": 3600,
                            },
                            Object {
                              "children": "10 hours",
                              "key": "hour-10",
                              "value": 36000,
                            },
                            Object {
                              "children": "23 hours",
                              "key": "hour-23",
                              "value": 82800,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__day__",
                          "label": "Days",
                          "options": Array [
                            Object {
                              "children": "1 day",
                              "key": "day-1",
                              "value": 86400,
                            },
                            Object {
                              "children": "2 days",
                              "key": "day-2",
                              "value": 172800,
                            },
                            Object {
                              "children": "6 days",
                              "key": "day-6",
                              "value": 518400,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__week__",
                          "label": "Weeks",
                          "options": Array [
                            Object {
                              "children": "1 week",
                              "key": "week-1",
                              "value": 604800,
                            },
                            Object {
                              "children": "2 weeks",
                              "key": "week-2",
                              "value": 1209600,
                            },
                          ],
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        86400,
                      }
                    }
                    virtual={false}
                  />
                </div>
              }
              popupAlign={Object {}}
              popupClassName=""
              popupPlacement="bottomLeft"
              popupStyle={
                Object {
                  "minWidth": null,
                }
              }
              popupTransitionName="slide-up"
              prefixCls="ant-select-dropdown"
              showAction={Array []}
            >
              <Selector
                accessibilityIndex={0}
                activeValue={null}
                choiceTransitionName="zoom"
                className="input"
                clearIcon={<ForwardRef(CloseCircleFilled) />}
                domRef={
                  Object {
                    "current": <div
                      class="ant-select-selector"
                    >
                      <span
                        class="ant-select-selection-search"
                      >
                        <input
                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                          aria-autocomplete="list"
                          aria-controls="rc_select_TEST_OR_SSR_list"
                          aria-haspopup="listbox"
                          aria-owns="rc_select_TEST_OR_SSR_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          id="rc_select_TEST_OR_SSR"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />
                      </span>
                      <span
                        class="ant-select-selection-item"
                        title="1 day"
                      >
                        1 day
                      </span>
                    </div>,
                  }
                }
                dropdownClassName=""
                dropdownMatchSelectWidth={false}
                inputElement={null}
                inputIcon={[Function]}
                key="trigger"
                listHeight={256}
                listItemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onChange={[Function]}
                onSearch={[Function]}
                onSearchSubmit={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                prefixCls="ant-select"
                removeIcon={<ForwardRef(CloseOutlined) />}
                searchValue=""
                showSearch={false}
                tokenWithEnter={false}
                transitionName="slide-up"
                value={86400}
                values={
                  Array [
                    Object {
                      "disabled": undefined,
                      "key": 86400,
                      "label": "1 day",
                      "value": 86400,
                    },
                  ]
                }
              >
                <div
                  className="ant-select-selector"
                  onMouseDown={[Function]}
                >
                  <SingleSelector
                    accessibilityIndex={0}
                    activeValue={null}
                    choiceTransitionName="zoom"
                    className="input"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="1 day"
                          >
                            1 day
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    dropdownMatchSelectWidth={false}
                    inputElement={null}
                    inputIcon={[Function]}
                    inputRef={
                      Object {
                        "current": <input
                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                          aria-autocomplete="list"
                          aria-controls="rc_select_TEST_OR_SSR_list"
                          aria-haspopup="listbox"
                          aria-owns="rc_select_TEST_OR_SSR_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          id="rc_select_TEST_OR_SSR"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />,
                      }
                    }
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onInputChange={[Function]}
                    onInputCompositionEnd={[Function]}
                    onInputCompositionStart={[Function]}
                    onInputKeyDown={[Function]}
                    onInputMouseDown={[Function]}
                    onInputPaste={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value={86400}
                    values={
                      Array [
                        Object {
                          "disabled": undefined,
                          "key": 86400,
                          "label": "1 day",
                          "value": 86400,
                        },
                      ]
                    }
                  >
                    <span
                      className="ant-select-selection-search"
                    >
                      <Input
                        accessibilityIndex={0}
                        attrs={Object {}}
                        editable={false}
                        inputElement={null}
                        onChange={[Function]}
                        onCompositionEnd={[Function]}
                        onCompositionStart={[Function]}
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onPaste={[Function]}
                        prefixCls="ant-select"
                        value=""
                      >
                        <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autoComplete="off"
                          className="ant-select-selection-search-input"
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          readOnly={true}
                          role="combobox"
                          style={
                            Object {
                              "opacity": 0,
                            }
                          }
                          unselectable="on"
                          value=""
                        />
                      </Input>
                    </span>
                    <span
                      className="ant-select-selection-item"
                      title="1 day"
                    >
                      1 day
                    </span>
                  </SingleSelector>
                </div>
              </Selector>
            </Trigger>
          </SelectTrigger>
          <TransBtn
            className="ant-select-arrow"
            customizeIcon={[Function]}
            customizeIconProps={
              Object {
                "focused": false,
                "loading": undefined,
                "open": undefined,
                "searchValue": "",
                "showSearch": false,
              }
            }
          >
            <span
              aria-hidden={true}
              className="ant-select-arrow"
              onMouseDown={[Function]}
              style={
                Object {
                  "WebkitUserSelect": "none",
                  "userSelect": "none",
                }
              }
              unselectable="on"
            >
              <ForwardRef(DownOutlined)
                className="ant-select-suffix"
              >
                <AntdIcon
                  className="ant-select-suffix"
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "down",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="down"
                    className="anticon anticon-down ant-select-suffix"
                    role="img"
                  >
                    <IconReact
                      className=""
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        className=""
                        data-icon="down"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-down"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                          key="svg-down-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(DownOutlined)>
            </span>
          </TransBtn>
        </div>
      </ForwardRef(Select)>
    </Select>
  </Select>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "1 Day 22:15" Sets to correct time 1`] = `
<div
  data-testid="time"
>
  <TimeEditor
    defaultValue={"1999-12-31T22:15:00.000Z"}
    onChange={[Function]}
  >
    <TimePicker
      allowClear={false}
      format="HH:mm"
      minuteStep={5}
      onChange={[Function]}
      value={"1999-12-31T22:15:00.000Z"}
    >
      <TimePicker
        allowClear={false}
        format="HH:mm"
        minuteStep={5}
        onChange={[Function]}
        value={"1999-12-31T22:15:00.000Z"}
      >
        <LocaleReceiver
          componentName="DatePicker"
          defaultLocale={[Function]}
        >
          <Picker
            allowClear={false}
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            components={
              Object {
                "button": [Function],
                "rangeItem": [Function],
              }
            }
            format="HH:mm"
            generateConfig={
              Object {
                "addDate": [Function],
                "addMonth": [Function],
                "addYear": [Function],
                "getDate": [Function],
                "getHour": [Function],
                "getMinute": [Function],
                "getMonth": [Function],
                "getNow": [Function],
                "getSecond": [Function],
                "getWeekDay": [Function],
                "getYear": [Function],
                "isAfter": [Function],
                "isValidate": [Function],
                "locale": Object {
                  "format": [Function],
                  "getShortMonths": [Function],
                  "getShortWeekDays": [Function],
                  "getWeek": [Function],
                  "getWeekFirstDay": [Function],
                  "parse": [Function],
                },
                "setDate": [Function],
                "setHour": [Function],
                "setMinute": [Function],
                "setMonth": [Function],
                "setSecond": [Function],
                "setYear": [Function],
              }
            }
            locale={
              Object {
                "backToToday": "Back to today",
                "clear": "Clear",
                "dateFormat": "M/D/YYYY",
                "dateSelect": "select date",
                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                "dayFormat": "D",
                "decadeSelect": "Choose a decade",
                "locale": "en_US",
                "month": "Month",
                "monthBeforeYear": true,
                "monthPlaceholder": "Select month",
                "monthSelect": "Choose a month",
                "nextCentury": "Next century",
                "nextDecade": "Next decade",
                "nextMonth": "Next month (PageDown)",
                "nextYear": "Next year (Control + right)",
                "now": "Now",
                "ok": "Ok",
                "placeholder": "Select date",
                "previousCentury": "Last century",
                "previousDecade": "Last decade",
                "previousMonth": "Previous month (PageUp)",
                "previousYear": "Last year (Control + left)",
                "quarterPlaceholder": "Select quarter",
                "rangeMonthPlaceholder": Array [
                  "Start month",
                  "End month",
                ],
                "rangePlaceholder": Array [
                  "Start date",
                  "End date",
                ],
                "rangeWeekPlaceholder": Array [
                  "Start week",
                  "End week",
                ],
                "rangeYearPlaceholder": Array [
                  "Start year",
                  "End year",
                ],
                "timeSelect": "select time",
                "today": "Today",
                "weekPlaceholder": "Select week",
                "weekSelect": "Choose a week",
                "year": "Year",
                "yearFormat": "YYYY",
                "yearPlaceholder": "Select year",
                "yearSelect": "Choose a year",
              }
            }
            minuteStep={5}
            nextIcon={
              <span
                className="ant-picker-next-icon"
              />
            }
            onChange={[Function]}
            picker="time"
            placeholder="Select time"
            prefixCls="ant-picker"
            prevIcon={
              <span
                className="ant-picker-prev-icon"
              />
            }
            showSecond={false}
            showToday={true}
            suffixIcon={<ForwardRef(ClockCircleOutlined) />}
            superNextIcon={
              <span
                className="ant-picker-super-next-icon"
              />
            }
            superPrevIcon={
              <span
                className="ant-picker-super-prev-icon"
              />
            }
            transitionName="slide-up"
            value={"1999-12-31T22:15:00.000Z"}
          >
            <InnerPicker
              allowClear={false}
              className=""
              clearIcon={<ForwardRef(CloseCircleFilled) />}
              components={
                Object {
                  "button": [Function],
                  "rangeItem": [Function],
                }
              }
              format="HH:mm"
              generateConfig={
                Object {
                  "addDate": [Function],
                  "addMonth": [Function],
                  "addYear": [Function],
                  "getDate": [Function],
                  "getHour": [Function],
                  "getMinute": [Function],
                  "getMonth": [Function],
                  "getNow": [Function],
                  "getSecond": [Function],
                  "getWeekDay": [Function],
                  "getYear": [Function],
                  "isAfter": [Function],
                  "isValidate": [Function],
                  "locale": Object {
                    "format": [Function],
                    "getShortMonths": [Function],
                    "getShortWeekDays": [Function],
                    "getWeek": [Function],
                    "getWeekFirstDay": [Function],
                    "parse": [Function],
                  },
                  "setDate": [Function],
                  "setHour": [Function],
                  "setMinute": [Function],
                  "setMonth": [Function],
                  "setSecond": [Function],
                  "setYear": [Function],
                }
              }
              locale={
                Object {
                  "backToToday": "Back to today",
                  "clear": "Clear",
                  "dateFormat": "M/D/YYYY",
                  "dateSelect": "select date",
                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                  "dayFormat": "D",
                  "decadeSelect": "Choose a decade",
                  "locale": "en_US",
                  "month": "Month",
                  "monthBeforeYear": true,
                  "monthPlaceholder": "Select month",
                  "monthSelect": "Choose a month",
                  "nextCentury": "Next century",
                  "nextDecade": "Next decade",
                  "nextMonth": "Next month (PageDown)",
                  "nextYear": "Next year (Control + right)",
                  "now": "Now",
                  "ok": "Ok",
                  "placeholder": "Select date",
                  "previousCentury": "Last century",
                  "previousDecade": "Last decade",
                  "previousMonth": "Previous month (PageUp)",
                  "previousYear": "Last year (Control + left)",
                  "quarterPlaceholder": "Select quarter",
                  "rangeMonthPlaceholder": Array [
                    "Start month",
                    "End month",
                  ],
                  "rangePlaceholder": Array [
                    "Start date",
                    "End date",
                  ],
                  "rangeWeekPlaceholder": Array [
                    "Start week",
                    "End week",
                  ],
                  "rangeYearPlaceholder": Array [
                    "Start year",
                    "End year",
                  ],
                  "timeSelect": "select time",
                  "today": "Today",
                  "weekPlaceholder": "Select week",
                  "weekSelect": "Choose a week",
                  "year": "Year",
                  "yearFormat": "YYYY",
                  "yearPlaceholder": "Select year",
                  "yearSelect": "Choose a year",
                }
              }
              minuteStep={5}
              nextIcon={
                <span
                  className="ant-picker-next-icon"
                />
              }
              onChange={[Function]}
              picker="time"
              pickerRef={
                Object {
                  "current": Object {
                    "blur": [Function],
                    "focus": [Function],
                  },
                }
              }
              placeholder="Select time"
              prefixCls="ant-picker"
              prevIcon={
                <span
                  className="ant-picker-prev-icon"
                />
              }
              showSecond={false}
              showToday={true}
              suffixIcon={<ForwardRef(ClockCircleOutlined) />}
              superNextIcon={
                <span
                  className="ant-picker-super-next-icon"
                />
              }
              superPrevIcon={
                <span
                  className="ant-picker-super-prev-icon"
                />
              }
              transitionName="slide-up"
              value={"1999-12-31T22:15:00.000Z"}
            >
              <PickerTrigger
                popupElement={
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                  >
                    <PickerPanel
                      allowClear={false}
                      className="ant-picker-panel-focused"
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      components={
                        Object {
                          "button": [Function],
                          "rangeItem": [Function],
                        }
                      }
                      format="HH:mm"
                      generateConfig={
                        Object {
                          "addDate": [Function],
                          "addMonth": [Function],
                          "addYear": [Function],
                          "getDate": [Function],
                          "getHour": [Function],
                          "getMinute": [Function],
                          "getMonth": [Function],
                          "getNow": [Function],
                          "getSecond": [Function],
                          "getWeekDay": [Function],
                          "getYear": [Function],
                          "isAfter": [Function],
                          "isValidate": [Function],
                          "locale": Object {
                            "format": [Function],
                            "getShortMonths": [Function],
                            "getShortWeekDays": [Function],
                            "getWeek": [Function],
                            "getWeekFirstDay": [Function],
                            "parse": [Function],
                          },
                          "setDate": [Function],
                          "setHour": [Function],
                          "setMinute": [Function],
                          "setMonth": [Function],
                          "setSecond": [Function],
                          "setYear": [Function],
                        }
                      }
                      locale={
                        Object {
                          "backToToday": "Back to today",
                          "clear": "Clear",
                          "dateFormat": "M/D/YYYY",
                          "dateSelect": "select date",
                          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                          "dayFormat": "D",
                          "decadeSelect": "Choose a decade",
                          "locale": "en_US",
                          "month": "Month",
                          "monthBeforeYear": true,
                          "monthPlaceholder": "Select month",
                          "monthSelect": "Choose a month",
                          "nextCentury": "Next century",
                          "nextDecade": "Next decade",
                          "nextMonth": "Next month (PageDown)",
                          "nextYear": "Next year (Control + right)",
                          "now": "Now",
                          "ok": "Ok",
                          "placeholder": "Select date",
                          "previousCentury": "Last century",
                          "previousDecade": "Last decade",
                          "previousMonth": "Previous month (PageUp)",
                          "previousYear": "Last year (Control + left)",
                          "quarterPlaceholder": "Select quarter",
                          "rangeMonthPlaceholder": Array [
                            "Start month",
                            "End month",
                          ],
                          "rangePlaceholder": Array [
                            "Start date",
                            "End date",
                          ],
                          "rangeWeekPlaceholder": Array [
                            "Start week",
                            "End week",
                          ],
                          "rangeYearPlaceholder": Array [
                            "Start year",
                            "End year",
                          ],
                          "timeSelect": "select time",
                          "today": "Today",
                          "weekPlaceholder": "Select week",
                          "weekSelect": "Choose a week",
                          "year": "Year",
                          "yearFormat": "YYYY",
                          "yearPlaceholder": "Select year",
                          "yearSelect": "Choose a year",
                        }
                      }
                      minuteStep={5}
                      nextIcon={
                        <span
                          className="ant-picker-next-icon"
                        />
                      }
                      onChange={[Function]}
                      picker="time"
                      pickerRef={
                        Object {
                          "current": Object {
                            "blur": [Function],
                            "focus": [Function],
                          },
                        }
                      }
                      placeholder="Select time"
                      prefixCls="ant-picker"
                      prevIcon={
                        <span
                          className="ant-picker-prev-icon"
                        />
                      }
                      showSecond={false}
                      showToday={true}
                      suffixIcon={<ForwardRef(ClockCircleOutlined) />}
                      superNextIcon={
                        <span
                          className="ant-picker-super-next-icon"
                        />
                      }
                      superPrevIcon={
                        <span
                          className="ant-picker-super-prev-icon"
                        />
                      }
                      tabIndex={-1}
                      transitionName="slide-up"
                      value={"1999-12-31T22:15:00.000Z"}
                    />
                  </div>
                }
                popupPlacement="bottomLeft"
                prefixCls="ant-picker"
                transitionName="slide-up"
                visible={false}
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div
                      className="ant-picker-panel-container"
                      onMouseDown={[Function]}
                    >
                      <PickerPanel
                        allowClear={false}
                        className="ant-picker-panel-focused"
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        components={
                          Object {
                            "button": [Function],
                            "rangeItem": [Function],
                          }
                        }
                        format="HH:mm"
                        generateConfig={
                          Object {
                            "addDate": [Function],
                            "addMonth": [Function],
                            "addYear": [Function],
                            "getDate": [Function],
                            "getHour": [Function],
                            "getMinute": [Function],
                            "getMonth": [Function],
                            "getNow": [Function],
                            "getSecond": [Function],
                            "getWeekDay": [Function],
                            "getYear": [Function],
                            "isAfter": [Function],
                            "isValidate": [Function],
                            "locale": Object {
                              "format": [Function],
                              "getShortMonths": [Function],
                              "getShortWeekDays": [Function],
                              "getWeek": [Function],
                              "getWeekFirstDay": [Function],
                              "parse": [Function],
                            },
                            "setDate": [Function],
                            "setHour": [Function],
                            "setMinute": [Function],
                            "setMonth": [Function],
                            "setSecond": [Function],
                            "setYear": [Function],
                          }
                        }
                        locale={
                          Object {
                            "backToToday": "Back to today",
                            "clear": "Clear",
                            "dateFormat": "M/D/YYYY",
                            "dateSelect": "select date",
                            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                            "dayFormat": "D",
                            "decadeSelect": "Choose a decade",
                            "locale": "en_US",
                            "month": "Month",
                            "monthBeforeYear": true,
                            "monthPlaceholder": "Select month",
                            "monthSelect": "Choose a month",
                            "nextCentury": "Next century",
                            "nextDecade": "Next decade",
                            "nextMonth": "Next month (PageDown)",
                            "nextYear": "Next year (Control + right)",
                            "now": "Now",
                            "ok": "Ok",
                            "placeholder": "Select date",
                            "previousCentury": "Last century",
                            "previousDecade": "Last decade",
                            "previousMonth": "Previous month (PageUp)",
                            "previousYear": "Last year (Control + left)",
                            "quarterPlaceholder": "Select quarter",
                            "rangeMonthPlaceholder": Array [
                              "Start month",
                              "End month",
                            ],
                            "rangePlaceholder": Array [
                              "Start date",
                              "End date",
                            ],
                            "rangeWeekPlaceholder": Array [
                              "Start week",
                              "End week",
                            ],
                            "rangeYearPlaceholder": Array [
                              "Start year",
                              "End year",
                            ],
                            "timeSelect": "select time",
                            "today": "Today",
                            "weekPlaceholder": "Select week",
                            "weekSelect": "Choose a week",
                            "year": "Year",
                            "yearFormat": "YYYY",
                            "yearPlaceholder": "Select year",
                            "yearSelect": "Choose a year",
                          }
                        }
                        minuteStep={5}
                        nextIcon={
                          <span
                            className="ant-picker-next-icon"
                          />
                        }
                        onChange={[Function]}
                        picker="time"
                        pickerRef={
                          Object {
                            "current": Object {
                              "blur": [Function],
                              "focus": [Function],
                            },
                          }
                        }
                        placeholder="Select time"
                        prefixCls="ant-picker"
                        prevIcon={
                          <span
                            className="ant-picker-prev-icon"
                          />
                        }
                        showSecond={false}
                        showToday={true}
                        suffixIcon={<ForwardRef(ClockCircleOutlined) />}
                        superNextIcon={
                          <span
                            className="ant-picker-super-next-icon"
                          />
                        }
                        superPrevIcon={
                          <span
                            className="ant-picker-super-prev-icon"
                          />
                        }
                        tabIndex={-1}
                        transitionName="slide-up"
                        value={"1999-12-31T22:15:00.000Z"}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={Object {}}
                  popupTransitionName="slide-up"
                  popupVisible={false}
                  prefixCls="ant-picker-dropdown"
                  showAction={Array []}
                >
                  <div
                    className="ant-picker"
                    key="trigger"
                    onMouseUp={[Function]}
                  >
                    <div
                      className="ant-picker-input"
                    >
                      <input
                        autoComplete="off"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        placeholder="Select time"
                        readOnly={true}
                        size={10}
                        title=""
                        value=""
                      />
                      <span
                        className="ant-picker-suffix"
                      >
                        <ForwardRef(ClockCircleOutlined)>
                          <AntdIcon
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z",
                                      },
                                      "tag": "path",
                                    },
                                    Object {
                                      "attrs": Object {
                                        "d": "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "clock-circle",
                                "theme": "outlined",
                              }
                            }
                          >
                            <span
                              aria-label="clock-circle"
                              className="anticon anticon-clock-circle"
                              role="img"
                            >
                              <IconReact
                                className=""
                                icon={
                                  Object {
                                    "icon": Object {
                                      "attrs": Object {
                                        "focusable": "false",
                                        "viewBox": "64 64 896 896",
                                      },
                                      "children": Array [
                                        Object {
                                          "attrs": Object {
                                            "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z",
                                          },
                                          "tag": "path",
                                        },
                                        Object {
                                          "attrs": Object {
                                            "d": "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z",
                                          },
                                          "tag": "path",
                                        },
                                      ],
                                      "tag": "svg",
                                    },
                                    "name": "clock-circle",
                                    "theme": "outlined",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  className=""
                                  data-icon="clock-circle"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  key="svg-clock-circle"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
                                    key="svg-clock-circle-svg-0"
                                  />
                                  <path
                                    d="M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z"
                                    key="svg-clock-circle-svg-1"
                                  />
                                </svg>
                              </IconReact>
                            </span>
                          </AntdIcon>
                        </ForwardRef(ClockCircleOutlined)>
                      </span>
                    </div>
                  </div>
                </Trigger>
              </PickerTrigger>
            </InnerPicker>
          </Picker>
        </LocaleReceiver>
      </TimePicker>
    </TimePicker>
    <span
      className="utc"
      data-testid="utc"
    >
      (
      22:15
       UTC)
    </span>
  </TimeEditor>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "2 Hours" 1`] = `
<div
  data-testid="interval"
>
  <Select
    bordered={true}
    choiceTransitionName="zoom"
    className="input"
    dropdownMatchSelectWidth={false}
    onChange={[Function]}
    transitionName="slide-up"
    value={7200}
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      clearIcon={<ForwardRef(CloseCircleFilled) />}
      dropdownClassName=""
      dropdownMatchSelectWidth={false}
      inputIcon={[Function]}
      listHeight={256}
      listItemHeight={24}
      menuItemSelectedIcon={null}
      notFoundContent={
        <Context.Consumer>
          [Function]
        </Context.Consumer>
      }
      onChange={[Function]}
      prefixCls="ant-select"
      removeIcon={<ForwardRef(CloseOutlined) />}
      transitionName="slide-up"
      value={7200}
    >
      <ForwardRef(Select)
        choiceTransitionName="zoom"
        className="input"
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        dropdownClassName=""
        dropdownMatchSelectWidth={false}
        inputIcon={[Function]}
        listHeight={256}
        listItemHeight={24}
        menuItemSelectedIcon={null}
        notFoundContent={
          <Context.Consumer>
            [Function]
          </Context.Consumer>
        }
        onChange={[Function]}
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        transitionName="slide-up"
        value={7200}
      >
        <div
          className="ant-select input ant-select-single ant-select-show-arrow"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
        >
          <SelectTrigger
            containerWidth={null}
            dropdownClassName=""
            dropdownMatchSelectWidth={false}
            empty={false}
            getTriggerDOMNode={[Function]}
            popupElement={
              <ForwardRef(OptionList)
                childrenAsData={true}
                defaultActiveFirstOption={true}
                flattenOptions={
                  Array [
                    Object {
                      "data": Object {
                        "children": "Never",
                        "key": "never",
                        "value": null,
                      },
                      "groupOption": false,
                      "key": "never",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__minute__",
                        "label": "Minutes",
                        "options": Array [
                          Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__minute__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 minute",
                        "key": "minute-1",
                        "value": 60,
                      },
                      "groupOption": true,
                      "key": "minute-1",
                    },
                    Object {
                      "data": Object {
                        "children": "5 minutes",
                        "key": "minute-5",
                        "value": 300,
                      },
                      "groupOption": true,
                      "key": "minute-5",
                    },
                    Object {
                      "data": Object {
                        "children": "10 minutes",
                        "key": "minute-10",
                        "value": 600,
                      },
                      "groupOption": true,
                      "key": "minute-10",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__hour__",
                        "label": "Hours",
                        "options": Array [
                          Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__hour__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 hour",
                        "key": "hour-1",
                        "value": 3600,
                      },
                      "groupOption": true,
                      "key": "hour-1",
                    },
                    Object {
                      "data": Object {
                        "children": "10 hours",
                        "key": "hour-10",
                        "value": 36000,
                      },
                      "groupOption": true,
                      "key": "hour-10",
                    },
                    Object {
                      "data": Object {
                        "children": "23 hours",
                        "key": "hour-23",
                        "value": 82800,
                      },
                      "groupOption": true,
                      "key": "hour-23",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__day__",
                        "label": "Days",
                        "options": Array [
                          Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__day__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 day",
                        "key": "day-1",
                        "value": 86400,
                      },
                      "groupOption": true,
                      "key": "day-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 days",
                        "key": "day-2",
                        "value": 172800,
                      },
                      "groupOption": true,
                      "key": "day-2",
                    },
                    Object {
                      "data": Object {
                        "children": "6 days",
                        "key": "day-6",
                        "value": 518400,
                      },
                      "groupOption": true,
                      "key": "day-6",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__week__",
                        "label": "Weeks",
                        "options": Array [
                          Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__week__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 week",
                        "key": "week-1",
                        "value": 604800,
                      },
                      "groupOption": true,
                      "key": "week-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 weeks",
                        "key": "week-2",
                        "value": 1209600,
                      },
                      "groupOption": true,
                      "key": "week-2",
                    },
                  ]
                }
                height={256}
                itemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onActiveValue={[Function]}
                onMouseEnter={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                options={
                  Array [
                    Object {
                      "children": "Never",
                      "key": "never",
                      "value": null,
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__minute__",
                      "label": "Minutes",
                      "options": Array [
                        Object {
                          "children": "1 minute",
                          "key": "minute-1",
                          "value": 60,
                        },
                        Object {
                          "children": "5 minutes",
                          "key": "minute-5",
                          "value": 300,
                        },
                        Object {
                          "children": "10 minutes",
                          "key": "minute-10",
                          "value": 600,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__hour__",
                      "label": "Hours",
                      "options": Array [
                        Object {
                          "children": "1 hour",
                          "key": "hour-1",
                          "value": 3600,
                        },
                        Object {
                          "children": "10 hours",
                          "key": "hour-10",
                          "value": 36000,
                        },
                        Object {
                          "children": "23 hours",
                          "key": "hour-23",
                          "value": 82800,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__day__",
                      "label": "Days",
                      "options": Array [
                        Object {
                          "children": "1 day",
                          "key": "day-1",
                          "value": 86400,
                        },
                        Object {
                          "children": "2 days",
                          "key": "day-2",
                          "value": 172800,
                        },
                        Object {
                          "children": "6 days",
                          "key": "day-6",
                          "value": 518400,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__week__",
                      "label": "Weeks",
                      "options": Array [
                        Object {
                          "children": "1 week",
                          "key": "week-1",
                          "value": 604800,
                        },
                        Object {
                          "children": "2 weeks",
                          "key": "week-2",
                          "value": 1209600,
                        },
                      ],
                    },
                  ]
                }
                prefixCls="ant-select"
                searchValue=""
                values={
                  Set {
                    7200,
                  }
                }
                virtual={false}
              />
            }
            prefixCls="ant-select"
            transitionName="slide-up"
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getTriggerDOMNode={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div>
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "Never",
                            "key": "never",
                            "value": null,
                          },
                          "groupOption": false,
                          "key": "never",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__minute__",
                            "label": "Minutes",
                            "options": Array [
                              Object {
                                "children": "1 minute",
                                "key": "minute-1",
                                "value": 60,
                              },
                              Object {
                                "children": "5 minutes",
                                "key": "minute-5",
                                "value": 300,
                              },
                              Object {
                                "children": "10 minutes",
                                "key": "minute-10",
                                "value": 600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__minute__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          "groupOption": true,
                          "key": "minute-1",
                        },
                        Object {
                          "data": Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          "groupOption": true,
                          "key": "minute-5",
                        },
                        Object {
                          "data": Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                          "groupOption": true,
                          "key": "minute-10",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__hour__",
                            "label": "Hours",
                            "options": Array [
                              Object {
                                "children": "1 hour",
                                "key": "hour-1",
                                "value": 3600,
                              },
                              Object {
                                "children": "10 hours",
                                "key": "hour-10",
                                "value": 36000,
                              },
                              Object {
                                "children": "23 hours",
                                "key": "hour-23",
                                "value": 82800,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__hour__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          "groupOption": true,
                          "key": "hour-1",
                        },
                        Object {
                          "data": Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          "groupOption": true,
                          "key": "hour-10",
                        },
                        Object {
                          "data": Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                          "groupOption": true,
                          "key": "hour-23",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__day__",
                            "label": "Days",
                            "options": Array [
                              Object {
                                "children": "1 day",
                                "key": "day-1",
                                "value": 86400,
                              },
                              Object {
                                "children": "2 days",
                                "key": "day-2",
                                "value": 172800,
                              },
                              Object {
                                "children": "6 days",
                                "key": "day-6",
                                "value": 518400,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__day__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          "groupOption": true,
                          "key": "day-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          "groupOption": true,
                          "key": "day-2",
                        },
                        Object {
                          "data": Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                          "groupOption": true,
                          "key": "day-6",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__week__",
                            "label": "Weeks",
                            "options": Array [
                              Object {
                                "children": "1 week",
                                "key": "week-1",
                                "value": 604800,
                              },
                              Object {
                                "children": "2 weeks",
                                "key": "week-2",
                                "value": 1209600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__week__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          "groupOption": true,
                          "key": "week-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                          "groupOption": true,
                          "key": "week-2",
                        },
                      ]
                    }
                    height={256}
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "Never",
                          "key": "never",
                          "value": null,
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__minute__",
                          "label": "Minutes",
                          "options": Array [
                            Object {
                              "children": "1 minute",
                              "key": "minute-1",
                              "value": 60,
                            },
                            Object {
                              "children": "5 minutes",
                              "key": "minute-5",
                              "value": 300,
                            },
                            Object {
                              "children": "10 minutes",
                              "key": "minute-10",
                              "value": 600,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__hour__",
                          "label": "Hours",
                          "options": Array [
                            Object {
                              "children": "1 hour",
                              "key": "hour-1",
                              "value": 3600,
                            },
                            Object {
                              "children": "10 hours",
                              "key": "hour-10",
                              "value": 36000,
                            },
                            Object {
                              "children": "23 hours",
                              "key": "hour-23",
                              "value": 82800,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__day__",
                          "label": "Days",
                          "options": Array [
                            Object {
                              "children": "1 day",
                              "key": "day-1",
                              "value": 86400,
                            },
                            Object {
                              "children": "2 days",
                              "key": "day-2",
                              "value": 172800,
                            },
                            Object {
                              "children": "6 days",
                              "key": "day-6",
                              "value": 518400,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__week__",
                          "label": "Weeks",
                          "options": Array [
                            Object {
                              "children": "1 week",
                              "key": "week-1",
                              "value": 604800,
                            },
                            Object {
                              "children": "2 weeks",
                              "key": "week-2",
                              "value": 1209600,
                            },
                          ],
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        7200,
                      }
                    }
                    virtual={false}
                  />
                </div>
              }
              popupAlign={Object {}}
              popupClassName=""
              popupPlacement="bottomLeft"
              popupStyle={
                Object {
                  "minWidth": null,
                }
              }
              popupTransitionName="slide-up"
              prefixCls="ant-select-dropdown"
              showAction={Array []}
            >
              <Selector
                accessibilityIndex={0}
                activeValue={null}
                choiceTransitionName="zoom"
                className="input"
                clearIcon={<ForwardRef(CloseCircleFilled) />}
                domRef={
                  Object {
                    "current": <div
                      class="ant-select-selector"
                    >
                      <span
                        class="ant-select-selection-search"
                      >
                        <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />
                      </span>
                      <span
                        class="ant-select-selection-item"
                        title="7200"
                      >
                        7200
                      </span>
                    </div>,
                  }
                }
                dropdownClassName=""
                dropdownMatchSelectWidth={false}
                inputElement={null}
                inputIcon={[Function]}
                key="trigger"
                listHeight={256}
                listItemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onChange={[Function]}
                onSearch={[Function]}
                onSearchSubmit={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                prefixCls="ant-select"
                removeIcon={<ForwardRef(CloseOutlined) />}
                searchValue=""
                showSearch={false}
                tokenWithEnter={false}
                transitionName="slide-up"
                value={7200}
                values={
                  Array [
                    Object {
                      "disabled": undefined,
                      "key": 7200,
                      "label": 7200,
                      "value": 7200,
                    },
                  ]
                }
              >
                <div
                  className="ant-select-selector"
                  onMouseDown={[Function]}
                >
                  <SingleSelector
                    accessibilityIndex={0}
                    activeValue={null}
                    choiceTransitionName="zoom"
                    className="input"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="undefined_list_0"
                              aria-autocomplete="list"
                              aria-controls="undefined_list"
                              aria-haspopup="listbox"
                              aria-owns="undefined_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="7200"
                          >
                            7200
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    dropdownMatchSelectWidth={false}
                    inputElement={null}
                    inputIcon={[Function]}
                    inputRef={
                      Object {
                        "current": <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />,
                      }
                    }
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onInputChange={[Function]}
                    onInputCompositionEnd={[Function]}
                    onInputCompositionStart={[Function]}
                    onInputKeyDown={[Function]}
                    onInputMouseDown={[Function]}
                    onInputPaste={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value={7200}
                    values={
                      Array [
                        Object {
                          "disabled": undefined,
                          "key": 7200,
                          "label": 7200,
                          "value": 7200,
                        },
                      ]
                    }
                  >
                    <span
                      className="ant-select-selection-search"
                    >
                      <Input
                        accessibilityIndex={0}
                        attrs={Object {}}
                        editable={false}
                        inputElement={null}
                        onChange={[Function]}
                        onCompositionEnd={[Function]}
                        onCompositionStart={[Function]}
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onPaste={[Function]}
                        prefixCls="ant-select"
                        value=""
                      >
                        <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autoComplete="off"
                          className="ant-select-selection-search-input"
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          readOnly={true}
                          role="combobox"
                          style={
                            Object {
                              "opacity": 0,
                            }
                          }
                          unselectable="on"
                          value=""
                        />
                      </Input>
                    </span>
                    <span
                      className="ant-select-selection-item"
                      title="7200"
                    >
                      7200
                    </span>
                  </SingleSelector>
                </div>
              </Selector>
            </Trigger>
          </SelectTrigger>
          <TransBtn
            className="ant-select-arrow"
            customizeIcon={[Function]}
            customizeIconProps={
              Object {
                "focused": false,
                "loading": undefined,
                "open": undefined,
                "searchValue": "",
                "showSearch": false,
              }
            }
          >
            <span
              aria-hidden={true}
              className="ant-select-arrow"
              onMouseDown={[Function]}
              style={
                Object {
                  "WebkitUserSelect": "none",
                  "userSelect": "none",
                }
              }
              unselectable="on"
            >
              <ForwardRef(DownOutlined)
                className="ant-select-suffix"
              >
                <AntdIcon
                  className="ant-select-suffix"
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "down",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="down"
                    className="anticon anticon-down ant-select-suffix"
                    role="img"
                  >
                    <IconReact
                      className=""
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        className=""
                        data-icon="down"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-down"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                          key="svg-down-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(DownOutlined)>
            </span>
          </TransBtn>
        </div>
      </ForwardRef(Select)>
    </Select>
  </Select>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "2 Weeks 22:15 Tuesday" Sets to correct interval 1`] = `
<div
  data-testid="interval"
>
  <Select
    bordered={true}
    choiceTransitionName="zoom"
    className="input"
    dropdownMatchSelectWidth={false}
    onChange={[Function]}
    transitionName="slide-up"
    value={1209600}
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      clearIcon={<ForwardRef(CloseCircleFilled) />}
      dropdownClassName=""
      dropdownMatchSelectWidth={false}
      inputIcon={[Function]}
      listHeight={256}
      listItemHeight={24}
      menuItemSelectedIcon={null}
      notFoundContent={
        <Context.Consumer>
          [Function]
        </Context.Consumer>
      }
      onChange={[Function]}
      prefixCls="ant-select"
      removeIcon={<ForwardRef(CloseOutlined) />}
      transitionName="slide-up"
      value={1209600}
    >
      <ForwardRef(Select)
        choiceTransitionName="zoom"
        className="input"
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        dropdownClassName=""
        dropdownMatchSelectWidth={false}
        inputIcon={[Function]}
        listHeight={256}
        listItemHeight={24}
        menuItemSelectedIcon={null}
        notFoundContent={
          <Context.Consumer>
            [Function]
          </Context.Consumer>
        }
        onChange={[Function]}
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        transitionName="slide-up"
        value={1209600}
      >
        <div
          className="ant-select input ant-select-single ant-select-show-arrow"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
        >
          <SelectTrigger
            containerWidth={null}
            dropdownClassName=""
            dropdownMatchSelectWidth={false}
            empty={false}
            getTriggerDOMNode={[Function]}
            popupElement={
              <ForwardRef(OptionList)
                childrenAsData={true}
                defaultActiveFirstOption={true}
                flattenOptions={
                  Array [
                    Object {
                      "data": Object {
                        "children": "Never",
                        "key": "never",
                        "value": null,
                      },
                      "groupOption": false,
                      "key": "never",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__minute__",
                        "label": "Minutes",
                        "options": Array [
                          Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__minute__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 minute",
                        "key": "minute-1",
                        "value": 60,
                      },
                      "groupOption": true,
                      "key": "minute-1",
                    },
                    Object {
                      "data": Object {
                        "children": "5 minutes",
                        "key": "minute-5",
                        "value": 300,
                      },
                      "groupOption": true,
                      "key": "minute-5",
                    },
                    Object {
                      "data": Object {
                        "children": "10 minutes",
                        "key": "minute-10",
                        "value": 600,
                      },
                      "groupOption": true,
                      "key": "minute-10",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__hour__",
                        "label": "Hours",
                        "options": Array [
                          Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__hour__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 hour",
                        "key": "hour-1",
                        "value": 3600,
                      },
                      "groupOption": true,
                      "key": "hour-1",
                    },
                    Object {
                      "data": Object {
                        "children": "10 hours",
                        "key": "hour-10",
                        "value": 36000,
                      },
                      "groupOption": true,
                      "key": "hour-10",
                    },
                    Object {
                      "data": Object {
                        "children": "23 hours",
                        "key": "hour-23",
                        "value": 82800,
                      },
                      "groupOption": true,
                      "key": "hour-23",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__day__",
                        "label": "Days",
                        "options": Array [
                          Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__day__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 day",
                        "key": "day-1",
                        "value": 86400,
                      },
                      "groupOption": true,
                      "key": "day-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 days",
                        "key": "day-2",
                        "value": 172800,
                      },
                      "groupOption": true,
                      "key": "day-2",
                    },
                    Object {
                      "data": Object {
                        "children": "6 days",
                        "key": "day-6",
                        "value": 518400,
                      },
                      "groupOption": true,
                      "key": "day-6",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__week__",
                        "label": "Weeks",
                        "options": Array [
                          Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__week__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 week",
                        "key": "week-1",
                        "value": 604800,
                      },
                      "groupOption": true,
                      "key": "week-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 weeks",
                        "key": "week-2",
                        "value": 1209600,
                      },
                      "groupOption": true,
                      "key": "week-2",
                    },
                  ]
                }
                height={256}
                itemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onActiveValue={[Function]}
                onMouseEnter={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                options={
                  Array [
                    Object {
                      "children": "Never",
                      "key": "never",
                      "value": null,
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__minute__",
                      "label": "Minutes",
                      "options": Array [
                        Object {
                          "children": "1 minute",
                          "key": "minute-1",
                          "value": 60,
                        },
                        Object {
                          "children": "5 minutes",
                          "key": "minute-5",
                          "value": 300,
                        },
                        Object {
                          "children": "10 minutes",
                          "key": "minute-10",
                          "value": 600,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__hour__",
                      "label": "Hours",
                      "options": Array [
                        Object {
                          "children": "1 hour",
                          "key": "hour-1",
                          "value": 3600,
                        },
                        Object {
                          "children": "10 hours",
                          "key": "hour-10",
                          "value": 36000,
                        },
                        Object {
                          "children": "23 hours",
                          "key": "hour-23",
                          "value": 82800,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__day__",
                      "label": "Days",
                      "options": Array [
                        Object {
                          "children": "1 day",
                          "key": "day-1",
                          "value": 86400,
                        },
                        Object {
                          "children": "2 days",
                          "key": "day-2",
                          "value": 172800,
                        },
                        Object {
                          "children": "6 days",
                          "key": "day-6",
                          "value": 518400,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__week__",
                      "label": "Weeks",
                      "options": Array [
                        Object {
                          "children": "1 week",
                          "key": "week-1",
                          "value": 604800,
                        },
                        Object {
                          "children": "2 weeks",
                          "key": "week-2",
                          "value": 1209600,
                        },
                      ],
                    },
                  ]
                }
                prefixCls="ant-select"
                searchValue=""
                values={
                  Set {
                    1209600,
                  }
                }
                virtual={false}
              />
            }
            prefixCls="ant-select"
            transitionName="slide-up"
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getTriggerDOMNode={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div>
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "Never",
                            "key": "never",
                            "value": null,
                          },
                          "groupOption": false,
                          "key": "never",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__minute__",
                            "label": "Minutes",
                            "options": Array [
                              Object {
                                "children": "1 minute",
                                "key": "minute-1",
                                "value": 60,
                              },
                              Object {
                                "children": "5 minutes",
                                "key": "minute-5",
                                "value": 300,
                              },
                              Object {
                                "children": "10 minutes",
                                "key": "minute-10",
                                "value": 600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__minute__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          "groupOption": true,
                          "key": "minute-1",
                        },
                        Object {
                          "data": Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          "groupOption": true,
                          "key": "minute-5",
                        },
                        Object {
                          "data": Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                          "groupOption": true,
                          "key": "minute-10",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__hour__",
                            "label": "Hours",
                            "options": Array [
                              Object {
                                "children": "1 hour",
                                "key": "hour-1",
                                "value": 3600,
                              },
                              Object {
                                "children": "10 hours",
                                "key": "hour-10",
                                "value": 36000,
                              },
                              Object {
                                "children": "23 hours",
                                "key": "hour-23",
                                "value": 82800,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__hour__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          "groupOption": true,
                          "key": "hour-1",
                        },
                        Object {
                          "data": Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          "groupOption": true,
                          "key": "hour-10",
                        },
                        Object {
                          "data": Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                          "groupOption": true,
                          "key": "hour-23",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__day__",
                            "label": "Days",
                            "options": Array [
                              Object {
                                "children": "1 day",
                                "key": "day-1",
                                "value": 86400,
                              },
                              Object {
                                "children": "2 days",
                                "key": "day-2",
                                "value": 172800,
                              },
                              Object {
                                "children": "6 days",
                                "key": "day-6",
                                "value": 518400,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__day__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          "groupOption": true,
                          "key": "day-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          "groupOption": true,
                          "key": "day-2",
                        },
                        Object {
                          "data": Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                          "groupOption": true,
                          "key": "day-6",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__week__",
                            "label": "Weeks",
                            "options": Array [
                              Object {
                                "children": "1 week",
                                "key": "week-1",
                                "value": 604800,
                              },
                              Object {
                                "children": "2 weeks",
                                "key": "week-2",
                                "value": 1209600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__week__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          "groupOption": true,
                          "key": "week-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                          "groupOption": true,
                          "key": "week-2",
                        },
                      ]
                    }
                    height={256}
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "Never",
                          "key": "never",
                          "value": null,
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__minute__",
                          "label": "Minutes",
                          "options": Array [
                            Object {
                              "children": "1 minute",
                              "key": "minute-1",
                              "value": 60,
                            },
                            Object {
                              "children": "5 minutes",
                              "key": "minute-5",
                              "value": 300,
                            },
                            Object {
                              "children": "10 minutes",
                              "key": "minute-10",
                              "value": 600,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__hour__",
                          "label": "Hours",
                          "options": Array [
                            Object {
                              "children": "1 hour",
                              "key": "hour-1",
                              "value": 3600,
                            },
                            Object {
                              "children": "10 hours",
                              "key": "hour-10",
                              "value": 36000,
                            },
                            Object {
                              "children": "23 hours",
                              "key": "hour-23",
                              "value": 82800,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__day__",
                          "label": "Days",
                          "options": Array [
                            Object {
                              "children": "1 day",
                              "key": "day-1",
                              "value": 86400,
                            },
                            Object {
                              "children": "2 days",
                              "key": "day-2",
                              "value": 172800,
                            },
                            Object {
                              "children": "6 days",
                              "key": "day-6",
                              "value": 518400,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__week__",
                          "label": "Weeks",
                          "options": Array [
                            Object {
                              "children": "1 week",
                              "key": "week-1",
                              "value": 604800,
                            },
                            Object {
                              "children": "2 weeks",
                              "key": "week-2",
                              "value": 1209600,
                            },
                          ],
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        1209600,
                      }
                    }
                    virtual={false}
                  />
                </div>
              }
              popupAlign={Object {}}
              popupClassName=""
              popupPlacement="bottomLeft"
              popupStyle={
                Object {
                  "minWidth": null,
                }
              }
              popupTransitionName="slide-up"
              prefixCls="ant-select-dropdown"
              showAction={Array []}
            >
              <Selector
                accessibilityIndex={0}
                activeValue={null}
                choiceTransitionName="zoom"
                className="input"
                clearIcon={<ForwardRef(CloseCircleFilled) />}
                domRef={
                  Object {
                    "current": <div
                      class="ant-select-selector"
                    >
                      <span
                        class="ant-select-selection-search"
                      >
                        <input
                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                          aria-autocomplete="list"
                          aria-controls="rc_select_TEST_OR_SSR_list"
                          aria-haspopup="listbox"
                          aria-owns="rc_select_TEST_OR_SSR_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          id="rc_select_TEST_OR_SSR"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />
                      </span>
                      <span
                        class="ant-select-selection-item"
                        title="2 weeks"
                      >
                        2 weeks
                      </span>
                    </div>,
                  }
                }
                dropdownClassName=""
                dropdownMatchSelectWidth={false}
                inputElement={null}
                inputIcon={[Function]}
                key="trigger"
                listHeight={256}
                listItemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onChange={[Function]}
                onSearch={[Function]}
                onSearchSubmit={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                prefixCls="ant-select"
                removeIcon={<ForwardRef(CloseOutlined) />}
                searchValue=""
                showSearch={false}
                tokenWithEnter={false}
                transitionName="slide-up"
                value={1209600}
                values={
                  Array [
                    Object {
                      "disabled": undefined,
                      "key": 1209600,
                      "label": "2 weeks",
                      "value": 1209600,
                    },
                  ]
                }
              >
                <div
                  className="ant-select-selector"
                  onMouseDown={[Function]}
                >
                  <SingleSelector
                    accessibilityIndex={0}
                    activeValue={null}
                    choiceTransitionName="zoom"
                    className="input"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="2 weeks"
                          >
                            2 weeks
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    dropdownMatchSelectWidth={false}
                    inputElement={null}
                    inputIcon={[Function]}
                    inputRef={
                      Object {
                        "current": <input
                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                          aria-autocomplete="list"
                          aria-controls="rc_select_TEST_OR_SSR_list"
                          aria-haspopup="listbox"
                          aria-owns="rc_select_TEST_OR_SSR_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          id="rc_select_TEST_OR_SSR"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />,
                      }
                    }
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onInputChange={[Function]}
                    onInputCompositionEnd={[Function]}
                    onInputCompositionStart={[Function]}
                    onInputKeyDown={[Function]}
                    onInputMouseDown={[Function]}
                    onInputPaste={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value={1209600}
                    values={
                      Array [
                        Object {
                          "disabled": undefined,
                          "key": 1209600,
                          "label": "2 weeks",
                          "value": 1209600,
                        },
                      ]
                    }
                  >
                    <span
                      className="ant-select-selection-search"
                    >
                      <Input
                        accessibilityIndex={0}
                        attrs={Object {}}
                        editable={false}
                        inputElement={null}
                        onChange={[Function]}
                        onCompositionEnd={[Function]}
                        onCompositionStart={[Function]}
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onPaste={[Function]}
                        prefixCls="ant-select"
                        value=""
                      >
                        <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autoComplete="off"
                          className="ant-select-selection-search-input"
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          readOnly={true}
                          role="combobox"
                          style={
                            Object {
                              "opacity": 0,
                            }
                          }
                          unselectable="on"
                          value=""
                        />
                      </Input>
                    </span>
                    <span
                      className="ant-select-selection-item"
                      title="2 weeks"
                    >
                      2 weeks
                    </span>
                  </SingleSelector>
                </div>
              </Selector>
            </Trigger>
          </SelectTrigger>
          <TransBtn
            className="ant-select-arrow"
            customizeIcon={[Function]}
            customizeIconProps={
              Object {
                "focused": false,
                "loading": undefined,
                "open": undefined,
                "searchValue": "",
                "showSearch": false,
              }
            }
          >
            <span
              aria-hidden={true}
              className="ant-select-arrow"
              onMouseDown={[Function]}
              style={
                Object {
                  "WebkitUserSelect": "none",
                  "userSelect": "none",
                }
              }
              unselectable="on"
            >
              <ForwardRef(DownOutlined)
                className="ant-select-suffix"
              >
                <AntdIcon
                  className="ant-select-suffix"
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "down",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="down"
                    className="anticon anticon-down ant-select-suffix"
                    role="img"
                  >
                    <IconReact
                      className=""
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        className=""
                        data-icon="down"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-down"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                          key="svg-down-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(DownOutlined)>
            </span>
          </TransBtn>
        </div>
      </ForwardRef(Select)>
    </Select>
  </Select>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "2 Weeks 22:15 Tuesday" Sets to correct time 1`] = `
<div
  data-testid="time"
>
  <TimeEditor
    defaultValue={"1999-12-31T22:15:00.000Z"}
    onChange={[Function]}
  >
    <TimePicker
      allowClear={false}
      format="HH:mm"
      minuteStep={5}
      onChange={[Function]}
      value={"1999-12-31T22:15:00.000Z"}
    >
      <TimePicker
        allowClear={false}
        format="HH:mm"
        minuteStep={5}
        onChange={[Function]}
        value={"1999-12-31T22:15:00.000Z"}
      >
        <LocaleReceiver
          componentName="DatePicker"
          defaultLocale={[Function]}
        >
          <Picker
            allowClear={false}
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            components={
              Object {
                "button": [Function],
                "rangeItem": [Function],
              }
            }
            format="HH:mm"
            generateConfig={
              Object {
                "addDate": [Function],
                "addMonth": [Function],
                "addYear": [Function],
                "getDate": [Function],
                "getHour": [Function],
                "getMinute": [Function],
                "getMonth": [Function],
                "getNow": [Function],
                "getSecond": [Function],
                "getWeekDay": [Function],
                "getYear": [Function],
                "isAfter": [Function],
                "isValidate": [Function],
                "locale": Object {
                  "format": [Function],
                  "getShortMonths": [Function],
                  "getShortWeekDays": [Function],
                  "getWeek": [Function],
                  "getWeekFirstDay": [Function],
                  "parse": [Function],
                },
                "setDate": [Function],
                "setHour": [Function],
                "setMinute": [Function],
                "setMonth": [Function],
                "setSecond": [Function],
                "setYear": [Function],
              }
            }
            locale={
              Object {
                "backToToday": "Back to today",
                "clear": "Clear",
                "dateFormat": "M/D/YYYY",
                "dateSelect": "select date",
                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                "dayFormat": "D",
                "decadeSelect": "Choose a decade",
                "locale": "en_US",
                "month": "Month",
                "monthBeforeYear": true,
                "monthPlaceholder": "Select month",
                "monthSelect": "Choose a month",
                "nextCentury": "Next century",
                "nextDecade": "Next decade",
                "nextMonth": "Next month (PageDown)",
                "nextYear": "Next year (Control + right)",
                "now": "Now",
                "ok": "Ok",
                "placeholder": "Select date",
                "previousCentury": "Last century",
                "previousDecade": "Last decade",
                "previousMonth": "Previous month (PageUp)",
                "previousYear": "Last year (Control + left)",
                "quarterPlaceholder": "Select quarter",
                "rangeMonthPlaceholder": Array [
                  "Start month",
                  "End month",
                ],
                "rangePlaceholder": Array [
                  "Start date",
                  "End date",
                ],
                "rangeWeekPlaceholder": Array [
                  "Start week",
                  "End week",
                ],
                "rangeYearPlaceholder": Array [
                  "Start year",
                  "End year",
                ],
                "timeSelect": "select time",
                "today": "Today",
                "weekPlaceholder": "Select week",
                "weekSelect": "Choose a week",
                "year": "Year",
                "yearFormat": "YYYY",
                "yearPlaceholder": "Select year",
                "yearSelect": "Choose a year",
              }
            }
            minuteStep={5}
            nextIcon={
              <span
                className="ant-picker-next-icon"
              />
            }
            onChange={[Function]}
            picker="time"
            placeholder="Select time"
            prefixCls="ant-picker"
            prevIcon={
              <span
                className="ant-picker-prev-icon"
              />
            }
            showSecond={false}
            showToday={true}
            suffixIcon={<ForwardRef(ClockCircleOutlined) />}
            superNextIcon={
              <span
                className="ant-picker-super-next-icon"
              />
            }
            superPrevIcon={
              <span
                className="ant-picker-super-prev-icon"
              />
            }
            transitionName="slide-up"
            value={"1999-12-31T22:15:00.000Z"}
          >
            <InnerPicker
              allowClear={false}
              className=""
              clearIcon={<ForwardRef(CloseCircleFilled) />}
              components={
                Object {
                  "button": [Function],
                  "rangeItem": [Function],
                }
              }
              format="HH:mm"
              generateConfig={
                Object {
                  "addDate": [Function],
                  "addMonth": [Function],
                  "addYear": [Function],
                  "getDate": [Function],
                  "getHour": [Function],
                  "getMinute": [Function],
                  "getMonth": [Function],
                  "getNow": [Function],
                  "getSecond": [Function],
                  "getWeekDay": [Function],
                  "getYear": [Function],
                  "isAfter": [Function],
                  "isValidate": [Function],
                  "locale": Object {
                    "format": [Function],
                    "getShortMonths": [Function],
                    "getShortWeekDays": [Function],
                    "getWeek": [Function],
                    "getWeekFirstDay": [Function],
                    "parse": [Function],
                  },
                  "setDate": [Function],
                  "setHour": [Function],
                  "setMinute": [Function],
                  "setMonth": [Function],
                  "setSecond": [Function],
                  "setYear": [Function],
                }
              }
              locale={
                Object {
                  "backToToday": "Back to today",
                  "clear": "Clear",
                  "dateFormat": "M/D/YYYY",
                  "dateSelect": "select date",
                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                  "dayFormat": "D",
                  "decadeSelect": "Choose a decade",
                  "locale": "en_US",
                  "month": "Month",
                  "monthBeforeYear": true,
                  "monthPlaceholder": "Select month",
                  "monthSelect": "Choose a month",
                  "nextCentury": "Next century",
                  "nextDecade": "Next decade",
                  "nextMonth": "Next month (PageDown)",
                  "nextYear": "Next year (Control + right)",
                  "now": "Now",
                  "ok": "Ok",
                  "placeholder": "Select date",
                  "previousCentury": "Last century",
                  "previousDecade": "Last decade",
                  "previousMonth": "Previous month (PageUp)",
                  "previousYear": "Last year (Control + left)",
                  "quarterPlaceholder": "Select quarter",
                  "rangeMonthPlaceholder": Array [
                    "Start month",
                    "End month",
                  ],
                  "rangePlaceholder": Array [
                    "Start date",
                    "End date",
                  ],
                  "rangeWeekPlaceholder": Array [
                    "Start week",
                    "End week",
                  ],
                  "rangeYearPlaceholder": Array [
                    "Start year",
                    "End year",
                  ],
                  "timeSelect": "select time",
                  "today": "Today",
                  "weekPlaceholder": "Select week",
                  "weekSelect": "Choose a week",
                  "year": "Year",
                  "yearFormat": "YYYY",
                  "yearPlaceholder": "Select year",
                  "yearSelect": "Choose a year",
                }
              }
              minuteStep={5}
              nextIcon={
                <span
                  className="ant-picker-next-icon"
                />
              }
              onChange={[Function]}
              picker="time"
              pickerRef={
                Object {
                  "current": Object {
                    "blur": [Function],
                    "focus": [Function],
                  },
                }
              }
              placeholder="Select time"
              prefixCls="ant-picker"
              prevIcon={
                <span
                  className="ant-picker-prev-icon"
                />
              }
              showSecond={false}
              showToday={true}
              suffixIcon={<ForwardRef(ClockCircleOutlined) />}
              superNextIcon={
                <span
                  className="ant-picker-super-next-icon"
                />
              }
              superPrevIcon={
                <span
                  className="ant-picker-super-prev-icon"
                />
              }
              transitionName="slide-up"
              value={"1999-12-31T22:15:00.000Z"}
            >
              <PickerTrigger
                popupElement={
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                  >
                    <PickerPanel
                      allowClear={false}
                      className="ant-picker-panel-focused"
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      components={
                        Object {
                          "button": [Function],
                          "rangeItem": [Function],
                        }
                      }
                      format="HH:mm"
                      generateConfig={
                        Object {
                          "addDate": [Function],
                          "addMonth": [Function],
                          "addYear": [Function],
                          "getDate": [Function],
                          "getHour": [Function],
                          "getMinute": [Function],
                          "getMonth": [Function],
                          "getNow": [Function],
                          "getSecond": [Function],
                          "getWeekDay": [Function],
                          "getYear": [Function],
                          "isAfter": [Function],
                          "isValidate": [Function],
                          "locale": Object {
                            "format": [Function],
                            "getShortMonths": [Function],
                            "getShortWeekDays": [Function],
                            "getWeek": [Function],
                            "getWeekFirstDay": [Function],
                            "parse": [Function],
                          },
                          "setDate": [Function],
                          "setHour": [Function],
                          "setMinute": [Function],
                          "setMonth": [Function],
                          "setSecond": [Function],
                          "setYear": [Function],
                        }
                      }
                      locale={
                        Object {
                          "backToToday": "Back to today",
                          "clear": "Clear",
                          "dateFormat": "M/D/YYYY",
                          "dateSelect": "select date",
                          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                          "dayFormat": "D",
                          "decadeSelect": "Choose a decade",
                          "locale": "en_US",
                          "month": "Month",
                          "monthBeforeYear": true,
                          "monthPlaceholder": "Select month",
                          "monthSelect": "Choose a month",
                          "nextCentury": "Next century",
                          "nextDecade": "Next decade",
                          "nextMonth": "Next month (PageDown)",
                          "nextYear": "Next year (Control + right)",
                          "now": "Now",
                          "ok": "Ok",
                          "placeholder": "Select date",
                          "previousCentury": "Last century",
                          "previousDecade": "Last decade",
                          "previousMonth": "Previous month (PageUp)",
                          "previousYear": "Last year (Control + left)",
                          "quarterPlaceholder": "Select quarter",
                          "rangeMonthPlaceholder": Array [
                            "Start month",
                            "End month",
                          ],
                          "rangePlaceholder": Array [
                            "Start date",
                            "End date",
                          ],
                          "rangeWeekPlaceholder": Array [
                            "Start week",
                            "End week",
                          ],
                          "rangeYearPlaceholder": Array [
                            "Start year",
                            "End year",
                          ],
                          "timeSelect": "select time",
                          "today": "Today",
                          "weekPlaceholder": "Select week",
                          "weekSelect": "Choose a week",
                          "year": "Year",
                          "yearFormat": "YYYY",
                          "yearPlaceholder": "Select year",
                          "yearSelect": "Choose a year",
                        }
                      }
                      minuteStep={5}
                      nextIcon={
                        <span
                          className="ant-picker-next-icon"
                        />
                      }
                      onChange={[Function]}
                      picker="time"
                      pickerRef={
                        Object {
                          "current": Object {
                            "blur": [Function],
                            "focus": [Function],
                          },
                        }
                      }
                      placeholder="Select time"
                      prefixCls="ant-picker"
                      prevIcon={
                        <span
                          className="ant-picker-prev-icon"
                        />
                      }
                      showSecond={false}
                      showToday={true}
                      suffixIcon={<ForwardRef(ClockCircleOutlined) />}
                      superNextIcon={
                        <span
                          className="ant-picker-super-next-icon"
                        />
                      }
                      superPrevIcon={
                        <span
                          className="ant-picker-super-prev-icon"
                        />
                      }
                      tabIndex={-1}
                      transitionName="slide-up"
                      value={"1999-12-31T22:15:00.000Z"}
                    />
                  </div>
                }
                popupPlacement="bottomLeft"
                prefixCls="ant-picker"
                transitionName="slide-up"
                visible={false}
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div
                      className="ant-picker-panel-container"
                      onMouseDown={[Function]}
                    >
                      <PickerPanel
                        allowClear={false}
                        className="ant-picker-panel-focused"
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        components={
                          Object {
                            "button": [Function],
                            "rangeItem": [Function],
                          }
                        }
                        format="HH:mm"
                        generateConfig={
                          Object {
                            "addDate": [Function],
                            "addMonth": [Function],
                            "addYear": [Function],
                            "getDate": [Function],
                            "getHour": [Function],
                            "getMinute": [Function],
                            "getMonth": [Function],
                            "getNow": [Function],
                            "getSecond": [Function],
                            "getWeekDay": [Function],
                            "getYear": [Function],
                            "isAfter": [Function],
                            "isValidate": [Function],
                            "locale": Object {
                              "format": [Function],
                              "getShortMonths": [Function],
                              "getShortWeekDays": [Function],
                              "getWeek": [Function],
                              "getWeekFirstDay": [Function],
                              "parse": [Function],
                            },
                            "setDate": [Function],
                            "setHour": [Function],
                            "setMinute": [Function],
                            "setMonth": [Function],
                            "setSecond": [Function],
                            "setYear": [Function],
                          }
                        }
                        locale={
                          Object {
                            "backToToday": "Back to today",
                            "clear": "Clear",
                            "dateFormat": "M/D/YYYY",
                            "dateSelect": "select date",
                            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                            "dayFormat": "D",
                            "decadeSelect": "Choose a decade",
                            "locale": "en_US",
                            "month": "Month",
                            "monthBeforeYear": true,
                            "monthPlaceholder": "Select month",
                            "monthSelect": "Choose a month",
                            "nextCentury": "Next century",
                            "nextDecade": "Next decade",
                            "nextMonth": "Next month (PageDown)",
                            "nextYear": "Next year (Control + right)",
                            "now": "Now",
                            "ok": "Ok",
                            "placeholder": "Select date",
                            "previousCentury": "Last century",
                            "previousDecade": "Last decade",
                            "previousMonth": "Previous month (PageUp)",
                            "previousYear": "Last year (Control + left)",
                            "quarterPlaceholder": "Select quarter",
                            "rangeMonthPlaceholder": Array [
                              "Start month",
                              "End month",
                            ],
                            "rangePlaceholder": Array [
                              "Start date",
                              "End date",
                            ],
                            "rangeWeekPlaceholder": Array [
                              "Start week",
                              "End week",
                            ],
                            "rangeYearPlaceholder": Array [
                              "Start year",
                              "End year",
                            ],
                            "timeSelect": "select time",
                            "today": "Today",
                            "weekPlaceholder": "Select week",
                            "weekSelect": "Choose a week",
                            "year": "Year",
                            "yearFormat": "YYYY",
                            "yearPlaceholder": "Select year",
                            "yearSelect": "Choose a year",
                          }
                        }
                        minuteStep={5}
                        nextIcon={
                          <span
                            className="ant-picker-next-icon"
                          />
                        }
                        onChange={[Function]}
                        picker="time"
                        pickerRef={
                          Object {
                            "current": Object {
                              "blur": [Function],
                              "focus": [Function],
                            },
                          }
                        }
                        placeholder="Select time"
                        prefixCls="ant-picker"
                        prevIcon={
                          <span
                            className="ant-picker-prev-icon"
                          />
                        }
                        showSecond={false}
                        showToday={true}
                        suffixIcon={<ForwardRef(ClockCircleOutlined) />}
                        superNextIcon={
                          <span
                            className="ant-picker-super-next-icon"
                          />
                        }
                        superPrevIcon={
                          <span
                            className="ant-picker-super-prev-icon"
                          />
                        }
                        tabIndex={-1}
                        transitionName="slide-up"
                        value={"1999-12-31T22:15:00.000Z"}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={Object {}}
                  popupTransitionName="slide-up"
                  popupVisible={false}
                  prefixCls="ant-picker-dropdown"
                  showAction={Array []}
                >
                  <div
                    className="ant-picker"
                    key="trigger"
                    onMouseUp={[Function]}
                  >
                    <div
                      className="ant-picker-input"
                    >
                      <input
                        autoComplete="off"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        placeholder="Select time"
                        readOnly={true}
                        size={10}
                        title=""
                        value=""
                      />
                      <span
                        className="ant-picker-suffix"
                      >
                        <ForwardRef(ClockCircleOutlined)>
                          <AntdIcon
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z",
                                      },
                                      "tag": "path",
                                    },
                                    Object {
                                      "attrs": Object {
                                        "d": "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "clock-circle",
                                "theme": "outlined",
                              }
                            }
                          >
                            <span
                              aria-label="clock-circle"
                              className="anticon anticon-clock-circle"
                              role="img"
                            >
                              <IconReact
                                className=""
                                icon={
                                  Object {
                                    "icon": Object {
                                      "attrs": Object {
                                        "focusable": "false",
                                        "viewBox": "64 64 896 896",
                                      },
                                      "children": Array [
                                        Object {
                                          "attrs": Object {
                                            "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z",
                                          },
                                          "tag": "path",
                                        },
                                        Object {
                                          "attrs": Object {
                                            "d": "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z",
                                          },
                                          "tag": "path",
                                        },
                                      ],
                                      "tag": "svg",
                                    },
                                    "name": "clock-circle",
                                    "theme": "outlined",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  className=""
                                  data-icon="clock-circle"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  key="svg-clock-circle"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
                                    key="svg-clock-circle-svg-0"
                                  />
                                  <path
                                    d="M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z"
                                    key="svg-clock-circle-svg-1"
                                  />
                                </svg>
                              </IconReact>
                            </span>
                          </AntdIcon>
                        </ForwardRef(ClockCircleOutlined)>
                      </span>
                    </div>
                  </div>
                </Trigger>
              </PickerTrigger>
            </InnerPicker>
          </Picker>
        </LocaleReceiver>
      </TimePicker>
    </TimePicker>
    <span
      className="utc"
      data-testid="utc"
    >
      (
      22:15
       UTC)
    </span>
  </TimeEditor>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "2 Weeks 22:15 Tuesday" Sets to correct weekday 1`] = `
<div
  data-testid="weekday"
>
  <ForwardRef
    defaultValue="Mon"
    onChange={[Function]}
    size="medium"
  >
    <div
      className="ant-radio-group ant-radio-group-outline ant-radio-group-medium"
    >
      <ForwardRef(RadioButton)
        className="input"
        key="Sun"
        value="Sun"
      >
        <Radio
          checked={false}
          className="input"
          prefixCls="ant-radio-button"
          type="radio"
          value="Sun"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Sun"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Sun"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              S
            </span>
          </label>
        </Radio>
      </ForwardRef(RadioButton)>
      <ForwardRef(RadioButton)
        className="input"
        key="Mon"
        value="Mon"
      >
        <Radio
          checked={true}
          className="input"
          prefixCls="ant-radio-button"
          type="radio"
          value="Mon"
        >
          <label
            className="input ant-radio-button-wrapper ant-radio-button-wrapper-checked"
          >
            <Checkbox
              checked={true}
              className=""
              defaultChecked={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Mon"
            >
              <span
                className="ant-radio-button ant-radio-button-checked"
                style={Object {}}
              >
                <input
                  checked={true}
                  className="ant-radio-button-input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Mon"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              M
            </span>
          </label>
        </Radio>
      </ForwardRef(RadioButton)>
      <ForwardRef(RadioButton)
        className="input"
        key="Tue"
        value="Tue"
      >
        <Radio
          checked={false}
          className="input"
          prefixCls="ant-radio-button"
          type="radio"
          value="Tue"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Tue"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Tue"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              T
            </span>
          </label>
        </Radio>
      </ForwardRef(RadioButton)>
      <ForwardRef(RadioButton)
        className="input"
        key="Wed"
        value="Wed"
      >
        <Radio
          checked={false}
          className="input"
          prefixCls="ant-radio-button"
          type="radio"
          value="Wed"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Wed"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Wed"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              W
            </span>
          </label>
        </Radio>
      </ForwardRef(RadioButton)>
      <ForwardRef(RadioButton)
        className="input"
        key="Thu"
        value="Thu"
      >
        <Radio
          checked={false}
          className="input"
          prefixCls="ant-radio-button"
          type="radio"
          value="Thu"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Thu"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Thu"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              T
            </span>
          </label>
        </Radio>
      </ForwardRef(RadioButton)>
      <ForwardRef(RadioButton)
        className="input"
        key="Fri"
        value="Fri"
      >
        <Radio
          checked={false}
          className="input"
          prefixCls="ant-radio-button"
          type="radio"
          value="Fri"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Fri"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Fri"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              F
            </span>
          </label>
        </Radio>
      </ForwardRef(RadioButton)>
      <ForwardRef(RadioButton)
        className="input"
        key="Sat"
        value="Sat"
      >
        <Radio
          checked={false}
          className="input"
          prefixCls="ant-radio-button"
          type="radio"
          value="Sat"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Sat"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Sat"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              S
            </span>
          </label>
        </Radio>
      </ForwardRef(RadioButton)>
    </div>
  </ForwardRef>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "5 Minutes" 1`] = `
<div
  data-testid="interval"
>
  <Select
    bordered={true}
    choiceTransitionName="zoom"
    className="input"
    dropdownMatchSelectWidth={false}
    onChange={[Function]}
    transitionName="slide-up"
    value={300}
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      clearIcon={<ForwardRef(CloseCircleFilled) />}
      dropdownClassName=""
      dropdownMatchSelectWidth={false}
      inputIcon={[Function]}
      listHeight={256}
      listItemHeight={24}
      menuItemSelectedIcon={null}
      notFoundContent={
        <Context.Consumer>
          [Function]
        </Context.Consumer>
      }
      onChange={[Function]}
      prefixCls="ant-select"
      removeIcon={<ForwardRef(CloseOutlined) />}
      transitionName="slide-up"
      value={300}
    >
      <ForwardRef(Select)
        choiceTransitionName="zoom"
        className="input"
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        dropdownClassName=""
        dropdownMatchSelectWidth={false}
        inputIcon={[Function]}
        listHeight={256}
        listItemHeight={24}
        menuItemSelectedIcon={null}
        notFoundContent={
          <Context.Consumer>
            [Function]
          </Context.Consumer>
        }
        onChange={[Function]}
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        transitionName="slide-up"
        value={300}
      >
        <div
          className="ant-select input ant-select-single ant-select-show-arrow"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
        >
          <SelectTrigger
            containerWidth={null}
            dropdownClassName=""
            dropdownMatchSelectWidth={false}
            empty={false}
            getTriggerDOMNode={[Function]}
            popupElement={
              <ForwardRef(OptionList)
                childrenAsData={true}
                defaultActiveFirstOption={true}
                flattenOptions={
                  Array [
                    Object {
                      "data": Object {
                        "children": "Never",
                        "key": "never",
                        "value": null,
                      },
                      "groupOption": false,
                      "key": "never",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__minute__",
                        "label": "Minutes",
                        "options": Array [
                          Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__minute__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 minute",
                        "key": "minute-1",
                        "value": 60,
                      },
                      "groupOption": true,
                      "key": "minute-1",
                    },
                    Object {
                      "data": Object {
                        "children": "5 minutes",
                        "key": "minute-5",
                        "value": 300,
                      },
                      "groupOption": true,
                      "key": "minute-5",
                    },
                    Object {
                      "data": Object {
                        "children": "10 minutes",
                        "key": "minute-10",
                        "value": 600,
                      },
                      "groupOption": true,
                      "key": "minute-10",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__hour__",
                        "label": "Hours",
                        "options": Array [
                          Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__hour__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 hour",
                        "key": "hour-1",
                        "value": 3600,
                      },
                      "groupOption": true,
                      "key": "hour-1",
                    },
                    Object {
                      "data": Object {
                        "children": "10 hours",
                        "key": "hour-10",
                        "value": 36000,
                      },
                      "groupOption": true,
                      "key": "hour-10",
                    },
                    Object {
                      "data": Object {
                        "children": "23 hours",
                        "key": "hour-23",
                        "value": 82800,
                      },
                      "groupOption": true,
                      "key": "hour-23",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__day__",
                        "label": "Days",
                        "options": Array [
                          Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__day__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 day",
                        "key": "day-1",
                        "value": 86400,
                      },
                      "groupOption": true,
                      "key": "day-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 days",
                        "key": "day-2",
                        "value": 172800,
                      },
                      "groupOption": true,
                      "key": "day-2",
                    },
                    Object {
                      "data": Object {
                        "children": "6 days",
                        "key": "day-6",
                        "value": 518400,
                      },
                      "groupOption": true,
                      "key": "day-6",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__week__",
                        "label": "Weeks",
                        "options": Array [
                          Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__week__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 week",
                        "key": "week-1",
                        "value": 604800,
                      },
                      "groupOption": true,
                      "key": "week-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 weeks",
                        "key": "week-2",
                        "value": 1209600,
                      },
                      "groupOption": true,
                      "key": "week-2",
                    },
                  ]
                }
                height={256}
                itemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onActiveValue={[Function]}
                onMouseEnter={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                options={
                  Array [
                    Object {
                      "children": "Never",
                      "key": "never",
                      "value": null,
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__minute__",
                      "label": "Minutes",
                      "options": Array [
                        Object {
                          "children": "1 minute",
                          "key": "minute-1",
                          "value": 60,
                        },
                        Object {
                          "children": "5 minutes",
                          "key": "minute-5",
                          "value": 300,
                        },
                        Object {
                          "children": "10 minutes",
                          "key": "minute-10",
                          "value": 600,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__hour__",
                      "label": "Hours",
                      "options": Array [
                        Object {
                          "children": "1 hour",
                          "key": "hour-1",
                          "value": 3600,
                        },
                        Object {
                          "children": "10 hours",
                          "key": "hour-10",
                          "value": 36000,
                        },
                        Object {
                          "children": "23 hours",
                          "key": "hour-23",
                          "value": 82800,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__day__",
                      "label": "Days",
                      "options": Array [
                        Object {
                          "children": "1 day",
                          "key": "day-1",
                          "value": 86400,
                        },
                        Object {
                          "children": "2 days",
                          "key": "day-2",
                          "value": 172800,
                        },
                        Object {
                          "children": "6 days",
                          "key": "day-6",
                          "value": 518400,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__week__",
                      "label": "Weeks",
                      "options": Array [
                        Object {
                          "children": "1 week",
                          "key": "week-1",
                          "value": 604800,
                        },
                        Object {
                          "children": "2 weeks",
                          "key": "week-2",
                          "value": 1209600,
                        },
                      ],
                    },
                  ]
                }
                prefixCls="ant-select"
                searchValue=""
                values={
                  Set {
                    300,
                  }
                }
                virtual={false}
              />
            }
            prefixCls="ant-select"
            transitionName="slide-up"
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getTriggerDOMNode={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div>
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "Never",
                            "key": "never",
                            "value": null,
                          },
                          "groupOption": false,
                          "key": "never",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__minute__",
                            "label": "Minutes",
                            "options": Array [
                              Object {
                                "children": "1 minute",
                                "key": "minute-1",
                                "value": 60,
                              },
                              Object {
                                "children": "5 minutes",
                                "key": "minute-5",
                                "value": 300,
                              },
                              Object {
                                "children": "10 minutes",
                                "key": "minute-10",
                                "value": 600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__minute__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          "groupOption": true,
                          "key": "minute-1",
                        },
                        Object {
                          "data": Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          "groupOption": true,
                          "key": "minute-5",
                        },
                        Object {
                          "data": Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                          "groupOption": true,
                          "key": "minute-10",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__hour__",
                            "label": "Hours",
                            "options": Array [
                              Object {
                                "children": "1 hour",
                                "key": "hour-1",
                                "value": 3600,
                              },
                              Object {
                                "children": "10 hours",
                                "key": "hour-10",
                                "value": 36000,
                              },
                              Object {
                                "children": "23 hours",
                                "key": "hour-23",
                                "value": 82800,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__hour__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          "groupOption": true,
                          "key": "hour-1",
                        },
                        Object {
                          "data": Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          "groupOption": true,
                          "key": "hour-10",
                        },
                        Object {
                          "data": Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                          "groupOption": true,
                          "key": "hour-23",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__day__",
                            "label": "Days",
                            "options": Array [
                              Object {
                                "children": "1 day",
                                "key": "day-1",
                                "value": 86400,
                              },
                              Object {
                                "children": "2 days",
                                "key": "day-2",
                                "value": 172800,
                              },
                              Object {
                                "children": "6 days",
                                "key": "day-6",
                                "value": 518400,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__day__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          "groupOption": true,
                          "key": "day-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          "groupOption": true,
                          "key": "day-2",
                        },
                        Object {
                          "data": Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                          "groupOption": true,
                          "key": "day-6",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__week__",
                            "label": "Weeks",
                            "options": Array [
                              Object {
                                "children": "1 week",
                                "key": "week-1",
                                "value": 604800,
                              },
                              Object {
                                "children": "2 weeks",
                                "key": "week-2",
                                "value": 1209600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__week__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          "groupOption": true,
                          "key": "week-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                          "groupOption": true,
                          "key": "week-2",
                        },
                      ]
                    }
                    height={256}
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "Never",
                          "key": "never",
                          "value": null,
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__minute__",
                          "label": "Minutes",
                          "options": Array [
                            Object {
                              "children": "1 minute",
                              "key": "minute-1",
                              "value": 60,
                            },
                            Object {
                              "children": "5 minutes",
                              "key": "minute-5",
                              "value": 300,
                            },
                            Object {
                              "children": "10 minutes",
                              "key": "minute-10",
                              "value": 600,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__hour__",
                          "label": "Hours",
                          "options": Array [
                            Object {
                              "children": "1 hour",
                              "key": "hour-1",
                              "value": 3600,
                            },
                            Object {
                              "children": "10 hours",
                              "key": "hour-10",
                              "value": 36000,
                            },
                            Object {
                              "children": "23 hours",
                              "key": "hour-23",
                              "value": 82800,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__day__",
                          "label": "Days",
                          "options": Array [
                            Object {
                              "children": "1 day",
                              "key": "day-1",
                              "value": 86400,
                            },
                            Object {
                              "children": "2 days",
                              "key": "day-2",
                              "value": 172800,
                            },
                            Object {
                              "children": "6 days",
                              "key": "day-6",
                              "value": 518400,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__week__",
                          "label": "Weeks",
                          "options": Array [
                            Object {
                              "children": "1 week",
                              "key": "week-1",
                              "value": 604800,
                            },
                            Object {
                              "children": "2 weeks",
                              "key": "week-2",
                              "value": 1209600,
                            },
                          ],
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        300,
                      }
                    }
                    virtual={false}
                  />
                </div>
              }
              popupAlign={Object {}}
              popupClassName=""
              popupPlacement="bottomLeft"
              popupStyle={
                Object {
                  "minWidth": null,
                }
              }
              popupTransitionName="slide-up"
              prefixCls="ant-select-dropdown"
              showAction={Array []}
            >
              <Selector
                accessibilityIndex={0}
                activeValue={null}
                choiceTransitionName="zoom"
                className="input"
                clearIcon={<ForwardRef(CloseCircleFilled) />}
                domRef={
                  Object {
                    "current": <div
                      class="ant-select-selector"
                    >
                      <span
                        class="ant-select-selection-search"
                      >
                        <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />
                      </span>
                      <span
                        class="ant-select-selection-item"
                        title="5 minutes"
                      >
                        5 minutes
                      </span>
                    </div>,
                  }
                }
                dropdownClassName=""
                dropdownMatchSelectWidth={false}
                inputElement={null}
                inputIcon={[Function]}
                key="trigger"
                listHeight={256}
                listItemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onChange={[Function]}
                onSearch={[Function]}
                onSearchSubmit={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                prefixCls="ant-select"
                removeIcon={<ForwardRef(CloseOutlined) />}
                searchValue=""
                showSearch={false}
                tokenWithEnter={false}
                transitionName="slide-up"
                value={300}
                values={
                  Array [
                    Object {
                      "disabled": undefined,
                      "key": 300,
                      "label": "5 minutes",
                      "value": 300,
                    },
                  ]
                }
              >
                <div
                  className="ant-select-selector"
                  onMouseDown={[Function]}
                >
                  <SingleSelector
                    accessibilityIndex={0}
                    activeValue={null}
                    choiceTransitionName="zoom"
                    className="input"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="undefined_list_0"
                              aria-autocomplete="list"
                              aria-controls="undefined_list"
                              aria-haspopup="listbox"
                              aria-owns="undefined_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="5 minutes"
                          >
                            5 minutes
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    dropdownMatchSelectWidth={false}
                    inputElement={null}
                    inputIcon={[Function]}
                    inputRef={
                      Object {
                        "current": <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />,
                      }
                    }
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onInputChange={[Function]}
                    onInputCompositionEnd={[Function]}
                    onInputCompositionStart={[Function]}
                    onInputKeyDown={[Function]}
                    onInputMouseDown={[Function]}
                    onInputPaste={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value={300}
                    values={
                      Array [
                        Object {
                          "disabled": undefined,
                          "key": 300,
                          "label": "5 minutes",
                          "value": 300,
                        },
                      ]
                    }
                  >
                    <span
                      className="ant-select-selection-search"
                    >
                      <Input
                        accessibilityIndex={0}
                        attrs={Object {}}
                        editable={false}
                        inputElement={null}
                        onChange={[Function]}
                        onCompositionEnd={[Function]}
                        onCompositionStart={[Function]}
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onPaste={[Function]}
                        prefixCls="ant-select"
                        value=""
                      >
                        <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autoComplete="off"
                          className="ant-select-selection-search-input"
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          readOnly={true}
                          role="combobox"
                          style={
                            Object {
                              "opacity": 0,
                            }
                          }
                          unselectable="on"
                          value=""
                        />
                      </Input>
                    </span>
                    <span
                      className="ant-select-selection-item"
                      title="5 minutes"
                    >
                      5 minutes
                    </span>
                  </SingleSelector>
                </div>
              </Selector>
            </Trigger>
          </SelectTrigger>
          <TransBtn
            className="ant-select-arrow"
            customizeIcon={[Function]}
            customizeIconProps={
              Object {
                "focused": false,
                "loading": undefined,
                "open": undefined,
                "searchValue": "",
                "showSearch": false,
              }
            }
          >
            <span
              aria-hidden={true}
              className="ant-select-arrow"
              onMouseDown={[Function]}
              style={
                Object {
                  "WebkitUserSelect": "none",
                  "userSelect": "none",
                }
              }
              unselectable="on"
            >
              <ForwardRef(DownOutlined)
                className="ant-select-suffix"
              >
                <AntdIcon
                  className="ant-select-suffix"
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "down",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="down"
                    className="anticon anticon-down ant-select-suffix"
                    role="img"
                  >
                    <IconReact
                      className=""
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        className=""
                        data-icon="down"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-down"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                          key="svg-down-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(DownOutlined)>
            </span>
          </TransBtn>
        </div>
      </ForwardRef(Select)>
    </Select>
  </Select>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "Never" 1`] = `
<div
  data-testid="interval"
>
  <Select
    bordered={true}
    choiceTransitionName="zoom"
    className="input"
    dropdownMatchSelectWidth={false}
    onChange={[Function]}
    transitionName="slide-up"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      clearIcon={<ForwardRef(CloseCircleFilled) />}
      dropdownClassName=""
      dropdownMatchSelectWidth={false}
      inputIcon={[Function]}
      listHeight={256}
      listItemHeight={24}
      menuItemSelectedIcon={null}
      notFoundContent={
        <Context.Consumer>
          [Function]
        </Context.Consumer>
      }
      onChange={[Function]}
      prefixCls="ant-select"
      removeIcon={<ForwardRef(CloseOutlined) />}
      transitionName="slide-up"
    >
      <ForwardRef(Select)
        choiceTransitionName="zoom"
        className="input"
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        dropdownClassName=""
        dropdownMatchSelectWidth={false}
        inputIcon={[Function]}
        listHeight={256}
        listItemHeight={24}
        menuItemSelectedIcon={null}
        notFoundContent={
          <Context.Consumer>
            [Function]
          </Context.Consumer>
        }
        onChange={[Function]}
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        transitionName="slide-up"
      >
        <div
          className="ant-select input ant-select-single ant-select-show-arrow"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
        >
          <SelectTrigger
            containerWidth={null}
            dropdownClassName=""
            dropdownMatchSelectWidth={false}
            empty={false}
            getTriggerDOMNode={[Function]}
            popupElement={
              <ForwardRef(OptionList)
                childrenAsData={true}
                defaultActiveFirstOption={true}
                flattenOptions={
                  Array [
                    Object {
                      "data": Object {
                        "children": "Never",
                        "key": "never",
                        "value": null,
                      },
                      "groupOption": false,
                      "key": "never",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__minute__",
                        "label": "Minutes",
                        "options": Array [
                          Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__minute__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 minute",
                        "key": "minute-1",
                        "value": 60,
                      },
                      "groupOption": true,
                      "key": "minute-1",
                    },
                    Object {
                      "data": Object {
                        "children": "5 minutes",
                        "key": "minute-5",
                        "value": 300,
                      },
                      "groupOption": true,
                      "key": "minute-5",
                    },
                    Object {
                      "data": Object {
                        "children": "10 minutes",
                        "key": "minute-10",
                        "value": 600,
                      },
                      "groupOption": true,
                      "key": "minute-10",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__hour__",
                        "label": "Hours",
                        "options": Array [
                          Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__hour__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 hour",
                        "key": "hour-1",
                        "value": 3600,
                      },
                      "groupOption": true,
                      "key": "hour-1",
                    },
                    Object {
                      "data": Object {
                        "children": "10 hours",
                        "key": "hour-10",
                        "value": 36000,
                      },
                      "groupOption": true,
                      "key": "hour-10",
                    },
                    Object {
                      "data": Object {
                        "children": "23 hours",
                        "key": "hour-23",
                        "value": 82800,
                      },
                      "groupOption": true,
                      "key": "hour-23",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__day__",
                        "label": "Days",
                        "options": Array [
                          Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__day__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 day",
                        "key": "day-1",
                        "value": 86400,
                      },
                      "groupOption": true,
                      "key": "day-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 days",
                        "key": "day-2",
                        "value": 172800,
                      },
                      "groupOption": true,
                      "key": "day-2",
                    },
                    Object {
                      "data": Object {
                        "children": "6 days",
                        "key": "day-6",
                        "value": 518400,
                      },
                      "groupOption": true,
                      "key": "day-6",
                    },
                    Object {
                      "data": Object {
                        "key": "__RC_SELECT_GRP__week__",
                        "label": "Weeks",
                        "options": Array [
                          Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                        ],
                      },
                      "group": true,
                      "key": "__RC_SELECT_GRP__week__",
                    },
                    Object {
                      "data": Object {
                        "children": "1 week",
                        "key": "week-1",
                        "value": 604800,
                      },
                      "groupOption": true,
                      "key": "week-1",
                    },
                    Object {
                      "data": Object {
                        "children": "2 weeks",
                        "key": "week-2",
                        "value": 1209600,
                      },
                      "groupOption": true,
                      "key": "week-2",
                    },
                  ]
                }
                height={256}
                itemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onActiveValue={[Function]}
                onMouseEnter={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                options={
                  Array [
                    Object {
                      "children": "Never",
                      "key": "never",
                      "value": null,
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__minute__",
                      "label": "Minutes",
                      "options": Array [
                        Object {
                          "children": "1 minute",
                          "key": "minute-1",
                          "value": 60,
                        },
                        Object {
                          "children": "5 minutes",
                          "key": "minute-5",
                          "value": 300,
                        },
                        Object {
                          "children": "10 minutes",
                          "key": "minute-10",
                          "value": 600,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__hour__",
                      "label": "Hours",
                      "options": Array [
                        Object {
                          "children": "1 hour",
                          "key": "hour-1",
                          "value": 3600,
                        },
                        Object {
                          "children": "10 hours",
                          "key": "hour-10",
                          "value": 36000,
                        },
                        Object {
                          "children": "23 hours",
                          "key": "hour-23",
                          "value": 82800,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__day__",
                      "label": "Days",
                      "options": Array [
                        Object {
                          "children": "1 day",
                          "key": "day-1",
                          "value": 86400,
                        },
                        Object {
                          "children": "2 days",
                          "key": "day-2",
                          "value": 172800,
                        },
                        Object {
                          "children": "6 days",
                          "key": "day-6",
                          "value": 518400,
                        },
                      ],
                    },
                    Object {
                      "key": "__RC_SELECT_GRP__week__",
                      "label": "Weeks",
                      "options": Array [
                        Object {
                          "children": "1 week",
                          "key": "week-1",
                          "value": 604800,
                        },
                        Object {
                          "children": "2 weeks",
                          "key": "week-2",
                          "value": 1209600,
                        },
                      ],
                    },
                  ]
                }
                prefixCls="ant-select"
                searchValue=""
                values={Set {}}
                virtual={false}
              />
            }
            prefixCls="ant-select"
            transitionName="slide-up"
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getTriggerDOMNode={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div>
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "Never",
                            "key": "never",
                            "value": null,
                          },
                          "groupOption": false,
                          "key": "never",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__minute__",
                            "label": "Minutes",
                            "options": Array [
                              Object {
                                "children": "1 minute",
                                "key": "minute-1",
                                "value": 60,
                              },
                              Object {
                                "children": "5 minutes",
                                "key": "minute-5",
                                "value": 300,
                              },
                              Object {
                                "children": "10 minutes",
                                "key": "minute-10",
                                "value": 600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__minute__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 minute",
                            "key": "minute-1",
                            "value": 60,
                          },
                          "groupOption": true,
                          "key": "minute-1",
                        },
                        Object {
                          "data": Object {
                            "children": "5 minutes",
                            "key": "minute-5",
                            "value": 300,
                          },
                          "groupOption": true,
                          "key": "minute-5",
                        },
                        Object {
                          "data": Object {
                            "children": "10 minutes",
                            "key": "minute-10",
                            "value": 600,
                          },
                          "groupOption": true,
                          "key": "minute-10",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__hour__",
                            "label": "Hours",
                            "options": Array [
                              Object {
                                "children": "1 hour",
                                "key": "hour-1",
                                "value": 3600,
                              },
                              Object {
                                "children": "10 hours",
                                "key": "hour-10",
                                "value": 36000,
                              },
                              Object {
                                "children": "23 hours",
                                "key": "hour-23",
                                "value": 82800,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__hour__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 hour",
                            "key": "hour-1",
                            "value": 3600,
                          },
                          "groupOption": true,
                          "key": "hour-1",
                        },
                        Object {
                          "data": Object {
                            "children": "10 hours",
                            "key": "hour-10",
                            "value": 36000,
                          },
                          "groupOption": true,
                          "key": "hour-10",
                        },
                        Object {
                          "data": Object {
                            "children": "23 hours",
                            "key": "hour-23",
                            "value": 82800,
                          },
                          "groupOption": true,
                          "key": "hour-23",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__day__",
                            "label": "Days",
                            "options": Array [
                              Object {
                                "children": "1 day",
                                "key": "day-1",
                                "value": 86400,
                              },
                              Object {
                                "children": "2 days",
                                "key": "day-2",
                                "value": 172800,
                              },
                              Object {
                                "children": "6 days",
                                "key": "day-6",
                                "value": 518400,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__day__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 day",
                            "key": "day-1",
                            "value": 86400,
                          },
                          "groupOption": true,
                          "key": "day-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 days",
                            "key": "day-2",
                            "value": 172800,
                          },
                          "groupOption": true,
                          "key": "day-2",
                        },
                        Object {
                          "data": Object {
                            "children": "6 days",
                            "key": "day-6",
                            "value": 518400,
                          },
                          "groupOption": true,
                          "key": "day-6",
                        },
                        Object {
                          "data": Object {
                            "key": "__RC_SELECT_GRP__week__",
                            "label": "Weeks",
                            "options": Array [
                              Object {
                                "children": "1 week",
                                "key": "week-1",
                                "value": 604800,
                              },
                              Object {
                                "children": "2 weeks",
                                "key": "week-2",
                                "value": 1209600,
                              },
                            ],
                          },
                          "group": true,
                          "key": "__RC_SELECT_GRP__week__",
                        },
                        Object {
                          "data": Object {
                            "children": "1 week",
                            "key": "week-1",
                            "value": 604800,
                          },
                          "groupOption": true,
                          "key": "week-1",
                        },
                        Object {
                          "data": Object {
                            "children": "2 weeks",
                            "key": "week-2",
                            "value": 1209600,
                          },
                          "groupOption": true,
                          "key": "week-2",
                        },
                      ]
                    }
                    height={256}
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "Never",
                          "key": "never",
                          "value": null,
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__minute__",
                          "label": "Minutes",
                          "options": Array [
                            Object {
                              "children": "1 minute",
                              "key": "minute-1",
                              "value": 60,
                            },
                            Object {
                              "children": "5 minutes",
                              "key": "minute-5",
                              "value": 300,
                            },
                            Object {
                              "children": "10 minutes",
                              "key": "minute-10",
                              "value": 600,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__hour__",
                          "label": "Hours",
                          "options": Array [
                            Object {
                              "children": "1 hour",
                              "key": "hour-1",
                              "value": 3600,
                            },
                            Object {
                              "children": "10 hours",
                              "key": "hour-10",
                              "value": 36000,
                            },
                            Object {
                              "children": "23 hours",
                              "key": "hour-23",
                              "value": 82800,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__day__",
                          "label": "Days",
                          "options": Array [
                            Object {
                              "children": "1 day",
                              "key": "day-1",
                              "value": 86400,
                            },
                            Object {
                              "children": "2 days",
                              "key": "day-2",
                              "value": 172800,
                            },
                            Object {
                              "children": "6 days",
                              "key": "day-6",
                              "value": 518400,
                            },
                          ],
                        },
                        Object {
                          "key": "__RC_SELECT_GRP__week__",
                          "label": "Weeks",
                          "options": Array [
                            Object {
                              "children": "1 week",
                              "key": "week-1",
                              "value": 604800,
                            },
                            Object {
                              "children": "2 weeks",
                              "key": "week-2",
                              "value": 1209600,
                            },
                          ],
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={Set {}}
                    virtual={false}
                  />
                </div>
              }
              popupAlign={Object {}}
              popupClassName=""
              popupPlacement="bottomLeft"
              popupStyle={
                Object {
                  "minWidth": null,
                }
              }
              popupTransitionName="slide-up"
              prefixCls="ant-select-dropdown"
              showAction={Array []}
            >
              <Selector
                accessibilityIndex={0}
                activeValue={null}
                choiceTransitionName="zoom"
                className="input"
                clearIcon={<ForwardRef(CloseCircleFilled) />}
                domRef={
                  Object {
                    "current": <div
                      class="ant-select-selector"
                    >
                      <span
                        class="ant-select-selection-search"
                      >
                        <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />
                      </span>
                      <span
                        class="ant-select-selection-placeholder"
                      />
                    </div>,
                  }
                }
                dropdownClassName=""
                dropdownMatchSelectWidth={false}
                inputElement={null}
                inputIcon={[Function]}
                key="trigger"
                listHeight={256}
                listItemHeight={24}
                menuItemSelectedIcon={null}
                multiple={false}
                notFoundContent={
                  <Context.Consumer>
                    [Function]
                  </Context.Consumer>
                }
                onChange={[Function]}
                onSearch={[Function]}
                onSearchSubmit={[Function]}
                onSelect={[Function]}
                onToggleOpen={[Function]}
                prefixCls="ant-select"
                removeIcon={<ForwardRef(CloseOutlined) />}
                searchValue=""
                showSearch={false}
                tokenWithEnter={false}
                transitionName="slide-up"
                values={Array []}
              >
                <div
                  className="ant-select-selector"
                  onMouseDown={[Function]}
                >
                  <SingleSelector
                    accessibilityIndex={0}
                    activeValue={null}
                    choiceTransitionName="zoom"
                    className="input"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="undefined_list_0"
                              aria-autocomplete="list"
                              aria-controls="undefined_list"
                              aria-haspopup="listbox"
                              aria-owns="undefined_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-placeholder"
                          />
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    dropdownMatchSelectWidth={false}
                    inputElement={null}
                    inputIcon={[Function]}
                    inputRef={
                      Object {
                        "current": <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autocomplete="off"
                          class="ant-select-selection-search-input"
                          readonly=""
                          role="combobox"
                          style="opacity: 0;"
                          unselectable="on"
                          value=""
                        />,
                      }
                    }
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onInputChange={[Function]}
                    onInputCompositionEnd={[Function]}
                    onInputCompositionStart={[Function]}
                    onInputKeyDown={[Function]}
                    onInputMouseDown={[Function]}
                    onInputPaste={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    values={Array []}
                  >
                    <span
                      className="ant-select-selection-search"
                    >
                      <Input
                        accessibilityIndex={0}
                        attrs={Object {}}
                        editable={false}
                        inputElement={null}
                        onChange={[Function]}
                        onCompositionEnd={[Function]}
                        onCompositionStart={[Function]}
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onPaste={[Function]}
                        prefixCls="ant-select"
                        value=""
                      >
                        <input
                          aria-activedescendant="undefined_list_0"
                          aria-autocomplete="list"
                          aria-controls="undefined_list"
                          aria-haspopup="listbox"
                          aria-owns="undefined_list"
                          autoComplete="off"
                          className="ant-select-selection-search-input"
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          readOnly={true}
                          role="combobox"
                          style={
                            Object {
                              "opacity": 0,
                            }
                          }
                          unselectable="on"
                          value=""
                        />
                      </Input>
                    </span>
                    <span
                      className="ant-select-selection-placeholder"
                    />
                  </SingleSelector>
                </div>
              </Selector>
            </Trigger>
          </SelectTrigger>
          <TransBtn
            className="ant-select-arrow"
            customizeIcon={[Function]}
            customizeIconProps={
              Object {
                "focused": false,
                "loading": undefined,
                "open": undefined,
                "searchValue": "",
                "showSearch": false,
              }
            }
          >
            <span
              aria-hidden={true}
              className="ant-select-arrow"
              onMouseDown={[Function]}
              style={
                Object {
                  "WebkitUserSelect": "none",
                  "userSelect": "none",
                }
              }
              unselectable="on"
            >
              <ForwardRef(DownOutlined)
                className="ant-select-suffix"
              >
                <AntdIcon
                  className="ant-select-suffix"
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "down",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="down"
                    className="anticon anticon-down ant-select-suffix"
                    role="img"
                  >
                    <IconReact
                      className=""
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        className=""
                        data-icon="down"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-down"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                          key="svg-down-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(DownOutlined)>
            </span>
          </TransBtn>
        </div>
      </ForwardRef(Select)>
    </Select>
  </Select>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Supports 30 days interval with no time value Time is none 1`] = `
<div
  data-testid="time"
>
  <TimeEditor
    defaultValue={null}
    onChange={[Function]}
  >
    <TimePicker
      allowClear={false}
      format="HH:mm"
      minuteStep={5}
      onChange={[Function]}
      value={null}
    >
      <TimePicker
        allowClear={false}
        format="HH:mm"
        minuteStep={5}
        onChange={[Function]}
        value={null}
      >
        <LocaleReceiver
          componentName="DatePicker"
          defaultLocale={[Function]}
        >
          <Picker
            allowClear={false}
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            components={
              Object {
                "button": [Function],
                "rangeItem": [Function],
              }
            }
            format="HH:mm"
            generateConfig={
              Object {
                "addDate": [Function],
                "addMonth": [Function],
                "addYear": [Function],
                "getDate": [Function],
                "getHour": [Function],
                "getMinute": [Function],
                "getMonth": [Function],
                "getNow": [Function],
                "getSecond": [Function],
                "getWeekDay": [Function],
                "getYear": [Function],
                "isAfter": [Function],
                "isValidate": [Function],
                "locale": Object {
                  "format": [Function],
                  "getShortMonths": [Function],
                  "getShortWeekDays": [Function],
                  "getWeek": [Function],
                  "getWeekFirstDay": [Function],
                  "parse": [Function],
                },
                "setDate": [Function],
                "setHour": [Function],
                "setMinute": [Function],
                "setMonth": [Function],
                "setSecond": [Function],
                "setYear": [Function],
              }
            }
            locale={
              Object {
                "backToToday": "Back to today",
                "clear": "Clear",
                "dateFormat": "M/D/YYYY",
                "dateSelect": "select date",
                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                "dayFormat": "D",
                "decadeSelect": "Choose a decade",
                "locale": "en_US",
                "month": "Month",
                "monthBeforeYear": true,
                "monthPlaceholder": "Select month",
                "monthSelect": "Choose a month",
                "nextCentury": "Next century",
                "nextDecade": "Next decade",
                "nextMonth": "Next month (PageDown)",
                "nextYear": "Next year (Control + right)",
                "now": "Now",
                "ok": "Ok",
                "placeholder": "Select date",
                "previousCentury": "Last century",
                "previousDecade": "Last decade",
                "previousMonth": "Previous month (PageUp)",
                "previousYear": "Last year (Control + left)",
                "quarterPlaceholder": "Select quarter",
                "rangeMonthPlaceholder": Array [
                  "Start month",
                  "End month",
                ],
                "rangePlaceholder": Array [
                  "Start date",
                  "End date",
                ],
                "rangeWeekPlaceholder": Array [
                  "Start week",
                  "End week",
                ],
                "rangeYearPlaceholder": Array [
                  "Start year",
                  "End year",
                ],
                "timeSelect": "select time",
                "today": "Today",
                "weekPlaceholder": "Select week",
                "weekSelect": "Choose a week",
                "year": "Year",
                "yearFormat": "YYYY",
                "yearPlaceholder": "Select year",
                "yearSelect": "Choose a year",
              }
            }
            minuteStep={5}
            nextIcon={
              <span
                className="ant-picker-next-icon"
              />
            }
            onChange={[Function]}
            picker="time"
            placeholder="Select time"
            prefixCls="ant-picker"
            prevIcon={
              <span
                className="ant-picker-prev-icon"
              />
            }
            showSecond={false}
            showToday={true}
            suffixIcon={<ForwardRef(ClockCircleOutlined) />}
            superNextIcon={
              <span
                className="ant-picker-super-next-icon"
              />
            }
            superPrevIcon={
              <span
                className="ant-picker-super-prev-icon"
              />
            }
            transitionName="slide-up"
            value={null}
          >
            <InnerPicker
              allowClear={false}
              className=""
              clearIcon={<ForwardRef(CloseCircleFilled) />}
              components={
                Object {
                  "button": [Function],
                  "rangeItem": [Function],
                }
              }
              format="HH:mm"
              generateConfig={
                Object {
                  "addDate": [Function],
                  "addMonth": [Function],
                  "addYear": [Function],
                  "getDate": [Function],
                  "getHour": [Function],
                  "getMinute": [Function],
                  "getMonth": [Function],
                  "getNow": [Function],
                  "getSecond": [Function],
                  "getWeekDay": [Function],
                  "getYear": [Function],
                  "isAfter": [Function],
                  "isValidate": [Function],
                  "locale": Object {
                    "format": [Function],
                    "getShortMonths": [Function],
                    "getShortWeekDays": [Function],
                    "getWeek": [Function],
                    "getWeekFirstDay": [Function],
                    "parse": [Function],
                  },
                  "setDate": [Function],
                  "setHour": [Function],
                  "setMinute": [Function],
                  "setMonth": [Function],
                  "setSecond": [Function],
                  "setYear": [Function],
                }
              }
              locale={
                Object {
                  "backToToday": "Back to today",
                  "clear": "Clear",
                  "dateFormat": "M/D/YYYY",
                  "dateSelect": "select date",
                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                  "dayFormat": "D",
                  "decadeSelect": "Choose a decade",
                  "locale": "en_US",
                  "month": "Month",
                  "monthBeforeYear": true,
                  "monthPlaceholder": "Select month",
                  "monthSelect": "Choose a month",
                  "nextCentury": "Next century",
                  "nextDecade": "Next decade",
                  "nextMonth": "Next month (PageDown)",
                  "nextYear": "Next year (Control + right)",
                  "now": "Now",
                  "ok": "Ok",
                  "placeholder": "Select date",
                  "previousCentury": "Last century",
                  "previousDecade": "Last decade",
                  "previousMonth": "Previous month (PageUp)",
                  "previousYear": "Last year (Control + left)",
                  "quarterPlaceholder": "Select quarter",
                  "rangeMonthPlaceholder": Array [
                    "Start month",
                    "End month",
                  ],
                  "rangePlaceholder": Array [
                    "Start date",
                    "End date",
                  ],
                  "rangeWeekPlaceholder": Array [
                    "Start week",
                    "End week",
                  ],
                  "rangeYearPlaceholder": Array [
                    "Start year",
                    "End year",
                  ],
                  "timeSelect": "select time",
                  "today": "Today",
                  "weekPlaceholder": "Select week",
                  "weekSelect": "Choose a week",
                  "year": "Year",
                  "yearFormat": "YYYY",
                  "yearPlaceholder": "Select year",
                  "yearSelect": "Choose a year",
                }
              }
              minuteStep={5}
              nextIcon={
                <span
                  className="ant-picker-next-icon"
                />
              }
              onChange={[Function]}
              picker="time"
              pickerRef={
                Object {
                  "current": Object {
                    "blur": [Function],
                    "focus": [Function],
                  },
                }
              }
              placeholder="Select time"
              prefixCls="ant-picker"
              prevIcon={
                <span
                  className="ant-picker-prev-icon"
                />
              }
              showSecond={false}
              showToday={true}
              suffixIcon={<ForwardRef(ClockCircleOutlined) />}
              superNextIcon={
                <span
                  className="ant-picker-super-next-icon"
                />
              }
              superPrevIcon={
                <span
                  className="ant-picker-super-prev-icon"
                />
              }
              transitionName="slide-up"
              value={null}
            >
              <PickerTrigger
                popupElement={
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                  >
                    <PickerPanel
                      allowClear={false}
                      className="ant-picker-panel-focused"
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      components={
                        Object {
                          "button": [Function],
                          "rangeItem": [Function],
                        }
                      }
                      format="HH:mm"
                      generateConfig={
                        Object {
                          "addDate": [Function],
                          "addMonth": [Function],
                          "addYear": [Function],
                          "getDate": [Function],
                          "getHour": [Function],
                          "getMinute": [Function],
                          "getMonth": [Function],
                          "getNow": [Function],
                          "getSecond": [Function],
                          "getWeekDay": [Function],
                          "getYear": [Function],
                          "isAfter": [Function],
                          "isValidate": [Function],
                          "locale": Object {
                            "format": [Function],
                            "getShortMonths": [Function],
                            "getShortWeekDays": [Function],
                            "getWeek": [Function],
                            "getWeekFirstDay": [Function],
                            "parse": [Function],
                          },
                          "setDate": [Function],
                          "setHour": [Function],
                          "setMinute": [Function],
                          "setMonth": [Function],
                          "setSecond": [Function],
                          "setYear": [Function],
                        }
                      }
                      locale={
                        Object {
                          "backToToday": "Back to today",
                          "clear": "Clear",
                          "dateFormat": "M/D/YYYY",
                          "dateSelect": "select date",
                          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                          "dayFormat": "D",
                          "decadeSelect": "Choose a decade",
                          "locale": "en_US",
                          "month": "Month",
                          "monthBeforeYear": true,
                          "monthPlaceholder": "Select month",
                          "monthSelect": "Choose a month",
                          "nextCentury": "Next century",
                          "nextDecade": "Next decade",
                          "nextMonth": "Next month (PageDown)",
                          "nextYear": "Next year (Control + right)",
                          "now": "Now",
                          "ok": "Ok",
                          "placeholder": "Select date",
                          "previousCentury": "Last century",
                          "previousDecade": "Last decade",
                          "previousMonth": "Previous month (PageUp)",
                          "previousYear": "Last year (Control + left)",
                          "quarterPlaceholder": "Select quarter",
                          "rangeMonthPlaceholder": Array [
                            "Start month",
                            "End month",
                          ],
                          "rangePlaceholder": Array [
                            "Start date",
                            "End date",
                          ],
                          "rangeWeekPlaceholder": Array [
                            "Start week",
                            "End week",
                          ],
                          "rangeYearPlaceholder": Array [
                            "Start year",
                            "End year",
                          ],
                          "timeSelect": "select time",
                          "today": "Today",
                          "weekPlaceholder": "Select week",
                          "weekSelect": "Choose a week",
                          "year": "Year",
                          "yearFormat": "YYYY",
                          "yearPlaceholder": "Select year",
                          "yearSelect": "Choose a year",
                        }
                      }
                      minuteStep={5}
                      nextIcon={
                        <span
                          className="ant-picker-next-icon"
                        />
                      }
                      onChange={[Function]}
                      picker="time"
                      pickerRef={
                        Object {
                          "current": Object {
                            "blur": [Function],
                            "focus": [Function],
                          },
                        }
                      }
                      placeholder="Select time"
                      prefixCls="ant-picker"
                      prevIcon={
                        <span
                          className="ant-picker-prev-icon"
                        />
                      }
                      showSecond={false}
                      showToday={true}
                      suffixIcon={<ForwardRef(ClockCircleOutlined) />}
                      superNextIcon={
                        <span
                          className="ant-picker-super-next-icon"
                        />
                      }
                      superPrevIcon={
                        <span
                          className="ant-picker-super-prev-icon"
                        />
                      }
                      tabIndex={-1}
                      transitionName="slide-up"
                      value={null}
                    />
                  </div>
                }
                popupPlacement="bottomLeft"
                prefixCls="ant-picker"
                transitionName="slide-up"
                visible={false}
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div
                      className="ant-picker-panel-container"
                      onMouseDown={[Function]}
                    >
                      <PickerPanel
                        allowClear={false}
                        className="ant-picker-panel-focused"
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        components={
                          Object {
                            "button": [Function],
                            "rangeItem": [Function],
                          }
                        }
                        format="HH:mm"
                        generateConfig={
                          Object {
                            "addDate": [Function],
                            "addMonth": [Function],
                            "addYear": [Function],
                            "getDate": [Function],
                            "getHour": [Function],
                            "getMinute": [Function],
                            "getMonth": [Function],
                            "getNow": [Function],
                            "getSecond": [Function],
                            "getWeekDay": [Function],
                            "getYear": [Function],
                            "isAfter": [Function],
                            "isValidate": [Function],
                            "locale": Object {
                              "format": [Function],
                              "getShortMonths": [Function],
                              "getShortWeekDays": [Function],
                              "getWeek": [Function],
                              "getWeekFirstDay": [Function],
                              "parse": [Function],
                            },
                            "setDate": [Function],
                            "setHour": [Function],
                            "setMinute": [Function],
                            "setMonth": [Function],
                            "setSecond": [Function],
                            "setYear": [Function],
                          }
                        }
                        locale={
                          Object {
                            "backToToday": "Back to today",
                            "clear": "Clear",
                            "dateFormat": "M/D/YYYY",
                            "dateSelect": "select date",
                            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                            "dayFormat": "D",
                            "decadeSelect": "Choose a decade",
                            "locale": "en_US",
                            "month": "Month",
                            "monthBeforeYear": true,
                            "monthPlaceholder": "Select month",
                            "monthSelect": "Choose a month",
                            "nextCentury": "Next century",
                            "nextDecade": "Next decade",
                            "nextMonth": "Next month (PageDown)",
                            "nextYear": "Next year (Control + right)",
                            "now": "Now",
                            "ok": "Ok",
                            "placeholder": "Select date",
                            "previousCentury": "Last century",
                            "previousDecade": "Last decade",
                            "previousMonth": "Previous month (PageUp)",
                            "previousYear": "Last year (Control + left)",
                            "quarterPlaceholder": "Select quarter",
                            "rangeMonthPlaceholder": Array [
                              "Start month",
                              "End month",
                            ],
                            "rangePlaceholder": Array [
                              "Start date",
                              "End date",
                            ],
                            "rangeWeekPlaceholder": Array [
                              "Start week",
                              "End week",
                            ],
                            "rangeYearPlaceholder": Array [
                              "Start year",
                              "End year",
                            ],
                            "timeSelect": "select time",
                            "today": "Today",
                            "weekPlaceholder": "Select week",
                            "weekSelect": "Choose a week",
                            "year": "Year",
                            "yearFormat": "YYYY",
                            "yearPlaceholder": "Select year",
                            "yearSelect": "Choose a year",
                          }
                        }
                        minuteStep={5}
                        nextIcon={
                          <span
                            className="ant-picker-next-icon"
                          />
                        }
                        onChange={[Function]}
                        picker="time"
                        pickerRef={
                          Object {
                            "current": Object {
                              "blur": [Function],
                              "focus": [Function],
                            },
                          }
                        }
                        placeholder="Select time"
                        prefixCls="ant-picker"
                        prevIcon={
                          <span
                            className="ant-picker-prev-icon"
                          />
                        }
                        showSecond={false}
                        showToday={true}
                        suffixIcon={<ForwardRef(ClockCircleOutlined) />}
                        superNextIcon={
                          <span
                            className="ant-picker-super-next-icon"
                          />
                        }
                        superPrevIcon={
                          <span
                            className="ant-picker-super-prev-icon"
                          />
                        }
                        tabIndex={-1}
                        transitionName="slide-up"
                        value={null}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={Object {}}
                  popupTransitionName="slide-up"
                  popupVisible={false}
                  prefixCls="ant-picker-dropdown"
                  showAction={Array []}
                >
                  <div
                    className="ant-picker"
                    key="trigger"
                    onMouseUp={[Function]}
                  >
                    <div
                      className="ant-picker-input"
                    >
                      <input
                        autoComplete="off"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        placeholder="Select time"
                        readOnly={true}
                        size={10}
                        title=""
                        value=""
                      />
                      <span
                        className="ant-picker-suffix"
                      >
                        <ForwardRef(ClockCircleOutlined)>
                          <AntdIcon
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z",
                                      },
                                      "tag": "path",
                                    },
                                    Object {
                                      "attrs": Object {
                                        "d": "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "clock-circle",
                                "theme": "outlined",
                              }
                            }
                          >
                            <span
                              aria-label="clock-circle"
                              className="anticon anticon-clock-circle"
                              role="img"
                            >
                              <IconReact
                                className=""
                                icon={
                                  Object {
                                    "icon": Object {
                                      "attrs": Object {
                                        "focusable": "false",
                                        "viewBox": "64 64 896 896",
                                      },
                                      "children": Array [
                                        Object {
                                          "attrs": Object {
                                            "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z",
                                          },
                                          "tag": "path",
                                        },
                                        Object {
                                          "attrs": Object {
                                            "d": "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z",
                                          },
                                          "tag": "path",
                                        },
                                      ],
                                      "tag": "svg",
                                    },
                                    "name": "clock-circle",
                                    "theme": "outlined",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  className=""
                                  data-icon="clock-circle"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  key="svg-clock-circle"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
                                    key="svg-clock-circle-svg-0"
                                  />
                                  <path
                                    d="M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z"
                                    key="svg-clock-circle-svg-1"
                                  />
                                </svg>
                              </IconReact>
                            </span>
                          </AntdIcon>
                        </ForwardRef(ClockCircleOutlined)>
                      </span>
                    </div>
                  </div>
                </Trigger>
              </PickerTrigger>
            </InnerPicker>
          </Picker>
        </LocaleReceiver>
      </TimePicker>
    </TimePicker>
  </TimeEditor>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Until feature Until is set 1`] = `
<div
  className="ends"
  data-testid="ends"
>
  <ForwardRef
    onChange={[Function]}
    size="medium"
    value={true}
  >
    <div
      className="ant-radio-group ant-radio-group-outline ant-radio-group-medium"
    >
      <Radio
        type="radio"
        value={false}
      >
        <label
          className="ant-radio-wrapper"
        >
          <Checkbox
            checked={false}
            className=""
            defaultChecked={false}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            prefixCls="ant-radio"
            style={Object {}}
            type="radio"
            value={false}
          >
            <span
              className="ant-radio"
              style={Object {}}
            >
              <input
                checked={false}
                className="ant-radio-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="radio"
                value={false}
              />
              <span
                className="ant-radio-inner"
              />
            </span>
          </Checkbox>
          <span>
            Never
          </span>
        </label>
      </Radio>
      <Radio
        type="radio"
        value={true}
      >
        <label
          className="ant-radio-wrapper ant-radio-wrapper-checked"
        >
          <Checkbox
            checked={true}
            className=""
            defaultChecked={false}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            prefixCls="ant-radio"
            style={Object {}}
            type="radio"
            value={true}
          >
            <span
              className="ant-radio ant-radio-checked"
              style={Object {}}
            >
              <input
                checked={true}
                className="ant-radio-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="radio"
                value={true}
              />
              <span
                className="ant-radio-inner"
              />
            </span>
          </Checkbox>
          <span>
            On
          </span>
        </label>
      </Radio>
    </div>
  </ForwardRef>
  <Picker
    allowClear={false}
    className="datepicker"
    format="YYYY-MM-DD"
    onChange={[Function]}
    size="small"
    value={"2029-12-31T22:00:00.000Z"}
  >
    <LocaleReceiver
      componentName="DatePicker"
      defaultLocale={[Function]}
    >
      <Picker
        allowClear={false}
        className="datepicker ant-picker-small"
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        components={
          Object {
            "button": [Function],
            "rangeItem": [Function],
          }
        }
        format="YYYY-MM-DD"
        generateConfig={
          Object {
            "addDate": [Function],
            "addMonth": [Function],
            "addYear": [Function],
            "getDate": [Function],
            "getHour": [Function],
            "getMinute": [Function],
            "getMonth": [Function],
            "getNow": [Function],
            "getSecond": [Function],
            "getWeekDay": [Function],
            "getYear": [Function],
            "isAfter": [Function],
            "isValidate": [Function],
            "locale": Object {
              "format": [Function],
              "getShortMonths": [Function],
              "getShortWeekDays": [Function],
              "getWeek": [Function],
              "getWeekFirstDay": [Function],
              "parse": [Function],
            },
            "setDate": [Function],
            "setHour": [Function],
            "setMinute": [Function],
            "setMonth": [Function],
            "setSecond": [Function],
            "setYear": [Function],
          }
        }
        locale={
          Object {
            "backToToday": "Back to today",
            "clear": "Clear",
            "dateFormat": "M/D/YYYY",
            "dateSelect": "select date",
            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
            "dayFormat": "D",
            "decadeSelect": "Choose a decade",
            "locale": "en_US",
            "month": "Month",
            "monthBeforeYear": true,
            "monthPlaceholder": "Select month",
            "monthSelect": "Choose a month",
            "nextCentury": "Next century",
            "nextDecade": "Next decade",
            "nextMonth": "Next month (PageDown)",
            "nextYear": "Next year (Control + right)",
            "now": "Now",
            "ok": "Ok",
            "placeholder": "Select date",
            "previousCentury": "Last century",
            "previousDecade": "Last decade",
            "previousMonth": "Previous month (PageUp)",
            "previousYear": "Last year (Control + left)",
            "quarterPlaceholder": "Select quarter",
            "rangeMonthPlaceholder": Array [
              "Start month",
              "End month",
            ],
            "rangePlaceholder": Array [
              "Start date",
              "End date",
            ],
            "rangeWeekPlaceholder": Array [
              "Start week",
              "End week",
            ],
            "rangeYearPlaceholder": Array [
              "Start year",
              "End year",
            ],
            "timeSelect": "select time",
            "today": "Today",
            "weekPlaceholder": "Select week",
            "weekSelect": "Choose a week",
            "year": "Year",
            "yearFormat": "YYYY",
            "yearPlaceholder": "Select year",
            "yearSelect": "Choose a year",
          }
        }
        nextIcon={
          <span
            className="ant-picker-next-icon"
          />
        }
        onChange={[Function]}
        placeholder="Select date"
        prefixCls="ant-picker"
        prevIcon={
          <span
            className="ant-picker-prev-icon"
          />
        }
        showToday={true}
        suffixIcon={<ForwardRef(CalendarOutlined) />}
        superNextIcon={
          <span
            className="ant-picker-super-next-icon"
          />
        }
        superPrevIcon={
          <span
            className="ant-picker-super-prev-icon"
          />
        }
        transitionName="slide-up"
        value={"2029-12-31T22:00:00.000Z"}
      >
        <InnerPicker
          allowClear={false}
          className="datepicker ant-picker-small"
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          components={
            Object {
              "button": [Function],
              "rangeItem": [Function],
            }
          }
          format="YYYY-MM-DD"
          generateConfig={
            Object {
              "addDate": [Function],
              "addMonth": [Function],
              "addYear": [Function],
              "getDate": [Function],
              "getHour": [Function],
              "getMinute": [Function],
              "getMonth": [Function],
              "getNow": [Function],
              "getSecond": [Function],
              "getWeekDay": [Function],
              "getYear": [Function],
              "isAfter": [Function],
              "isValidate": [Function],
              "locale": Object {
                "format": [Function],
                "getShortMonths": [Function],
                "getShortWeekDays": [Function],
                "getWeek": [Function],
                "getWeekFirstDay": [Function],
                "parse": [Function],
              },
              "setDate": [Function],
              "setHour": [Function],
              "setMinute": [Function],
              "setMonth": [Function],
              "setSecond": [Function],
              "setYear": [Function],
            }
          }
          locale={
            Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "locale": "en_US",
              "month": "Month",
              "monthBeforeYear": true,
              "monthPlaceholder": "Select month",
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "quarterPlaceholder": "Select quarter",
              "rangeMonthPlaceholder": Array [
                "Start month",
                "End month",
              ],
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "rangeWeekPlaceholder": Array [
                "Start week",
                "End week",
              ],
              "rangeYearPlaceholder": Array [
                "Start year",
                "End year",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekPlaceholder": "Select week",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearPlaceholder": "Select year",
              "yearSelect": "Choose a year",
            }
          }
          nextIcon={
            <span
              className="ant-picker-next-icon"
            />
          }
          onChange={[Function]}
          pickerRef={
            Object {
              "current": Object {
                "blur": [Function],
                "focus": [Function],
              },
            }
          }
          placeholder="Select date"
          prefixCls="ant-picker"
          prevIcon={
            <span
              className="ant-picker-prev-icon"
            />
          }
          showToday={true}
          suffixIcon={<ForwardRef(CalendarOutlined) />}
          superNextIcon={
            <span
              className="ant-picker-super-next-icon"
            />
          }
          superPrevIcon={
            <span
              className="ant-picker-super-prev-icon"
            />
          }
          transitionName="slide-up"
          value={"2029-12-31T22:00:00.000Z"}
        >
          <PickerTrigger
            popupElement={
              <div
                className="ant-picker-panel-container"
                onMouseDown={[Function]}
              >
                <PickerPanel
                  allowClear={false}
                  className="ant-picker-panel-focused"
                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                  components={
                    Object {
                      "button": [Function],
                      "rangeItem": [Function],
                    }
                  }
                  format="YYYY-MM-DD"
                  generateConfig={
                    Object {
                      "addDate": [Function],
                      "addMonth": [Function],
                      "addYear": [Function],
                      "getDate": [Function],
                      "getHour": [Function],
                      "getMinute": [Function],
                      "getMonth": [Function],
                      "getNow": [Function],
                      "getSecond": [Function],
                      "getWeekDay": [Function],
                      "getYear": [Function],
                      "isAfter": [Function],
                      "isValidate": [Function],
                      "locale": Object {
                        "format": [Function],
                        "getShortMonths": [Function],
                        "getShortWeekDays": [Function],
                        "getWeek": [Function],
                        "getWeekFirstDay": [Function],
                        "parse": [Function],
                      },
                      "setDate": [Function],
                      "setHour": [Function],
                      "setMinute": [Function],
                      "setMonth": [Function],
                      "setSecond": [Function],
                      "setYear": [Function],
                    }
                  }
                  locale={
                    Object {
                      "backToToday": "Back to today",
                      "clear": "Clear",
                      "dateFormat": "M/D/YYYY",
                      "dateSelect": "select date",
                      "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                      "dayFormat": "D",
                      "decadeSelect": "Choose a decade",
                      "locale": "en_US",
                      "month": "Month",
                      "monthBeforeYear": true,
                      "monthPlaceholder": "Select month",
                      "monthSelect": "Choose a month",
                      "nextCentury": "Next century",
                      "nextDecade": "Next decade",
                      "nextMonth": "Next month (PageDown)",
                      "nextYear": "Next year (Control + right)",
                      "now": "Now",
                      "ok": "Ok",
                      "placeholder": "Select date",
                      "previousCentury": "Last century",
                      "previousDecade": "Last decade",
                      "previousMonth": "Previous month (PageUp)",
                      "previousYear": "Last year (Control + left)",
                      "quarterPlaceholder": "Select quarter",
                      "rangeMonthPlaceholder": Array [
                        "Start month",
                        "End month",
                      ],
                      "rangePlaceholder": Array [
                        "Start date",
                        "End date",
                      ],
                      "rangeWeekPlaceholder": Array [
                        "Start week",
                        "End week",
                      ],
                      "rangeYearPlaceholder": Array [
                        "Start year",
                        "End year",
                      ],
                      "timeSelect": "select time",
                      "today": "Today",
                      "weekPlaceholder": "Select week",
                      "weekSelect": "Choose a week",
                      "year": "Year",
                      "yearFormat": "YYYY",
                      "yearPlaceholder": "Select year",
                      "yearSelect": "Choose a year",
                    }
                  }
                  nextIcon={
                    <span
                      className="ant-picker-next-icon"
                    />
                  }
                  onChange={[Function]}
                  pickerRef={
                    Object {
                      "current": Object {
                        "blur": [Function],
                        "focus": [Function],
                      },
                    }
                  }
                  placeholder="Select date"
                  prefixCls="ant-picker"
                  prevIcon={
                    <span
                      className="ant-picker-prev-icon"
                    />
                  }
                  showToday={true}
                  suffixIcon={<ForwardRef(CalendarOutlined) />}
                  superNextIcon={
                    <span
                      className="ant-picker-super-next-icon"
                    />
                  }
                  superPrevIcon={
                    <span
                      className="ant-picker-super-prev-icon"
                    />
                  }
                  tabIndex={-1}
                  transitionName="slide-up"
                  value={"2029-12-31T22:00:00.000Z"}
                />
              </div>
            }
            popupPlacement="bottomLeft"
            prefixCls="ant-picker"
            transitionName="slide-up"
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div
                  className="ant-picker-panel-container"
                  onMouseDown={[Function]}
                >
                  <PickerPanel
                    allowClear={false}
                    className="ant-picker-panel-focused"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    components={
                      Object {
                        "button": [Function],
                        "rangeItem": [Function],
                      }
                    }
                    format="YYYY-MM-DD"
                    generateConfig={
                      Object {
                        "addDate": [Function],
                        "addMonth": [Function],
                        "addYear": [Function],
                        "getDate": [Function],
                        "getHour": [Function],
                        "getMinute": [Function],
                        "getMonth": [Function],
                        "getNow": [Function],
                        "getSecond": [Function],
                        "getWeekDay": [Function],
                        "getYear": [Function],
                        "isAfter": [Function],
                        "isValidate": [Function],
                        "locale": Object {
                          "format": [Function],
                          "getShortMonths": [Function],
                          "getShortWeekDays": [Function],
                          "getWeek": [Function],
                          "getWeekFirstDay": [Function],
                          "parse": [Function],
                        },
                        "setDate": [Function],
                        "setHour": [Function],
                        "setMinute": [Function],
                        "setMonth": [Function],
                        "setSecond": [Function],
                        "setYear": [Function],
                      }
                    }
                    locale={
                      Object {
                        "backToToday": "Back to today",
                        "clear": "Clear",
                        "dateFormat": "M/D/YYYY",
                        "dateSelect": "select date",
                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                        "dayFormat": "D",
                        "decadeSelect": "Choose a decade",
                        "locale": "en_US",
                        "month": "Month",
                        "monthBeforeYear": true,
                        "monthPlaceholder": "Select month",
                        "monthSelect": "Choose a month",
                        "nextCentury": "Next century",
                        "nextDecade": "Next decade",
                        "nextMonth": "Next month (PageDown)",
                        "nextYear": "Next year (Control + right)",
                        "now": "Now",
                        "ok": "Ok",
                        "placeholder": "Select date",
                        "previousCentury": "Last century",
                        "previousDecade": "Last decade",
                        "previousMonth": "Previous month (PageUp)",
                        "previousYear": "Last year (Control + left)",
                        "quarterPlaceholder": "Select quarter",
                        "rangeMonthPlaceholder": Array [
                          "Start month",
                          "End month",
                        ],
                        "rangePlaceholder": Array [
                          "Start date",
                          "End date",
                        ],
                        "rangeWeekPlaceholder": Array [
                          "Start week",
                          "End week",
                        ],
                        "rangeYearPlaceholder": Array [
                          "Start year",
                          "End year",
                        ],
                        "timeSelect": "select time",
                        "today": "Today",
                        "weekPlaceholder": "Select week",
                        "weekSelect": "Choose a week",
                        "year": "Year",
                        "yearFormat": "YYYY",
                        "yearPlaceholder": "Select year",
                        "yearSelect": "Choose a year",
                      }
                    }
                    nextIcon={
                      <span
                        className="ant-picker-next-icon"
                      />
                    }
                    onChange={[Function]}
                    pickerRef={
                      Object {
                        "current": Object {
                          "blur": [Function],
                          "focus": [Function],
                        },
                      }
                    }
                    placeholder="Select date"
                    prefixCls="ant-picker"
                    prevIcon={
                      <span
                        className="ant-picker-prev-icon"
                      />
                    }
                    showToday={true}
                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                    superNextIcon={
                      <span
                        className="ant-picker-super-next-icon"
                      />
                    }
                    superPrevIcon={
                      <span
                        className="ant-picker-super-prev-icon"
                      />
                    }
                    tabIndex={-1}
                    transitionName="slide-up"
                    value={"2029-12-31T22:00:00.000Z"}
                  />
                </div>
              }
              popupAlign={Object {}}
              popupClassName=""
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-picker-dropdown"
              showAction={Array []}
            >
              <div
                className="ant-picker datepicker ant-picker-small"
                key="trigger"
                onMouseUp={[Function]}
              >
                <div
                  className="ant-picker-input"
                >
                  <input
                    autoComplete="off"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    placeholder="Select date"
                    readOnly={true}
                    size={12}
                    title=""
                    value=""
                  />
                  <span
                    className="ant-picker-suffix"
                  >
                    <ForwardRef(CalendarOutlined)>
                      <AntdIcon
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "calendar",
                            "theme": "outlined",
                          }
                        }
                      >
                        <span
                          aria-label="calendar"
                          className="anticon anticon-calendar"
                          role="img"
                        >
                          <IconReact
                            className=""
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "calendar",
                                "theme": "outlined",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              className=""
                              data-icon="calendar"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-calendar"
                              viewBox="64 64 896 896"
                              width="1em"
                            >
                              <path
                                d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                key="svg-calendar-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </span>
                      </AntdIcon>
                    </ForwardRef(CalendarOutlined)>
                  </span>
                </div>
              </div>
            </Trigger>
          </PickerTrigger>
        </InnerPicker>
      </Picker>
    </LocaleReceiver>
  </Picker>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Until feature Until not set 1`] = `
<div
  className="ends"
  data-testid="ends"
>
  <ForwardRef
    onChange={[Function]}
    size="medium"
    value={false}
  >
    <div
      className="ant-radio-group ant-radio-group-outline ant-radio-group-medium"
    >
      <Radio
        type="radio"
        value={false}
      >
        <label
          className="ant-radio-wrapper ant-radio-wrapper-checked"
        >
          <Checkbox
            checked={true}
            className=""
            defaultChecked={false}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            prefixCls="ant-radio"
            style={Object {}}
            type="radio"
            value={false}
          >
            <span
              className="ant-radio ant-radio-checked"
              style={Object {}}
            >
              <input
                checked={true}
                className="ant-radio-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="radio"
                value={false}
              />
              <span
                className="ant-radio-inner"
              />
            </span>
          </Checkbox>
          <span>
            Never
          </span>
        </label>
      </Radio>
      <Radio
        type="radio"
        value={true}
      >
        <label
          className="ant-radio-wrapper"
        >
          <Checkbox
            checked={false}
            className=""
            defaultChecked={false}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            prefixCls="ant-radio"
            style={Object {}}
            type="radio"
            value={true}
          >
            <span
              className="ant-radio"
              style={Object {}}
            >
              <input
                checked={false}
                className="ant-radio-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="radio"
                value={true}
              />
              <span
                className="ant-radio-inner"
              />
            </span>
          </Checkbox>
          <span>
            On
          </span>
        </label>
      </Radio>
    </div>
  </ForwardRef>
</div>
`;

{
    "pipes": [
        {
            "name": "ColumnToAxisDataPipe",
            "id": "pipe-ColumnToAxisDataPipe-0858c3a6377ea73d275ecc2e87d390367ef7d430b67b18f6d4f26f1e6eb1a1e067a868d971322cbc909045d9c9a5e8c9cd3ac1c855af55435f8b3a41c3f2207b",
            "file": "src/app/pipes/column-to-axis-data.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "column",
                            "type": "string | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "Array<any[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columns",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "Array<any[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columns",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "columnToAxisData",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'columnToAxisData',\n  standalone: true,\n})\nexport class ColumnToAxisDataPipe implements PipeTransform {\n  transform(column: string | null | undefined, value: Array<any[]>, columns: string[]): any[] {\n    if (!column) return value;\n    const idx = columns.indexOf(column);\n    if (idx === -1) return [];\n    return value.map(item => item[idx]);\n  }\n}\n"
        },
        {
            "name": "ColumnToIndexPipe",
            "id": "pipe-ColumnToIndexPipe-e8260b883110b19162e4df2cd7143a8c6e4098d1229aa734f64e9a99715098ebf1c532a1da50dfee656af85fe51761c55d0858c0f17e7ea7bfc7dea8d5faa1af",
            "file": "src/app/pipes/column-to-index.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "column",
                            "type": "string | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columns",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columns",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "columnToIndex",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'columnToIndex',\n  standalone: true,\n})\nexport class ColumnToIndexPipe implements PipeTransform {\n  transform(column: string | null| undefined, columns: string[]): number {\n    if (column === undefined) return -1;\n    if (column === null) return -1;\n    return columns.indexOf(column);\n  }\n}\n"
        },
        {
            "name": "IpAnonymizationPipe",
            "id": "pipe-IpAnonymizationPipe-1377cdd2c29400cce1b8f553e9c27aa81641b6275e06a4023c95c9dc5f69000e34d48f27ddb86481094b8f7c278454f50c3f60834d45ae3b79ce0f75154c2a69",
            "file": "src/app/pipes/ip-anonymization.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "ipAnonymization",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ipAnonymization',\n  standalone: true\n})\nexport class IpAnonymizationPipe implements PipeTransform {\n  transform(value: string | null): string {\n    if (!value) return '';\n    if (/^(https?:\\/\\/)?\\d+\\.\\d+\\.\\d+\\.\\d+.*$/.test(value)) {\n      const chunk = value.split('.')\n      return [chunk[0], '***', '***', chunk[3]].join('.');\n    }\n    return value;\n  }\n}\n"
        },
        {
            "name": "PatternFilterPipe",
            "id": "pipe-PatternFilterPipe-6abb65677aea112cdd135ba866cd94ebbb31693dfbcff5212d41b88da92aac0ad4968317b46c50f3a0cfc7b75679657140e99bddbd7f8ab0e6b1b954130b121d",
            "file": "src/app/pipes/patternFilter.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "toRegEx",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "list",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pattern",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "keys",
                            "type": "string | string[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pattern",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "keys",
                            "type": "string | string[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "patternFilter",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'patternFilter',\n  standalone: true,\n})\nexport class PatternFilterPipe implements PipeTransform {\n  transform(list: any[], pattern: string | null, keys: string | string[] | null = null): any[] {\n    if (!pattern) return list;\n    const regex = this.toRegEx(pattern);\n    return list.filter(item => {\n      let value = item;\n      if (!keys) return regex.test(value);\n      if (!Array.isArray(keys)) keys = [keys];\n      for (const key of keys) value = value[key];\n      return regex.test(value ?? '');\n    });\n  }\n\n  private toRegEx(value: string) {\n    const s = '.*+?^$[]{}()|\\\\';\n    value = value.split('').map(c => s.includes(c) ? '\\\\' + c : c).join('');\n    return new RegExp(`${value}`, 'i');\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "BaseChartItem",
            "id": "interface-BaseChartItem-68d08ba989a8ad8ce27976d18907f33b61b69b2538a509b22ced57dede16d2aa25c5f393be7c63035d4d9d6fac2b6b5467e669db844fce3fd2e31bc15d61ce2b",
            "file": "src/app/dto/dashboard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindQuery } from './query';\n\nexport enum ChartType {\n  BAR = 'bar',\n  LINE = 'line',\n  SCATTER = 'scatter',\n  PIE = 'pie',\n  BUBBLE = 'bubble'\n}\n\nexport const CHART_TYPES = Object.values(ChartType);\n\nexport interface BaseChartItem {\n  type: ChartType;\n}\n\nexport interface ChartItemFields {\n  x_column: string | null;\n  y_column: string | null;\n}\n\nexport interface ChartItem extends BaseChartItem, ChartItemFields {\n  type: ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE;\n}\n\nexport interface BubbleChartItemFields extends ChartItemFields {\n  z_column: string | null;\n}\n\nexport interface BubbleChartItem extends BaseChartItem, BubbleChartItemFields {\n  type: ChartType.BUBBLE;\n}\n\nexport type DashboardItem = ChartItem | BubbleChartItem;\n\nexport interface Dashboard {\n  name: string;\n  traindb_id: number;\n  query_id: number;\n}\n\nexport interface CreateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport interface UpdateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport type FindDashboardItem = { id: number; dashboard_id: number } & DashboardItem;\n\nexport interface FindDashboard extends Dashboard {\n  id: number;\n  query: FindQuery;\n  items: FindDashboardItem[];\n}\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartType",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BubbleChartItem",
            "id": "interface-BubbleChartItem-68d08ba989a8ad8ce27976d18907f33b61b69b2538a509b22ced57dede16d2aa25c5f393be7c63035d4d9d6fac2b6b5467e669db844fce3fd2e31bc15d61ce2b",
            "file": "src/app/dto/dashboard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindQuery } from './query';\n\nexport enum ChartType {\n  BAR = 'bar',\n  LINE = 'line',\n  SCATTER = 'scatter',\n  PIE = 'pie',\n  BUBBLE = 'bubble'\n}\n\nexport const CHART_TYPES = Object.values(ChartType);\n\nexport interface BaseChartItem {\n  type: ChartType;\n}\n\nexport interface ChartItemFields {\n  x_column: string | null;\n  y_column: string | null;\n}\n\nexport interface ChartItem extends BaseChartItem, ChartItemFields {\n  type: ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE;\n}\n\nexport interface BubbleChartItemFields extends ChartItemFields {\n  z_column: string | null;\n}\n\nexport interface BubbleChartItem extends BaseChartItem, BubbleChartItemFields {\n  type: ChartType.BUBBLE;\n}\n\nexport type DashboardItem = ChartItem | BubbleChartItem;\n\nexport interface Dashboard {\n  name: string;\n  traindb_id: number;\n  query_id: number;\n}\n\nexport interface CreateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport interface UpdateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport type FindDashboardItem = { id: number; dashboard_id: number } & DashboardItem;\n\nexport interface FindDashboard extends Dashboard {\n  id: number;\n  query: FindQuery;\n  items: FindDashboardItem[];\n}\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartType.BUBBLE",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "BaseChartItem",
                "BubbleChartItemFields"
            ]
        },
        {
            "name": "BubbleChartItemFields",
            "id": "interface-BubbleChartItemFields-68d08ba989a8ad8ce27976d18907f33b61b69b2538a509b22ced57dede16d2aa25c5f393be7c63035d4d9d6fac2b6b5467e669db844fce3fd2e31bc15d61ce2b",
            "file": "src/app/dto/dashboard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindQuery } from './query';\n\nexport enum ChartType {\n  BAR = 'bar',\n  LINE = 'line',\n  SCATTER = 'scatter',\n  PIE = 'pie',\n  BUBBLE = 'bubble'\n}\n\nexport const CHART_TYPES = Object.values(ChartType);\n\nexport interface BaseChartItem {\n  type: ChartType;\n}\n\nexport interface ChartItemFields {\n  x_column: string | null;\n  y_column: string | null;\n}\n\nexport interface ChartItem extends BaseChartItem, ChartItemFields {\n  type: ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE;\n}\n\nexport interface BubbleChartItemFields extends ChartItemFields {\n  z_column: string | null;\n}\n\nexport interface BubbleChartItem extends BaseChartItem, BubbleChartItemFields {\n  type: ChartType.BUBBLE;\n}\n\nexport type DashboardItem = ChartItem | BubbleChartItem;\n\nexport interface Dashboard {\n  name: string;\n  traindb_id: number;\n  query_id: number;\n}\n\nexport interface CreateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport interface UpdateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport type FindDashboardItem = { id: number; dashboard_id: number } & DashboardItem;\n\nexport interface FindDashboard extends Dashboard {\n  id: number;\n  query: FindQuery;\n  items: FindDashboardItem[];\n}\n",
            "properties": [
                {
                    "name": "z_column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "ChartItemFields"
            ]
        },
        {
            "name": "ChartItem",
            "id": "interface-ChartItem-68d08ba989a8ad8ce27976d18907f33b61b69b2538a509b22ced57dede16d2aa25c5f393be7c63035d4d9d6fac2b6b5467e669db844fce3fd2e31bc15d61ce2b",
            "file": "src/app/dto/dashboard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindQuery } from './query';\n\nexport enum ChartType {\n  BAR = 'bar',\n  LINE = 'line',\n  SCATTER = 'scatter',\n  PIE = 'pie',\n  BUBBLE = 'bubble'\n}\n\nexport const CHART_TYPES = Object.values(ChartType);\n\nexport interface BaseChartItem {\n  type: ChartType;\n}\n\nexport interface ChartItemFields {\n  x_column: string | null;\n  y_column: string | null;\n}\n\nexport interface ChartItem extends BaseChartItem, ChartItemFields {\n  type: ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE;\n}\n\nexport interface BubbleChartItemFields extends ChartItemFields {\n  z_column: string | null;\n}\n\nexport interface BubbleChartItem extends BaseChartItem, BubbleChartItemFields {\n  type: ChartType.BUBBLE;\n}\n\nexport type DashboardItem = ChartItem | BubbleChartItem;\n\nexport interface Dashboard {\n  name: string;\n  traindb_id: number;\n  query_id: number;\n}\n\nexport interface CreateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport interface UpdateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport type FindDashboardItem = { id: number; dashboard_id: number } & DashboardItem;\n\nexport interface FindDashboard extends Dashboard {\n  id: number;\n  query: FindQuery;\n  items: FindDashboardItem[];\n}\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "BaseChartItem",
                "ChartItemFields"
            ]
        },
        {
            "name": "ChartItemFields",
            "id": "interface-ChartItemFields-68d08ba989a8ad8ce27976d18907f33b61b69b2538a509b22ced57dede16d2aa25c5f393be7c63035d4d9d6fac2b6b5467e669db844fce3fd2e31bc15d61ce2b",
            "file": "src/app/dto/dashboard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindQuery } from './query';\n\nexport enum ChartType {\n  BAR = 'bar',\n  LINE = 'line',\n  SCATTER = 'scatter',\n  PIE = 'pie',\n  BUBBLE = 'bubble'\n}\n\nexport const CHART_TYPES = Object.values(ChartType);\n\nexport interface BaseChartItem {\n  type: ChartType;\n}\n\nexport interface ChartItemFields {\n  x_column: string | null;\n  y_column: string | null;\n}\n\nexport interface ChartItem extends BaseChartItem, ChartItemFields {\n  type: ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE;\n}\n\nexport interface BubbleChartItemFields extends ChartItemFields {\n  z_column: string | null;\n}\n\nexport interface BubbleChartItem extends BaseChartItem, BubbleChartItemFields {\n  type: ChartType.BUBBLE;\n}\n\nexport type DashboardItem = ChartItem | BubbleChartItem;\n\nexport interface Dashboard {\n  name: string;\n  traindb_id: number;\n  query_id: number;\n}\n\nexport interface CreateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport interface UpdateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport type FindDashboardItem = { id: number; dashboard_id: number } & DashboardItem;\n\nexport interface FindDashboard extends Dashboard {\n  id: number;\n  query: FindQuery;\n  items: FindDashboardItem[];\n}\n",
            "properties": [
                {
                    "name": "x_column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "y_column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Column",
            "id": "interface-Column-ef141e17b2994d5d912d9f70bfe58a3b56d7bd9178d1c7c9177089834e4bc6488f4c09e78a9c980cb52c0e4bc2ffa255783dafef97682fd53d038dd063c42708",
            "file": "src/app/dto/column.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Column {\n  name: string;\n  type: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CreateDashboard",
            "id": "interface-CreateDashboard-68d08ba989a8ad8ce27976d18907f33b61b69b2538a509b22ced57dede16d2aa25c5f393be7c63035d4d9d6fac2b6b5467e669db844fce3fd2e31bc15d61ce2b",
            "file": "src/app/dto/dashboard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindQuery } from './query';\n\nexport enum ChartType {\n  BAR = 'bar',\n  LINE = 'line',\n  SCATTER = 'scatter',\n  PIE = 'pie',\n  BUBBLE = 'bubble'\n}\n\nexport const CHART_TYPES = Object.values(ChartType);\n\nexport interface BaseChartItem {\n  type: ChartType;\n}\n\nexport interface ChartItemFields {\n  x_column: string | null;\n  y_column: string | null;\n}\n\nexport interface ChartItem extends BaseChartItem, ChartItemFields {\n  type: ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE;\n}\n\nexport interface BubbleChartItemFields extends ChartItemFields {\n  z_column: string | null;\n}\n\nexport interface BubbleChartItem extends BaseChartItem, BubbleChartItemFields {\n  type: ChartType.BUBBLE;\n}\n\nexport type DashboardItem = ChartItem | BubbleChartItem;\n\nexport interface Dashboard {\n  name: string;\n  traindb_id: number;\n  query_id: number;\n}\n\nexport interface CreateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport interface UpdateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport type FindDashboardItem = { id: number; dashboard_id: number } & DashboardItem;\n\nexport interface FindDashboard extends Dashboard {\n  id: number;\n  query: FindQuery;\n  items: FindDashboardItem[];\n}\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DashboardItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "Dashboard"
            ]
        },
        {
            "name": "CreateDatabase",
            "id": "interface-CreateDatabase-888ab5d8d95ab0cb45990085cece19463ad8de899301d81738298a20444393b6786f32b70801af6fd98895ca1924f07274ff7790a3f4ddb936bc5b9fba66b6ac",
            "file": "src/app/dto/database.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindTrainDBDto } from './traindb';\n\nexport interface Database {\n  dbms: string;\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindDatabase extends Database {\n  id: number;\n  name: string;\n  traindb_id: number;\n  traindb: FindTrainDBDto;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface TestDatabaseConnectionRequest extends Omit<Database, 'name' | 'traindb_id'> {\n  server_host: string | null;\n  server_port: number | string | null;\n}\n\nexport interface TestDatabaseConnectionResponse {\n  success: boolean;\n}\n\nexport interface CreateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n\nexport interface UpdateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "traindb_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "Database"
            ]
        },
        {
            "name": "CreateModeltypeDto",
            "id": "interface-CreateModeltypeDto-c9e7037dcfa5376b6611f19f5ff9e5a7465fe46ae2a0bded30c424f9a10eded0f3ff0c25317ec9b5021c65ab43cdb0db23b12d9ede2021e2d6512ae2a59d7507",
            "file": "src/app/dto/modeltype.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Modeltype {\n  name: string;\n  category: string;\n  location: string;\n  className: string;\n  uri: string;\n}\n\nexport interface FindModeltypeDto extends Modeltype {}\n\nexport interface CreateModeltypeDto extends Modeltype {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Modeltype"
            ]
        },
        {
            "name": "CreateQuery",
            "id": "interface-CreateQuery-d254db1e31d8de645d6e2563976df1440adb8362c23546c72ab22edd1907387e3508c75e3e4b715c104987a6fd146d084bd6ed5d263e49eb594deeebe7833104",
            "file": "src/app/dto/query.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Database } from './database';\nimport { TrainDB } from './traindb';\n\nexport interface Query {\n  name: string;\n  traindb_id: number;\n  database_id: number;\n  is_approximate: boolean;\n  sql: string;\n}\n\nexport interface FindQuery extends Query {\n  id: number;\n  traindb: TrainDB;\n  database: Database;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface RunQuery {\n  columns: string[];\n  types: string[];\n  data: Array<any[]>;\n  execution_time: number;\n}\n\nexport interface CreateQuery extends Query {}\n\nexport interface UpdateQuery extends Query {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Query"
            ]
        },
        {
            "name": "CreateSynopsis",
            "id": "interface-CreateSynopsis-6ef5b128fa0566a1068bd040e7b1970ce94542d16fb559f1bccdae1b28f3a9d4b25f5c2d3407277d2c1f2b497e29698746b2c4eb9e531ec90a3fcdaefebcdc29",
            "file": "src/app/dto/synopsis.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Synopsis {\n  name: string;\n  model: string;\n  schema: string;\n  table: string;\n  columns: string[];\n  rows: number;\n  ratio: string;\n  external: string;\n  status: string;\n  statistics: string;\n}\n\nexport interface CreateSynopsis {\n  name: string;\n  model: string;\n  limit_rows: string;\n  is_percent: boolean | null;\n}\n\nexport interface UpdateSynopsis {\n  name: string | null;\n  status: string | null;\n}\n",
            "properties": [
                {
                    "name": "is_percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "limit_rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CreateTrainDBDto",
            "id": "interface-CreateTrainDBDto-c06e9616fe7dc3de005ea98abbdb12292a6bd96d0362fe69886d0814523da1406344eda12a3814499d97b6e5e3c7c81c7604aadff177df09b1706e3b294900a8",
            "file": "src/app/dto/traindb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TrainDB {\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindTrainDBDto extends TrainDB {\n  id: number;\n  name: string;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface CreateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface UpdateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface TestTrainDBConnectionRequestDto extends TrainDB {}\n\nexport interface TestTrainDBConnectionResponseDto {\n  success: boolean;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "TrainDB"
            ]
        },
        {
            "name": "Dashboard",
            "id": "interface-Dashboard-68d08ba989a8ad8ce27976d18907f33b61b69b2538a509b22ced57dede16d2aa25c5f393be7c63035d4d9d6fac2b6b5467e669db844fce3fd2e31bc15d61ce2b",
            "file": "src/app/dto/dashboard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindQuery } from './query';\n\nexport enum ChartType {\n  BAR = 'bar',\n  LINE = 'line',\n  SCATTER = 'scatter',\n  PIE = 'pie',\n  BUBBLE = 'bubble'\n}\n\nexport const CHART_TYPES = Object.values(ChartType);\n\nexport interface BaseChartItem {\n  type: ChartType;\n}\n\nexport interface ChartItemFields {\n  x_column: string | null;\n  y_column: string | null;\n}\n\nexport interface ChartItem extends BaseChartItem, ChartItemFields {\n  type: ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE;\n}\n\nexport interface BubbleChartItemFields extends ChartItemFields {\n  z_column: string | null;\n}\n\nexport interface BubbleChartItem extends BaseChartItem, BubbleChartItemFields {\n  type: ChartType.BUBBLE;\n}\n\nexport type DashboardItem = ChartItem | BubbleChartItem;\n\nexport interface Dashboard {\n  name: string;\n  traindb_id: number;\n  query_id: number;\n}\n\nexport interface CreateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport interface UpdateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport type FindDashboardItem = { id: number; dashboard_id: number } & DashboardItem;\n\nexport interface FindDashboard extends Dashboard {\n  id: number;\n  query: FindQuery;\n  items: FindDashboardItem[];\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "query_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "traindb_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Database",
            "id": "interface-Database-888ab5d8d95ab0cb45990085cece19463ad8de899301d81738298a20444393b6786f32b70801af6fd98895ca1924f07274ff7790a3f4ddb936bc5b9fba66b6ac",
            "file": "src/app/dto/database.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindTrainDBDto } from './traindb';\n\nexport interface Database {\n  dbms: string;\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindDatabase extends Database {\n  id: number;\n  name: string;\n  traindb_id: number;\n  traindb: FindTrainDBDto;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface TestDatabaseConnectionRequest extends Omit<Database, 'name' | 'traindb_id'> {\n  server_host: string | null;\n  server_port: number | string | null;\n}\n\nexport interface TestDatabaseConnectionResponse {\n  success: boolean;\n}\n\nexport interface CreateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n\nexport interface UpdateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n",
            "properties": [
                {
                    "name": "dbms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "host",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "port",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FindDashboard",
            "id": "interface-FindDashboard-68d08ba989a8ad8ce27976d18907f33b61b69b2538a509b22ced57dede16d2aa25c5f393be7c63035d4d9d6fac2b6b5467e669db844fce3fd2e31bc15d61ce2b",
            "file": "src/app/dto/dashboard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindQuery } from './query';\n\nexport enum ChartType {\n  BAR = 'bar',\n  LINE = 'line',\n  SCATTER = 'scatter',\n  PIE = 'pie',\n  BUBBLE = 'bubble'\n}\n\nexport const CHART_TYPES = Object.values(ChartType);\n\nexport interface BaseChartItem {\n  type: ChartType;\n}\n\nexport interface ChartItemFields {\n  x_column: string | null;\n  y_column: string | null;\n}\n\nexport interface ChartItem extends BaseChartItem, ChartItemFields {\n  type: ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE;\n}\n\nexport interface BubbleChartItemFields extends ChartItemFields {\n  z_column: string | null;\n}\n\nexport interface BubbleChartItem extends BaseChartItem, BubbleChartItemFields {\n  type: ChartType.BUBBLE;\n}\n\nexport type DashboardItem = ChartItem | BubbleChartItem;\n\nexport interface Dashboard {\n  name: string;\n  traindb_id: number;\n  query_id: number;\n}\n\nexport interface CreateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport interface UpdateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport type FindDashboardItem = { id: number; dashboard_id: number } & DashboardItem;\n\nexport interface FindDashboard extends Dashboard {\n  id: number;\n  query: FindQuery;\n  items: FindDashboardItem[];\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FindDashboardItem[]",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FindQuery",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "Dashboard"
            ]
        },
        {
            "name": "FindDatabase",
            "id": "interface-FindDatabase-888ab5d8d95ab0cb45990085cece19463ad8de899301d81738298a20444393b6786f32b70801af6fd98895ca1924f07274ff7790a3f4ddb936bc5b9fba66b6ac",
            "file": "src/app/dto/database.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindTrainDBDto } from './traindb';\n\nexport interface Database {\n  dbms: string;\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindDatabase extends Database {\n  id: number;\n  name: string;\n  traindb_id: number;\n  traindb: FindTrainDBDto;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface TestDatabaseConnectionRequest extends Omit<Database, 'name' | 'traindb_id'> {\n  server_host: string | null;\n  server_port: number | string | null;\n}\n\nexport interface TestDatabaseConnectionResponse {\n  success: boolean;\n}\n\nexport interface CreateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n\nexport interface UpdateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "traindb",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FindTrainDBDto",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "traindb_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "Database"
            ]
        },
        {
            "name": "FindModeltypeDto",
            "id": "interface-FindModeltypeDto-c9e7037dcfa5376b6611f19f5ff9e5a7465fe46ae2a0bded30c424f9a10eded0f3ff0c25317ec9b5021c65ab43cdb0db23b12d9ede2021e2d6512ae2a59d7507",
            "file": "src/app/dto/modeltype.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Modeltype {\n  name: string;\n  category: string;\n  location: string;\n  className: string;\n  uri: string;\n}\n\nexport interface FindModeltypeDto extends Modeltype {}\n\nexport interface CreateModeltypeDto extends Modeltype {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Modeltype"
            ]
        },
        {
            "name": "FindQuery",
            "id": "interface-FindQuery-d254db1e31d8de645d6e2563976df1440adb8362c23546c72ab22edd1907387e3508c75e3e4b715c104987a6fd146d084bd6ed5d263e49eb594deeebe7833104",
            "file": "src/app/dto/query.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Database } from './database';\nimport { TrainDB } from './traindb';\n\nexport interface Query {\n  name: string;\n  traindb_id: number;\n  database_id: number;\n  is_approximate: boolean;\n  sql: string;\n}\n\nexport interface FindQuery extends Query {\n  id: number;\n  traindb: TrainDB;\n  database: Database;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface RunQuery {\n  columns: string[];\n  types: string[];\n  data: Array<any[]>;\n  execution_time: number;\n}\n\nexport interface CreateQuery extends Query {}\n\nexport interface UpdateQuery extends Query {}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "database",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Database",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "traindb",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainDB",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "Query"
            ]
        },
        {
            "name": "FindTrainDBDto",
            "id": "interface-FindTrainDBDto-c06e9616fe7dc3de005ea98abbdb12292a6bd96d0362fe69886d0814523da1406344eda12a3814499d97b6e5e3c7c81c7604aadff177df09b1706e3b294900a8",
            "file": "src/app/dto/traindb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TrainDB {\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindTrainDBDto extends TrainDB {\n  id: number;\n  name: string;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface CreateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface UpdateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface TestTrainDBConnectionRequestDto extends TrainDB {}\n\nexport interface TestTrainDBConnectionResponseDto {\n  success: boolean;\n}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "TrainDB"
            ]
        },
        {
            "name": "HyperParameter",
            "id": "interface-HyperParameter-8a485d04f16f4ba39e5908bcfd26040393c9c9dfc1f77fea075476b319495241127b0166ac39e88078ae0217846ef32a7a276a76b31044e11fb6396e2bd2a9ee",
            "file": "src/app/dto/hyper-parameter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface HyperParameter {\n  modeltype: string;\n  name: string;\n  type: string;\n  default_value: string;\n  description: string;\n}\n",
            "properties": [
                {
                    "name": "default_value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "modeltype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Model",
            "id": "interface-Model-0e9c5f5bfe27475cb89d25916d282d8676cb50e832e118f00734b1a337f8caf259de1a51e46c54134907971fe9ebcc1e102e7813b4412a28403b3dddce1f17e7",
            "file": "src/app/dto/model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Model {\n  name: string;\n  modeltype: string;\n  schema: string;\n  table: string;\n  columns: string[];\n  table_rows: number;\n  trained_rows: number;\n  status: string;\n  server: string | null;\n  start: string | null;\n  training_status: string | null;\n  options: any;\n}\n\nexport interface UpdateModel {\n  name: string | null;\n  status: string | null;\n}\n\nexport interface TrainModelOption {\n  name: string;\n  value: string;\n}\n\nexport interface TrainModel {\n  name: string;\n  database_id: number;\n  schema: string;\n  table: string;\n  columns: string[];\n  modeltype: string;\n  sample: string | null;\n  options: TrainModelOption[];\n}\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "modeltype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "server",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "table_rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "trained_rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "training_status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Modeltype",
            "id": "interface-Modeltype-c9e7037dcfa5376b6611f19f5ff9e5a7465fe46ae2a0bded30c424f9a10eded0f3ff0c25317ec9b5021c65ab43cdb0db23b12d9ede2021e2d6512ae2a59d7507",
            "file": "src/app/dto/modeltype.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Modeltype {\n  name: string;\n  category: string;\n  location: string;\n  className: string;\n  uri: string;\n}\n\nexport interface FindModeltypeDto extends Modeltype {}\n\nexport interface CreateModeltypeDto extends Modeltype {}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "uri",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Query",
            "id": "interface-Query-d254db1e31d8de645d6e2563976df1440adb8362c23546c72ab22edd1907387e3508c75e3e4b715c104987a6fd146d084bd6ed5d263e49eb594deeebe7833104",
            "file": "src/app/dto/query.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Database } from './database';\nimport { TrainDB } from './traindb';\n\nexport interface Query {\n  name: string;\n  traindb_id: number;\n  database_id: number;\n  is_approximate: boolean;\n  sql: string;\n}\n\nexport interface FindQuery extends Query {\n  id: number;\n  traindb: TrainDB;\n  database: Database;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface RunQuery {\n  columns: string[];\n  types: string[];\n  data: Array<any[]>;\n  execution_time: number;\n}\n\nexport interface CreateQuery extends Query {}\n\nexport interface UpdateQuery extends Query {}\n",
            "properties": [
                {
                    "name": "database_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "is_approximate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "sql",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "traindb_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "RunQuery",
            "id": "interface-RunQuery-d254db1e31d8de645d6e2563976df1440adb8362c23546c72ab22edd1907387e3508c75e3e4b715c104987a6fd146d084bd6ed5d263e49eb594deeebe7833104",
            "file": "src/app/dto/query.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Database } from './database';\nimport { TrainDB } from './traindb';\n\nexport interface Query {\n  name: string;\n  traindb_id: number;\n  database_id: number;\n  is_approximate: boolean;\n  sql: string;\n}\n\nexport interface FindQuery extends Query {\n  id: number;\n  traindb: TrainDB;\n  database: Database;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface RunQuery {\n  columns: string[];\n  types: string[];\n  data: Array<any[]>;\n  execution_time: number;\n}\n\nexport interface CreateQuery extends Query {}\n\nexport interface UpdateQuery extends Query {}\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "execution_time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Schema",
            "id": "interface-Schema-6ee1111534c978539e0d4808ee816cdba8178f1f0db2781fdf12c515bacf11c174038103d3194901e89870d8b387d92e1318dcd09048cd85a1eae8933293af9c",
            "file": "src/app/dto/schema.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Table } from './table';\n\nexport interface Schema {\n  name: string;\n  tables: Table[];\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "tables",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Table[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Synopsis",
            "id": "interface-Synopsis-6ef5b128fa0566a1068bd040e7b1970ce94542d16fb559f1bccdae1b28f3a9d4b25f5c2d3407277d2c1f2b497e29698746b2c4eb9e531ec90a3fcdaefebcdc29",
            "file": "src/app/dto/synopsis.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Synopsis {\n  name: string;\n  model: string;\n  schema: string;\n  table: string;\n  columns: string[];\n  rows: number;\n  ratio: string;\n  external: string;\n  status: string;\n  statistics: string;\n}\n\nexport interface CreateSynopsis {\n  name: string;\n  model: string;\n  limit_rows: string;\n  is_percent: boolean | null;\n}\n\nexport interface UpdateSynopsis {\n  name: string | null;\n  status: string | null;\n}\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "external",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "ratio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "statistics",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Table",
            "id": "interface-Table-2af3a08d67a26ca72f5a2958b29276c4c657e69ce150d9b63f11f7a9be0dbb271d94476587c54974f082063463d737c99aeab23e9151e4b53bccde213b28ac40",
            "file": "src/app/dto/table.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Table {\n  name: string;\n  type: string;\n}\n\nexport interface TablePreviewRequest {\n  database_id: number;\n  schema: string;\n  table: string;\n  columns: string[];\n}\n\nexport interface TablePreviewResponse {\n  columns: string[];\n  types: string[];\n  data: Array<any[]>;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TablePreviewRequest",
            "id": "interface-TablePreviewRequest-2af3a08d67a26ca72f5a2958b29276c4c657e69ce150d9b63f11f7a9be0dbb271d94476587c54974f082063463d737c99aeab23e9151e4b53bccde213b28ac40",
            "file": "src/app/dto/table.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Table {\n  name: string;\n  type: string;\n}\n\nexport interface TablePreviewRequest {\n  database_id: number;\n  schema: string;\n  table: string;\n  columns: string[];\n}\n\nexport interface TablePreviewResponse {\n  columns: string[];\n  types: string[];\n  data: Array<any[]>;\n}\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "database_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TablePreviewResponse",
            "id": "interface-TablePreviewResponse-2af3a08d67a26ca72f5a2958b29276c4c657e69ce150d9b63f11f7a9be0dbb271d94476587c54974f082063463d737c99aeab23e9151e4b53bccde213b28ac40",
            "file": "src/app/dto/table.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Table {\n  name: string;\n  type: string;\n}\n\nexport interface TablePreviewRequest {\n  database_id: number;\n  schema: string;\n  table: string;\n  columns: string[];\n}\n\nexport interface TablePreviewResponse {\n  columns: string[];\n  types: string[];\n  data: Array<any[]>;\n}\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TestDatabaseConnectionRequest",
            "id": "interface-TestDatabaseConnectionRequest-888ab5d8d95ab0cb45990085cece19463ad8de899301d81738298a20444393b6786f32b70801af6fd98895ca1924f07274ff7790a3f4ddb936bc5b9fba66b6ac",
            "file": "src/app/dto/database.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindTrainDBDto } from './traindb';\n\nexport interface Database {\n  dbms: string;\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindDatabase extends Database {\n  id: number;\n  name: string;\n  traindb_id: number;\n  traindb: FindTrainDBDto;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface TestDatabaseConnectionRequest extends Omit<Database, 'name' | 'traindb_id'> {\n  server_host: string | null;\n  server_port: number | string | null;\n}\n\nexport interface TestDatabaseConnectionResponse {\n  success: boolean;\n}\n\nexport interface CreateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n\nexport interface UpdateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n",
            "properties": [
                {
                    "name": "server_host",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "server_port",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string | null",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "Omit"
            ]
        },
        {
            "name": "TestDatabaseConnectionResponse",
            "id": "interface-TestDatabaseConnectionResponse-888ab5d8d95ab0cb45990085cece19463ad8de899301d81738298a20444393b6786f32b70801af6fd98895ca1924f07274ff7790a3f4ddb936bc5b9fba66b6ac",
            "file": "src/app/dto/database.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindTrainDBDto } from './traindb';\n\nexport interface Database {\n  dbms: string;\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindDatabase extends Database {\n  id: number;\n  name: string;\n  traindb_id: number;\n  traindb: FindTrainDBDto;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface TestDatabaseConnectionRequest extends Omit<Database, 'name' | 'traindb_id'> {\n  server_host: string | null;\n  server_port: number | string | null;\n}\n\nexport interface TestDatabaseConnectionResponse {\n  success: boolean;\n}\n\nexport interface CreateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n\nexport interface UpdateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n",
            "properties": [
                {
                    "name": "success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TestTrainDBConnectionRequestDto",
            "id": "interface-TestTrainDBConnectionRequestDto-c06e9616fe7dc3de005ea98abbdb12292a6bd96d0362fe69886d0814523da1406344eda12a3814499d97b6e5e3c7c81c7604aadff177df09b1706e3b294900a8",
            "file": "src/app/dto/traindb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TrainDB {\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindTrainDBDto extends TrainDB {\n  id: number;\n  name: string;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface CreateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface UpdateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface TestTrainDBConnectionRequestDto extends TrainDB {}\n\nexport interface TestTrainDBConnectionResponseDto {\n  success: boolean;\n}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "TrainDB"
            ]
        },
        {
            "name": "TestTrainDBConnectionResponseDto",
            "id": "interface-TestTrainDBConnectionResponseDto-c06e9616fe7dc3de005ea98abbdb12292a6bd96d0362fe69886d0814523da1406344eda12a3814499d97b6e5e3c7c81c7604aadff177df09b1706e3b294900a8",
            "file": "src/app/dto/traindb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TrainDB {\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindTrainDBDto extends TrainDB {\n  id: number;\n  name: string;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface CreateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface UpdateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface TestTrainDBConnectionRequestDto extends TrainDB {}\n\nexport interface TestTrainDBConnectionResponseDto {\n  success: boolean;\n}\n",
            "properties": [
                {
                    "name": "success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TrainDB",
            "id": "interface-TrainDB-c06e9616fe7dc3de005ea98abbdb12292a6bd96d0362fe69886d0814523da1406344eda12a3814499d97b6e5e3c7c81c7604aadff177df09b1706e3b294900a8",
            "file": "src/app/dto/traindb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TrainDB {\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindTrainDBDto extends TrainDB {\n  id: number;\n  name: string;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface CreateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface UpdateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface TestTrainDBConnectionRequestDto extends TrainDB {}\n\nexport interface TestTrainDBConnectionResponseDto {\n  success: boolean;\n}\n",
            "properties": [
                {
                    "name": "host",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "port",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TrainModel",
            "id": "interface-TrainModel-0e9c5f5bfe27475cb89d25916d282d8676cb50e832e118f00734b1a337f8caf259de1a51e46c54134907971fe9ebcc1e102e7813b4412a28403b3dddce1f17e7",
            "file": "src/app/dto/model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Model {\n  name: string;\n  modeltype: string;\n  schema: string;\n  table: string;\n  columns: string[];\n  table_rows: number;\n  trained_rows: number;\n  status: string;\n  server: string | null;\n  start: string | null;\n  training_status: string | null;\n  options: any;\n}\n\nexport interface UpdateModel {\n  name: string | null;\n  status: string | null;\n}\n\nexport interface TrainModelOption {\n  name: string;\n  value: string;\n}\n\nexport interface TrainModel {\n  name: string;\n  database_id: number;\n  schema: string;\n  table: string;\n  columns: string[];\n  modeltype: string;\n  sample: string | null;\n  options: TrainModelOption[];\n}\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "database_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "modeltype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainModelOption[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "sample",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TrainModelOption",
            "id": "interface-TrainModelOption-0e9c5f5bfe27475cb89d25916d282d8676cb50e832e118f00734b1a337f8caf259de1a51e46c54134907971fe9ebcc1e102e7813b4412a28403b3dddce1f17e7",
            "file": "src/app/dto/model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Model {\n  name: string;\n  modeltype: string;\n  schema: string;\n  table: string;\n  columns: string[];\n  table_rows: number;\n  trained_rows: number;\n  status: string;\n  server: string | null;\n  start: string | null;\n  training_status: string | null;\n  options: any;\n}\n\nexport interface UpdateModel {\n  name: string | null;\n  status: string | null;\n}\n\nexport interface TrainModelOption {\n  name: string;\n  value: string;\n}\n\nexport interface TrainModel {\n  name: string;\n  database_id: number;\n  schema: string;\n  table: string;\n  columns: string[];\n  modeltype: string;\n  sample: string | null;\n  options: TrainModelOption[];\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UpdateDashboard",
            "id": "interface-UpdateDashboard-68d08ba989a8ad8ce27976d18907f33b61b69b2538a509b22ced57dede16d2aa25c5f393be7c63035d4d9d6fac2b6b5467e669db844fce3fd2e31bc15d61ce2b",
            "file": "src/app/dto/dashboard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindQuery } from './query';\n\nexport enum ChartType {\n  BAR = 'bar',\n  LINE = 'line',\n  SCATTER = 'scatter',\n  PIE = 'pie',\n  BUBBLE = 'bubble'\n}\n\nexport const CHART_TYPES = Object.values(ChartType);\n\nexport interface BaseChartItem {\n  type: ChartType;\n}\n\nexport interface ChartItemFields {\n  x_column: string | null;\n  y_column: string | null;\n}\n\nexport interface ChartItem extends BaseChartItem, ChartItemFields {\n  type: ChartType.BAR | ChartType.LINE | ChartType.SCATTER | ChartType.PIE;\n}\n\nexport interface BubbleChartItemFields extends ChartItemFields {\n  z_column: string | null;\n}\n\nexport interface BubbleChartItem extends BaseChartItem, BubbleChartItemFields {\n  type: ChartType.BUBBLE;\n}\n\nexport type DashboardItem = ChartItem | BubbleChartItem;\n\nexport interface Dashboard {\n  name: string;\n  traindb_id: number;\n  query_id: number;\n}\n\nexport interface CreateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport interface UpdateDashboard extends Dashboard {\n  items: DashboardItem[];\n}\n\nexport type FindDashboardItem = { id: number; dashboard_id: number } & DashboardItem;\n\nexport interface FindDashboard extends Dashboard {\n  id: number;\n  query: FindQuery;\n  items: FindDashboardItem[];\n}\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DashboardItem[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "Dashboard"
            ]
        },
        {
            "name": "UpdateDatabase",
            "id": "interface-UpdateDatabase-888ab5d8d95ab0cb45990085cece19463ad8de899301d81738298a20444393b6786f32b70801af6fd98895ca1924f07274ff7790a3f4ddb936bc5b9fba66b6ac",
            "file": "src/app/dto/database.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FindTrainDBDto } from './traindb';\n\nexport interface Database {\n  dbms: string;\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindDatabase extends Database {\n  id: number;\n  name: string;\n  traindb_id: number;\n  traindb: FindTrainDBDto;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface TestDatabaseConnectionRequest extends Omit<Database, 'name' | 'traindb_id'> {\n  server_host: string | null;\n  server_port: number | string | null;\n}\n\nexport interface TestDatabaseConnectionResponse {\n  success: boolean;\n}\n\nexport interface CreateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n\nexport interface UpdateDatabase extends Database {\n  name: string;\n  traindb_id: number;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "traindb_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "Database"
            ]
        },
        {
            "name": "UpdateModel",
            "id": "interface-UpdateModel-0e9c5f5bfe27475cb89d25916d282d8676cb50e832e118f00734b1a337f8caf259de1a51e46c54134907971fe9ebcc1e102e7813b4412a28403b3dddce1f17e7",
            "file": "src/app/dto/model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Model {\n  name: string;\n  modeltype: string;\n  schema: string;\n  table: string;\n  columns: string[];\n  table_rows: number;\n  trained_rows: number;\n  status: string;\n  server: string | null;\n  start: string | null;\n  training_status: string | null;\n  options: any;\n}\n\nexport interface UpdateModel {\n  name: string | null;\n  status: string | null;\n}\n\nexport interface TrainModelOption {\n  name: string;\n  value: string;\n}\n\nexport interface TrainModel {\n  name: string;\n  database_id: number;\n  schema: string;\n  table: string;\n  columns: string[];\n  modeltype: string;\n  sample: string | null;\n  options: TrainModelOption[];\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UpdateQuery",
            "id": "interface-UpdateQuery-d254db1e31d8de645d6e2563976df1440adb8362c23546c72ab22edd1907387e3508c75e3e4b715c104987a6fd146d084bd6ed5d263e49eb594deeebe7833104",
            "file": "src/app/dto/query.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Database } from './database';\nimport { TrainDB } from './traindb';\n\nexport interface Query {\n  name: string;\n  traindb_id: number;\n  database_id: number;\n  is_approximate: boolean;\n  sql: string;\n}\n\nexport interface FindQuery extends Query {\n  id: number;\n  traindb: TrainDB;\n  database: Database;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface RunQuery {\n  columns: string[];\n  types: string[];\n  data: Array<any[]>;\n  execution_time: number;\n}\n\nexport interface CreateQuery extends Query {}\n\nexport interface UpdateQuery extends Query {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Query"
            ]
        },
        {
            "name": "UpdateSynopsis",
            "id": "interface-UpdateSynopsis-6ef5b128fa0566a1068bd040e7b1970ce94542d16fb559f1bccdae1b28f3a9d4b25f5c2d3407277d2c1f2b497e29698746b2c4eb9e531ec90a3fcdaefebcdc29",
            "file": "src/app/dto/synopsis.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Synopsis {\n  name: string;\n  model: string;\n  schema: string;\n  table: string;\n  columns: string[];\n  rows: number;\n  ratio: string;\n  external: string;\n  status: string;\n  statistics: string;\n}\n\nexport interface CreateSynopsis {\n  name: string;\n  model: string;\n  limit_rows: string;\n  is_percent: boolean | null;\n}\n\nexport interface UpdateSynopsis {\n  name: string | null;\n  status: string | null;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UpdateTrainDBDto",
            "id": "interface-UpdateTrainDBDto-c06e9616fe7dc3de005ea98abbdb12292a6bd96d0362fe69886d0814523da1406344eda12a3814499d97b6e5e3c7c81c7604aadff177df09b1706e3b294900a8",
            "file": "src/app/dto/traindb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TrainDB {\n  host: string;\n  port: number | string;\n  username: string | null;\n  password: string | null;\n}\n\nexport interface FindTrainDBDto extends TrainDB {\n  id: number;\n  name: string;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport interface CreateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface UpdateTrainDBDto extends TrainDB {\n  name: string;\n}\n\nexport interface TestTrainDBConnectionRequestDto extends TrainDB {}\n\nexport interface TestTrainDBConnectionResponseDto {\n  success: boolean;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "TrainDB"
            ]
        }
    ],
    "injectables": [
        {
            "name": "DashboardService",
            "id": "injectable-DashboardService-c1434ddefd4ea4a70f8a5912b31c5efb911d163d8c5ef4e6978bcdc9775fd92730895d31094375f1d35a9846d3e851e98b991a45eb754279dc43d4546c48b402",
            "file": "src/app/services/dashboard.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "environment.apiHost + '/dashboard'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "createDashboard",
                    "args": [
                        {
                            "name": "dto",
                            "type": "CreateDashboard",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "CreateDashboard",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteDashboard",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchDashboard",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDashboard",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "UpdateDashboard",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "UpdateDashboard",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { CreateDashboard, FindDashboard, UpdateDashboard } from '../dto';\n\n@Injectable({ providedIn: 'root' })\nexport class DashboardService {\n  loading = signal(false);\n  private readonly httpClient = inject(HttpClient);\n  private readonly BASE_URL = environment.apiHost + '/dashboard';\n\n  searchDashboard(traindb_id: number) {\n    const params = { traindb_id };\n    this.loading.set(true);\n    return this.httpClient.get<FindDashboard[]>(this.BASE_URL, { params }).pipe(\n      finalize(() => this.loading.set(false)),\n    )\n  }\n\n  createDashboard(dto: CreateDashboard) {\n    return this.httpClient.post<void>(this.BASE_URL, dto);\n  }\n\n  updateDashboard(id: number, dto: UpdateDashboard) {\n    return this.httpClient.put<void>(`${this.BASE_URL}/${id}`, dto);\n  }\n\n  deleteDashboard(id: number) {\n    return this.httpClient.delete<void>(`${this.BASE_URL}/${id}`);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "DatabaseService",
            "id": "injectable-DatabaseService-482dc4c2564f75ad5f5f322c6b4db386d3bb236c9c800fa23e742a20337410e69ca3522a817c4ebbc207a17d2ad94a5bcc724a1a684da2623af70b097749fdc3",
            "file": "src/app/services/database.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "environment.apiHost + '/databases'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createDatabase",
                    "args": [
                        {
                            "name": "dto",
                            "type": "CreateDatabase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "CreateDatabase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteDatabase",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findDatabase",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchDatabases",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "testConnection",
                    "args": [
                        {
                            "name": "dto",
                            "type": "TestDatabaseConnectionRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "TestDatabaseConnectionRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDatabase",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "UpdateDatabase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "UpdateDatabase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport {\n  CreateDatabase,\n  FindDatabase,\n  TestDatabaseConnectionRequest,\n  TestTrainDBConnectionResponseDto,\n  UpdateDatabase\n} from '../dto';\n\n@Injectable({ providedIn: 'root' })\nexport class DatabaseService {\n  readonly loading = signal(false);\n  private readonly httpClient = inject(HttpClient);\n  private readonly BASE_URL = environment.apiHost + '/databases';\n\n  searchDatabases(traindb_id: number) {\n    const params = { traindb_id };\n    this.loading.set(true);\n    return this.httpClient.get<FindDatabase[]>(this.BASE_URL, { params }).pipe(\n      finalize(() => this.loading.set(false))\n    );\n  }\n\n  findDatabase(id: number) {\n    return this.httpClient.get<FindDatabase>(`${this.BASE_URL}/${id}`);\n  }\n\n  createDatabase(dto: CreateDatabase) {\n    return this.httpClient.post<void>(this.BASE_URL, dto);\n  }\n\n  testConnection(dto: TestDatabaseConnectionRequest) {\n    return this.httpClient.post<TestTrainDBConnectionResponseDto>(`${this.BASE_URL}/test_connection`, dto);\n  }\n\n  updateDatabase(id: number, dto: UpdateDatabase) {\n    return this.httpClient.put<void>(`${this.BASE_URL}/${id}`, dto);\n  }\n\n  deleteDatabase(id: number) {\n    return this.httpClient.delete<void>(`${this.BASE_URL}/${id}`);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "HyperParameterService",
            "id": "injectable-HyperParameterService-423a2dd6bce1e47c3bbeea495ac61228eae5620cd2af24d51d7c4d716e824c38e22d2150eeff629e9e857706f30083a736f116218151b9fd852948c8c3371fbd",
            "file": "src/app/services/hyper-parameter.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "environment.apiHost + '/hyperparameters'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "searchHyperParameters",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { HyperParameter } from '../dto';\n\n@Injectable({ providedIn: 'root' })\nexport class HyperParameterService {\n  readonly loading = signal(false);\n  private readonly httpClient = inject(HttpClient);\n  private readonly BASE_URL = environment.apiHost + '/hyperparameters';\n\n  searchHyperParameters(traindb_id: number) {\n    const params = { traindb_id };\n    this.loading.set(true);\n    return this.httpClient.get<HyperParameter[]>(this.BASE_URL, { params }).pipe(\n      finalize(() => this.loading.set(false))\n    );\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "LayoutService",
            "id": "injectable-LayoutService-f2adbfa05b049a8e35805d283e0e7f1b2d3f42822b89475b59c369d7172ca4ff0809647403fac8e79f2459efd946170436b3138f6ef4e894bd10d615dea09e4d",
            "file": "src/app/services/layout.service.ts",
            "properties": [
                {
                    "name": "navigation",
                    "defaultValue": "computed(() => this.showNavigator())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "new Router()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "showNavigator",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "setNavigator",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { computed, Injectable, signal, WritableSignal } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class LayoutService {\n  readonly navigation = computed(() => this.showNavigator());\n  private readonly showNavigator: WritableSignal<boolean> = signal(false);\n  private readonly router = new Router();\n\n  constructor() {\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd),\n    ).subscribe({\n      next: event => {\n        if (event instanceof NavigationEnd) this.setNavigator(event.url);\n      }\n    });\n  }\n\n  private setNavigator(url: string) {\n    const hiddenPattern = [\n      /(^(\\/$|\\/traindb$|^\\/traindb\\/).*)/\n    ];\n    const hidden = hiddenPattern.some(pattern => pattern.test(url));\n    this.showNavigator.set(!hidden);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ModelService",
            "id": "injectable-ModelService-a4288d2cd3548de3c8cea84ce45a565ded1aa0f3417a09d85f5f157e4d382dc47a2bbfc6a7196130a9bfd46f6237a4f476cac95f73eb53aa02855201d32c4a90",
            "file": "src/app/services/model.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "environment.apiHost + '/models'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "deleteModel",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "importModel",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchModels",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trainModel",
                    "args": [
                        {
                            "name": "dto",
                            "type": "TrainModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "TrainModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateModel",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "oldName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "UpdateModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "oldName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "UpdateModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Model, TrainModel, UpdateModel } from '../dto';\n\n@Injectable({ providedIn: 'root' })\nexport class ModelService {\n  readonly loading = signal(false);\n  private readonly httpClient = inject(HttpClient);\n  private readonly BASE_URL = environment.apiHost + '/models';\n\n  searchModels(traindb_id: number) {\n    const params = { traindb_id };\n    this.loading.set(true);\n    return this.httpClient.get<Model[]>(this.BASE_URL, { params }).pipe(\n      finalize(() => this.loading.set(false))\n    );\n  }\n\n  importModel(traindb_id: number, name: string, file: File) {\n    const params = { traindb_id };\n    const formData = new FormData();\n    formData.append('file', file);\n    return this.httpClient.post<void>(`${this.BASE_URL}/${name}/import`, formData, { params });\n  }\n\n  trainModel(dto: TrainModel) {\n    return this.httpClient.post<void>(`${this.BASE_URL}/train`, dto);\n  }\n\n  updateModel(traindb_id: number, oldName: string, dto: UpdateModel) {\n    const params = { traindb_id };\n    return this.httpClient.put<void>(`${this.BASE_URL}/${oldName}`, dto, { params });\n  }\n\n  deleteModel(traindb_id: number, name: string) {\n    const params = { traindb_id };\n    return this.httpClient.delete<void>(`${this.BASE_URL}/${name}`, { params });\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ModeltypeService",
            "id": "injectable-ModeltypeService-d5ccd4d028d174c6f2b2be9540a83f650ce47895cd236f4ae8cbaa4c545febaab38291fb5c3433cbb1eb28845ea2600342d37b584cae3655a1ee806b19b4b834",
            "file": "src/app/services/modeltype.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "environment.apiHost + '/modeltypes'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createModeltype",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "CreateModeltypeDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "CreateModeltypeDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteModeltype",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchModeltypes",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { CreateModeltypeDto, Modeltype } from '../dto';\n\n@Injectable({ providedIn: 'root' })\nexport class ModeltypeService {\n  readonly loading = signal(false);\n  private readonly httpClient = inject(HttpClient);\n  private readonly BASE_URL = environment.apiHost + '/modeltypes';\n\n  searchModeltypes(traindb_id: number) {\n    const params = { traindb_id };\n    this.loading.set(true);\n    return this.httpClient.get<Modeltype[]>(this.BASE_URL, { params }).pipe(\n      finalize(() => this.loading.set(false)),\n    );\n  }\n\n  createModeltype(traindb_id: number, dto: CreateModeltypeDto) {\n    const params = { traindb_id };\n    this.loading.set(true);\n    return this.httpClient.post<void>(this.BASE_URL, dto, { params });\n  }\n\n  deleteModeltype(traindb_id: number, name: string) {\n    const params = { traindb_id };\n    return this.httpClient.delete<void>(`${this.BASE_URL}/${name}`, { params });\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "QueryService",
            "id": "injectable-QueryService-1355f1a5830bba5a995b8c066370d19d637a554da517c413366507928f860ae91c31177f73c1d4c9f0857a8be9550a932768d48c02167ad6b47395560b00ec1e",
            "file": "src/app/services/query.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "environment.apiHost + '/queries'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject((HttpClient))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createQuery",
                    "args": [
                        {
                            "name": "dto",
                            "type": "CreateQuery",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "CreateQuery",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteQuery",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findQuery",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "runQuery",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchQueries",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateQuery",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "UpdateQuery",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "UpdateQuery",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { CreateQuery, FindQuery, RunQuery, UpdateQuery } from '../dto';\n\n@Injectable({ providedIn: 'root' })\nexport class QueryService {\n  readonly loading = signal(false);\n  private readonly httpClient = inject((HttpClient));\n  private readonly BASE_URL = environment.apiHost + '/queries';\n\n  searchQueries(traindb_id: number) {\n    const params: { [key: string]: number } = { traindb_id }\n    return this.httpClient.get<FindQuery[]>(this.BASE_URL, { params }).pipe(\n      finalize(() => this.loading.set(false))\n    );\n  }\n\n  findQuery(id: number) {\n    return this.httpClient.get<FindQuery[]>(`${this.BASE_URL}/${id}`);\n  }\n\n  runQuery(id: number) {\n    return this.httpClient.get<RunQuery>(`${this.BASE_URL}/${id}/run`);\n  }\n\n  createQuery(dto: CreateQuery) {\n    return this.httpClient.post<void>(this.BASE_URL, dto);\n  }\n\n  updateQuery(id: number, dto: UpdateQuery) {\n    return this.httpClient.put<void>(`${this.BASE_URL}/${id}`, dto);\n  }\n\n  deleteQuery(id: number) {\n    return this.httpClient.delete<void>(`${this.BASE_URL}/${id}`);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SynopsisService",
            "id": "injectable-SynopsisService-bc8c7ff8e37cc5ec06a003cd6d07f2bbbb4202175648dda2ad4175fdbe260940c5d5de3b79d6c09bbed695501d97d4eeb1929e6c3945cd66de04ac29aa794cbc",
            "file": "src/app/services/synopsis.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "environment.apiHost + '/synopses'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createSynopsis",
                    "args": [
                        {
                            "name": "database_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "CreateSynopsis",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "database_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "CreateSynopsis",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteSynopsis",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "importSynopsis",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchSynopses",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateSynopsis",
                    "args": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "UpdateSynopsis",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "traindb_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "UpdateSynopsis",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { CreateSynopsis, Synopsis, UpdateSynopsis } from '../dto';\n\n@Injectable({ providedIn: 'root' })\nexport class SynopsisService {\n  readonly loading = signal(false);\n  private readonly httpClient = inject(HttpClient);\n  private readonly BASE_URL = environment.apiHost + '/synopses';\n\n  searchSynopses(traindb_id: number) {\n    const params = { traindb_id };\n    this.loading.set(true);\n    return this.httpClient.get<Synopsis[]>(this.BASE_URL, { params }).pipe(\n      finalize(() => this.loading.set(false)),\n    );\n  }\n\n  createSynopsis(database_id: number, dto: CreateSynopsis) {\n    const params = { database_id };\n    return this.httpClient.post<void>(this.BASE_URL, dto, { params });\n  }\n\n  importSynopsis(traindb_id: number, name: string, file: File) {\n    const params = { traindb_id };\n    const formData = new FormData();\n    formData.append('file', file);\n    return this.httpClient.post<void>(`${this.BASE_URL}/${name}/import`, formData, { params });\n  }\n\n  updateSynopsis(traindb_id: number, name: string, dto: UpdateSynopsis) {\n    const params = { traindb_id };\n    return this.httpClient.put<void>(`${this.BASE_URL}/${name}`, dto, { params });\n  }\n\n  deleteSynopsis(traindb_id: number, name: string) {\n    const params = { traindb_id };\n    return this.httpClient.delete<void>(`${this.BASE_URL}/${name}`, { params });\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TableService",
            "id": "injectable-TableService-eb9d571d0f37ddac0ee5cd0556b3cbd5a63e2e59943352e2b2040278712697fbebe68d66e00d323829e91905b70c41a6af5b239c3012f9a8aac2c7c5e1c255f1",
            "file": "src/app/services/table.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "environment.apiHost + '/tables'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "describeTable",
                    "args": [
                        {
                            "name": "database_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "schema_name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "table_name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "database_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "schema_name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "table_name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "previewTable",
                    "args": [
                        {
                            "name": "dto",
                            "type": "TablePreviewRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "TablePreviewRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchTables",
                    "args": [
                        {
                            "name": "database_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "database_id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Column, Schema, TablePreviewRequest, TablePreviewResponse } from '../dto';\n\n@Injectable({ providedIn: 'root' })\nexport class TableService {\n  readonly loading = signal(false);\n  private readonly httpClient = inject(HttpClient);\n  private readonly BASE_URL = environment.apiHost + '/tables';\n\n  searchTables(database_id: number) {\n    this.loading.set(true);\n    const params = { database_id };\n    return this.httpClient.get<Schema[]>(this.BASE_URL, { params }).pipe(\n      finalize(() => this.loading.set(false)),\n    );\n  }\n\n  describeTable(database_id: number, schema_name: string, table_name: string) {\n    const params = { database_id, schema_name };\n    return this.httpClient.get<Column[]>(`${this.BASE_URL}/${table_name}`, { params });\n  }\n\n  previewTable(dto: TablePreviewRequest) {\n    return this.httpClient.post<TablePreviewResponse>(`${this.BASE_URL}/preview`, dto);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TraindbService",
            "id": "injectable-TraindbService-83f23ac9472908e9d1e4d891fb1e2f0a0bb689b8cd010493b958358d4a26907f0f3b373098c8ef93f9dfa93cbd8859f4e1ddca4d7c545cf5e400f9f8142fcc0a",
            "file": "src/app/services/traindb.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "environment.apiHost + '/traindbs'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "current",
                    "defaultValue": "signal<FindTrainDBDto | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<FindTrainDBDto | null>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "currentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<number | null>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createTrainDB",
                    "args": [
                        {
                            "name": "dto",
                            "type": "CreateTrainDBDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "CreateTrainDBDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteTrainDB",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findTrainDB",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchTrainDB",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeCurrentTrainDB",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "testConnection",
                    "args": [
                        {
                            "name": "dto",
                            "type": "TestTrainDBConnectionRequestDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "TestTrainDBConnectionRequestDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTrainDB",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "UpdateTrainDBDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "UpdateTrainDBDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, finalize } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { StorageKey } from '../constants';\nimport {\n  CreateTrainDBDto,\n  FindTrainDBDto,\n  TestTrainDBConnectionRequestDto,\n  TestTrainDBConnectionResponseDto,\n  UpdateTrainDBDto\n} from '../dto';\n\n@Injectable({ providedIn: 'root' })\nexport class TraindbService {\n  readonly current: WritableSignal<FindTrainDBDto | null> = signal<FindTrainDBDto | null>(null);\n  readonly currentId: WritableSignal<number | null>;\n  readonly loading: WritableSignal<boolean> = signal(false);\n  private readonly httpClient = inject(HttpClient);\n  private readonly router = inject(Router);\n  private readonly BASE_URL = environment.apiHost + '/traindbs';\n\n  constructor() {\n    const id = sessionStorage.getItem(StorageKey.CURRENT_TRAINDB);\n    this.currentId = signal(id ? +id : null);\n    setTimeout(() => this.subscribeCurrentTrainDB());\n  }\n\n  searchTrainDB() {\n    this.loading.set(true);\n    return this.httpClient.get<FindTrainDBDto[]>(this.BASE_URL).pipe(\n      finalize(() => this.loading.set(false)),\n    );\n  }\n\n  findTrainDB(id: number) {\n    return this.httpClient.get<FindTrainDBDto>(`${this.BASE_URL}/${id}`);\n  }\n\n  createTrainDB(dto: CreateTrainDBDto) {\n    return this.httpClient.post<void>(this.BASE_URL, dto);\n  }\n\n  updateTrainDB(id: number, dto: UpdateTrainDBDto) {\n    return this.httpClient.put<void>(`${this.BASE_URL}/${id}`, dto);\n  }\n\n  deleteTrainDB(id: number) {\n    return this.httpClient.delete<void>(`${this.BASE_URL}/${id}`);\n  }\n\n  testConnection(dto: TestTrainDBConnectionRequestDto) {\n    return this.httpClient.post<TestTrainDBConnectionResponseDto>(`${this.BASE_URL}/test_connection`, dto);\n  }\n\n  private subscribeCurrentTrainDB() {\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd),\n    ).subscribe({\n      next: event => {\n        if (!(event instanceof NavigationEnd)) return;\n        if (/^(\\/traindb|\\/traindb\\/.*)$/.test(event.url)) {\n          this.currentId.set(null);\n          sessionStorage.removeItem(StorageKey.CURRENT_TRAINDB);\n        } else {\n          const id = sessionStorage.getItem(StorageKey.CURRENT_TRAINDB);\n          this.currentId.set(id ? +id : null);\n          const traindbId = this.currentId();\n          if (!traindbId) this.current.set(null);\n          else this.findTrainDB(traindbId).subscribe({\n            next: db => this.current.set(db),\n            error: async err => {\n              console.error(err);\n              await this.router.navigate(['/traindb']);\n            }\n          });\n        }\n      }\n    })\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "BaseIconDirective",
            "id": "directive-BaseIconDirective-633ca73f85c411447e3234bfdc149f6d4d567cdd0db25f4d45a7349d771be3bd8c76915370c8381624215bdaa7cb659ccea4184eb714dfd60c17bbf65413765a",
            "file": "src/app/components/atoms/icons/base-icon.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, input, InputSignal } from '@angular/core';\n\n@Directive()\nexport class BaseIconDirective {\n  type: InputSignal<'solid' | 'outline'> = input<'solid' | 'outline'>('outline');\n  class: InputSignal<string> = input<string>('size-6');\n}\n",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "DialogHeaderDirective",
            "id": "directive-DialogHeaderDirective-c15b822723efe1734480cca03e789911d0ad6311829b7a0d7dfcab81b5467f13c638fb5d84dfc18b5eb3fdd34cf6834e3125740fa2562a747587e815188b41e8",
            "file": "src/app/components/atoms/typographies/dialog-header/dialog-header.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\n\n@Directive({\n  host: {\n    class: 'text-2xl font-bold'\n  },\n  selector: '[etriDialogHeader]',\n  standalone: true\n})\nexport class DialogHeaderDirective {\n}\n",
            "selector": "[etriDialogHeader]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": []
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9063a14503d7886b7d7ed95ee41084fdf6fdf3a4b744c4c84c33c43de05038abc0b9acbd2afcfa70eac432980c7b875032331b56f33b8cd78b6ffd6103d09852",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layoutService",
                    "defaultValue": "inject(LayoutService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "NavigatorComponent",
                    "type": "component"
                },
                {
                    "name": "NgClass"
                },
                {
                    "name": "TraindbBannerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { HeaderComponent, NavigatorComponent, TraindbBannerComponent } from './components';\nimport { LayoutService, TraindbService } from './services';\n\n@Component({\n  imports: [\n    RouterOutlet,\n    HeaderComponent,\n    NavigatorComponent,\n    NgClass,\n    TraindbBannerComponent,\n  ],\n  selector: 'etri-root',\n  standalone: true,\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  readonly layoutService = inject(LayoutService);\n  readonly traindbService = inject(TraindbService);\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (layoutService.navigation()) {\n  <etri-navigator\n    class=\"block bg-zinc-700 text-white fixed inset-y-0 left-0 w-[100px] z-50 shadow-lg\"\n  />\n}\n@if (!!traindbService.currentId()) {\n  <etri-traindb-banner\n    [traindb]=\"traindbService.current()\"\n    class=\"ml-[100px] sticky top-0\"\n  ></etri-traindb-banner>\n}\n\n<main\n  [ngClass]=\"{\n    'ml-[100px]': layoutService.navigation()\n  }\"\n  [style.min-height]=\"layoutService.navigation() ? 'calc(100vh - 32px)' : '100vh'\"\n  class=\"bg-zinc-100 p-4\"\n>\n  <router-outlet/>\n</main>\n"
        },
        {
            "name": "ArrowDownTrayIconComponent",
            "id": "component-ArrowDownTrayIconComponent-a37a9f00dc367458d29a612fe915e2e62dedf75cd7c407eadd73637d3dc4b894fc5fcb484f7ea7e27663e3caabc1fcdca57983032ca5e71d2130f985acd8d1d7",
            "file": "src/app/components/atoms/icons/arrow-down-tray-icon/arrow-down-tray-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-arrow-down-tray-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M12 2.25a.75.75 0 0 1 .75.75v11.69l3.22-3.22a.75.75 0 1 1 1.06 1.06l-4.5 4.5a.75.75 0 0 1-1.06 0l-4.5-4.5a.75.75 0 1 1 1.06-1.06l3.22 3.22V3a.75.75 0 0 1 .75-.75Zm-9 13.5a.75.75 0 0 1 .75.75v2.25a1.5 1.5 0 0 0 1.5 1.5h13.5a1.5 1.5 0 0 0 1.5-1.5V16.5a.75.75 0 0 1 1.5 0v2.25a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V16.5a.75.75 0 0 1 .75-.75Z\"\n      clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-arrow-down-tray-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M12 2.25a.75.75 0 0 1 .75.75v11.69l3.22-3.22a.75.75 0 1 1 1.06 1.06l-4.5 4.5a.75.75 0 0 1-1.06 0l-4.5-4.5a.75.75 0 1 1 1.06-1.06l3.22 3.22V3a.75.75 0 0 1 .75-.75Zm-9 13.5a.75.75 0 0 1 .75.75v2.25a1.5 1.5 0 0 0 1.5 1.5h13.5a1.5 1.5 0 0 0 1.5-1.5V16.5a.75.75 0 0 1 1.5 0v2.25a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V16.5a.75.75 0 0 1 .75-.75Z\"\n          clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3\"/>\n      </svg>\n    }\n  `\n})\nexport class ArrowDownTrayIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "ArrowUpTrayIconComponent",
            "id": "component-ArrowUpTrayIconComponent-eebba1e0fb943ade46a231c2ab1ba62385fe076eaa5ab810dd86387c2b0f078340a3750223ec42006d43ce51f1782269e6915546983b721db6657fee2994f829",
            "file": "src/app/components/atoms/icons/arrow-up-tray-icon/arrow-up-tray-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-arrow-up-tray-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M11.47 2.47a.75.75 0 0 1 1.06 0l4.5 4.5a.75.75 0 0 1-1.06 1.06l-3.22-3.22V16.5a.75.75 0 0 1-1.5 0V4.81L8.03 8.03a.75.75 0 0 1-1.06-1.06l4.5-4.5ZM3 15.75a.75.75 0 0 1 .75.75v2.25a1.5 1.5 0 0 0 1.5 1.5h13.5a1.5 1.5 0 0 0 1.5-1.5V16.5a.75.75 0 0 1 1.5 0v2.25a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V16.5a.75.75 0 0 1 .75-.75Z\"\n      clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      stroke-linecap=\"round\" stroke-linejoin=\"round\"\n      d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-arrow-up-tray-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M11.47 2.47a.75.75 0 0 1 1.06 0l4.5 4.5a.75.75 0 0 1-1.06 1.06l-3.22-3.22V16.5a.75.75 0 0 1-1.5 0V4.81L8.03 8.03a.75.75 0 0 1-1.06-1.06l4.5-4.5ZM3 15.75a.75.75 0 0 1 .75.75v2.25a1.5 1.5 0 0 0 1.5 1.5h13.5a1.5 1.5 0 0 0 1.5-1.5V16.5a.75.75 0 0 1 1.5 0v2.25a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V16.5a.75.75 0 0 1 .75-.75Z\"\n          clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\"/>\n      </svg>\n    }\n  `\n})\nexport class ArrowUpTrayIconComponent extends BaseIconDirective {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "BarChartComponent",
            "id": "component-BarChartComponent-8515b51f5ea4c15636687b9f4666aedd9ee687d88c34fd06a414848772cef7a013c0691e5bc7d203881b7af57469ac38032a11110b4322be23cfeabe1ed13d86",
            "file": "src/app/components/organisms/charts/bar-chart/bar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-bar-chart",
            "styleUrls": [
                "bar-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "bar-chart.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "height",
                    "defaultValue": "'500px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartRef",
                    "defaultValue": "viewChild<ElementRef<HTMLDivElement>>('chartRef')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "MAX",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "MIN",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "svg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "d3.Selection<SVGSVGElement |  |  | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "input<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "d3.Selection<HTMLDivElement |  |  | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "x",
                    "defaultValue": "input<(string | number)[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "X",
                    "defaultValue": "computed(() => {\n    const x = this.x();\n    return x.map((v, i) => {\n      const count = x.slice(0, i).filter(val => val === v).length;\n      return count > 0 ? `${v}_${count}` : String(v);\n    });\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "xAxisLabel",
                    "defaultValue": "input<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "y",
                    "defaultValue": "input<number[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "yAxisLabel",
                    "defaultValue": "input<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "updateChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52
                }
            ],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component, computed, effect,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  input,\n  viewChild\n} from '@angular/core';\nimport * as d3 from 'd3';\n\n@Component({\n  selector: 'etri-bar-chart',\n  standalone: true,\n  styleUrls: ['bar-chart.component.scss'],\n  templateUrl: 'bar-chart.component.html',\n})\nexport class BarChartComponent implements AfterViewInit {\n  readonly x = input<(string | number)[]>([]);\n  readonly y = input<number[]>([]);\n  readonly xAxisLabel = input<string | null>(null);\n  readonly yAxisLabel = input<string | null>(null);\n  readonly title = input<string | null>(null);\n  readonly chartRef = viewChild<ElementRef<HTMLDivElement>>('chartRef');\n  readonly X = computed(() => {\n    const x = this.x();\n    return x.map((v, i) => {\n      const count = x.slice(0, i).filter(val => val === v).length;\n      return count > 0 ? `${v}_${count}` : String(v);\n    });\n  });\n  @HostBinding('style.height') @Input() height = '500px';\n\n  constructor() {\n    effect(() => {\n      const x = this.x();\n      const y = this.y();\n      const xAxisLabel = this.xAxisLabel();\n      const yAxisLabel = this.yAxisLabel();\n      console.log(xAxisLabel, ':', x);\n      console.log(yAxisLabel, ':', y);\n      this.updateChart();\n    });\n  }\n\n  private readonly MAX = 10;\n  private readonly MIN = 0;\n  private svg!: d3.Selection<SVGSVGElement, unknown, null, undefined>;\n  private tooltip!: d3.Selection<HTMLDivElement, unknown, null, undefined>;\n\n  @HostListener('window:resize') onResize() {\n    this.updateChart();\n  }\n\n  ngAfterViewInit() {\n    this.createChart();\n  }\n\n  private createChart() {\n    const element = this.chartRef()!.nativeElement;\n    this.svg = d3.select(element).append('svg');\n    this.tooltip = d3.select(element)\n      .append('div')\n      .style('position', 'absolute')\n      .style('display', 'flex')\n      .style('align-items', 'center')\n      .style('justify-content', 'center')\n      .style('text-align', 'center')\n      .style('width', 'fit-content')\n      .style('height', 'fit-content')\n      .style('padding', '0.5rem')\n      .style('border-radius', '0.5rem')\n      .style('color', 'white')\n      .style('background-color', 'rgba(0, 0, 0, 0.8)')\n      .style('box-shadow', '2px 2px 2px rgba(0, 0, 0. 0.5)')\n      .style('pointer-events', 'none')\n      .style('opacity', 0);\n    this.updateChart();\n  }\n\n  private updateChart() {\n    const element = this.chartRef()!.nativeElement;\n    const width = element.offsetWidth;\n    const height = element.offsetHeight;\n    const margin = { top: 60, right: 20, bottom: 70, left: 90 };\n\n    this.svg\n      .attr('width', width)\n      .attr('height', height);\n\n    const x = d3.scaleBand()\n      .domain(this.X())\n      .range([margin.left, width - margin.right])\n      .padding(0.1);\n\n    const y = d3.scaleLinear()\n      .domain([d3.min(this.y()) ?? this.MIN, d3.max(this.y()) ?? this.MAX])\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = (g: any) => g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0));\n\n    const yAxis = (g: any) => g\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y));\n\n    const xGrid = (g: any) => g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x)\n        .tickSize(-height + margin.top + margin.bottom)\n        .tickFormat('' as any)\n      )\n      .call((g: any) => g.selectAll('.tick line')\n        .attr('stroke', 'lightgrey')\n        .attr('stroke-opacity', 0.7))\n      .call((g: any) => g.select('.domain').remove());\n\n    const yGrid = (g: any) => g\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y)\n        .tickSize(-width + margin.left + margin.right)\n        .tickFormat('' as any)\n      )\n      .call((g: any) => g.selectAll('.tick line')\n        .attr('stroke', 'lightgrey')\n        .attr('stroke-opacity', 0.7))\n      .call((g: any) => g.select('.domain').remove());\n\n    this.svg.selectAll('*').remove();\n\n    // 그리드를 먼저 그립니다.\n    this.svg.append('g').call(xGrid);\n    this.svg.append('g').call(yGrid);\n\n    // 컬러 스케일 정의\n    const positiveColor = d3.scaleSequential(d3.interpolateBlues)\n      .domain([0, (d3.max(this.y().filter(d => d > 0)) ?? this.MAX) * 0.5]); // 양수 값 더 진하게\n\n    const negativeColor = d3.scaleSequential(d3.interpolateReds)\n      .domain([0, (d3.min(this.y().filter(d => d < 0)) ?? this.MIN) * 0.5]); // 음수 값 더 진하게\n\n    // 막대를 나중에 그립니다.\n    this.svg.append('g')\n      .selectAll('rect')\n      .data(this.y)\n      .join('rect')\n      .attr('x', (d, i) => x(this.X()[i])!)\n      .attr('y', y(0))\n      .attr('height', 0)\n      .attr('width', x.bandwidth())\n      .attr('fill', d => d > 0 ? positiveColor(d) : negativeColor(d))\n      .transition()\n      .duration(800)\n      .attr('y', d => y(Math.max(0, d)))\n      .attr('height', d => Math.abs(y(d) - y(0)));\n\n    this.svg.append('g').call(xAxis);\n\n    if (this.xAxisLabel()) {\n      this.svg.append('text')\n        .attr('class', 'x label')\n        .attr('text-anchor', 'middle')\n        .attr('x', width / 2)\n        .attr('y', height - margin.bottom + 40) // x축 레이블 위치 조정\n        .text(this.xAxisLabel());\n    }\n\n    this.svg.append('g').call(yAxis);\n\n    if (this.yAxisLabel()) {\n      this.svg.append('text')\n        .attr('class', 'y label')\n        .attr('text-anchor', 'middle')\n        .attr('transform', 'rotate(-90)')\n        .attr('x', -height / 2)\n        .attr('y', margin.left - 60) // y축 레이블 위치 조정\n        .text(this.yAxisLabel());\n    }\n\n    if (this.title()) {\n      this.svg.append('text')\n        .attr('x', width / 2)\n        .attr('y', margin.top / 2)\n        .attr('text-anchor', 'middle')\n        .attr('class', 'chart-title')\n        .text(this.title());\n    }\n\n    this.svg.selectAll('rect')\n      .on('mouseover', (event, d: any) => {\n        this.tooltip.transition()\n          .duration(200)\n          .style('opacity', .9);\n        this.tooltip.html(`x: ${this.X()[this.y().indexOf(d)]}<br/>y: ${d}`)\n          .style('left', (event.pageX + 5) + 'px')\n          .style('top', (event.pageY - 5) + 'px'); // 툴팁 위치를 조정\n      })\n      .on('mouseout', () => {\n        this.tooltip.transition()\n          .duration(500)\n          .style('opacity', 0);\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block w-full;\n}\n",
                    "styleUrl": "bar-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 33
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div #chartRef class=\"w-full h-full relative\"></div>\n"
        },
        {
            "name": "BaseDialogComponent",
            "id": "component-BaseDialogComponent-cebc1bace1e9a80cce6dec2e6dbea4587d3932a293b3790856bcebb199b63c26f4ebc940f543e741ddefe5c0d18b64539a3c2b180efff47995158e4edb83e751",
            "file": "src/app/components/organisms/dialogs/base-dialog/base-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-base-dialog",
            "styleUrls": [
                "base-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "base-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hiddenCloseButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": false
                },
                {
                    "name": "hiddenFooter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": false
                },
                {
                    "name": "hiddenHeader",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "hiddenCloseButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": false
                },
                {
                    "name": "hiddenFooter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": false
                },
                {
                    "name": "hiddenHeader",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": false
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "XMarkIconComponent",
                    "type": "component"
                },
                {
                    "name": "DialogHeaderDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output } from '@angular/core';\nimport { DialogHeaderDirective, XMarkIconComponent } from '../../../atoms';\n\n@Component({\n  imports: [\n    XMarkIconComponent,\n    DialogHeaderDirective\n  ],\n  selector: 'etri-base-dialog',\n  standalone: true,\n  styleUrls: ['base-dialog.component.scss'],\n  templateUrl: 'base-dialog.component.html'\n})\nexport class BaseDialogComponent {\n  hiddenHeader = input(false);\n  hiddenFooter = input(false);\n  hiddenCloseButton = input(false);\n  onClose = output<void>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block shadow-xl h-full;\n}\n",
                    "styleUrl": "base-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bg-white flex flex-col\">\n  <header\n    class=\"flex gap-4 items-center shrink-0 px-6 sticky top-0 bg-white border-zinc-300 z-10 {{ hiddenHeader() ? 'pb-0 pt-4' : 'pb-4 pt-6 border-b' }}\">\n    @if (!hiddenHeader()) {\n      <ng-content select=\"[header]\">\n        <h1 etriDialogHeader>Title</h1>\n      </ng-content>\n    }\n    @if (!hiddenCloseButton()) {\n      <button\n        type=\"button\"\n        class=\"ml-auto outline-none\"\n        (click)=\"onClose.emit()\"\n      ><etri-x-mark-icon/></button>\n    }\n  </header>\n  <div\n    class=\"px-6 overflow-auto grow {{ hiddenHeader() ? 'pt-0' : 'pt-4' }} {{ hiddenFooter() ? 'pb-6' : 'pb-4' }}\">\n    <ng-content><div>Body</div></ng-content>\n  </div>\n  @if (!hiddenFooter()) {\n    <div class=\"px-6 py-4 shrink-0 sticky bottom-0 bg-white border-t border-zinc-300\">\n      <ng-content select=\"[footer]\"><div>Footer</div></ng-content>\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "BenchmarkListPageComponent",
            "id": "component-BenchmarkListPageComponent-662d96be46abff5ea781c329767c8c221c9e8f5df9b712a25d2d749e14c3514ab32302d757e973d37c7e5b2f44cdc8bf791cf19de6d15b6da0bb9712ed827ad8",
            "file": "src/app/routes/benchmarks/pages/benchmark-list-page/benchmark-list-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-benchmark-list-page",
            "styleUrls": [
                "benchmark-list-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "benchmark-list-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'etri-benchmark-list-page',\n  standalone: true,\n  styleUrls: ['benchmark-list-page.component.scss'],\n  templateUrl: 'benchmark-list-page.component.html',\n})\nexport class BenchmarkListPageComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page;\n}\n",
                    "styleUrl": "benchmark-list-page.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<h1>Benchmarks</h1>\n"
        },
        {
            "name": "ChartBarIconComponent",
            "id": "component-ChartBarIconComponent-01eaa9e454f0cdeba668bb85af1f04b5e2683f206ac523b648f464178c7e7414d5283591f103ffd0c19f995cf08528492a6c3f8bef6a7e6b7b676aeb8374616c",
            "file": "src/app/components/atoms/icons/chart-bar-icon/chart-bar-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-chart-bar-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      d=\"M18.375 2.25c-1.035 0-1.875.84-1.875 1.875v15.75c0 1.035.84 1.875 1.875 1.875h.75c1.035 0 1.875-.84 1.875-1.875V4.125c0-1.036-.84-1.875-1.875-1.875h-.75ZM9.75 8.625c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-.75a1.875 1.875 0 0 1-1.875-1.875V8.625ZM3 13.125c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v6.75c0 1.035-.84 1.875-1.875 1.875h-.75A1.875 1.875 0 0 1 3 19.875v-6.75Z\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      stroke-linecap=\"round\" stroke-linejoin=\"round\"\n      d=\"M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 0 1 3 19.875v-6.75ZM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V8.625ZM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V4.125Z\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-chart-bar-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          d=\"M18.375 2.25c-1.035 0-1.875.84-1.875 1.875v15.75c0 1.035.84 1.875 1.875 1.875h.75c1.035 0 1.875-.84 1.875-1.875V4.125c0-1.036-.84-1.875-1.875-1.875h-.75ZM9.75 8.625c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-.75a1.875 1.875 0 0 1-1.875-1.875V8.625ZM3 13.125c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v6.75c0 1.035-.84 1.875-1.875 1.875h-.75A1.875 1.875 0 0 1 3 19.875v-6.75Z\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 0 1 3 19.875v-6.75ZM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V8.625ZM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V4.125Z\"/>\n      </svg>\n    }\n  `\n})\nexport class ChartBarIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "ChartItemComponent",
            "id": "component-ChartItemComponent-af7b17b9ba6884ce1f8d1cce640d6143d5bf0a10c65e7e375208f25acc8d34429a9d9144e2592846e1e11c315c8f5679db5e7f6936743b7361c1ac6d47d342c9",
            "file": "src/app/components/organisms/dashboard/chart-item/chart-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-chart-item",
            "styleUrls": [
                "chart-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "chart-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "input.required<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "fields",
                    "defaultValue": "{\n    x_column: null,\n    y_column: null,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartItemFields",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "types",
                    "defaultValue": "input.required<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "changeXColumn",
                    "args": [
                        {
                            "name": "x_column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "x_column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeYColumn",
                    "args": [
                        {
                            "name": "y_column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "y_column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ChartItemFields } from '../../../../dto';\n\n@Component({\n  selector: 'etri-chart-item',\n  standalone: true,\n  styleUrls: ['chart-item.component.scss'],\n  templateUrl: 'chart-item.component.html',\n  imports: [\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class ChartItemComponent {\n  columns = input.required<string[]>();\n  types = input.required<string[]>();\n  fields: ChartItemFields = {\n    x_column: null,\n    y_column: null,\n  };\n  onChange = output<ChartItemFields>()\n\n  changeXColumn(x_column: string) {\n    this.fields = { ...this.fields, x_column };\n    this.onChange.emit(this.fields);\n  }\n\n  changeYColumn(y_column: string) {\n    this.fields = { ...this.fields, y_column };\n    this.onChange.emit(this.fields);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block space-y-4;\n}\n",
                    "styleUrl": "chart-item.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<label class=\"flex items-center gap-4 w-full\">\n  <span>Select X-Axis</span>\n  <select\n    [ngModel]=\"fields.x_column\"\n    (ngModelChange)=\"changeXColumn($event)\"\n    class=\"select select-sm select-bordered max-w-[300px] grow\"\n  >\n    @for (column of columns(); track column) {\n      <option [ngValue]=\"column\">{{ column }}</option>\n    }\n  </select>\n</label>\n\n<label class=\"flex items-center gap-4 w-full\">\n  <span>Select Y-Axis</span>\n  <select\n    [ngModel]=\"fields.y_column\"\n    (ngModelChange)=\"changeYColumn($event)\"\n    class=\"select select-sm select-bordered max-w-[300px] grow\"\n  >\n    @for (column of columns(); track column) {\n      <option [ngValue]=\"column\">{{ column }}</option>\n    }\n  </select>\n</label>\n"
        },
        {
            "name": "ChevronLeftIconComponent",
            "id": "component-ChevronLeftIconComponent-8202a6d35a38f5a14aad201c73f73a5817e132f0a64679633d4628111b07325e33de79eb23b2695bdea72e725d03a7e7be5c846f11dcc3b394fdf06ecdbcdcd2",
            "file": "src/app/components/atoms/icons/chevron-left-icon/chevron-left-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-chevron-left-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path fill-rule=\"evenodd\"\n          d=\"M7.72 12.53a.75.75 0 0 1 0-1.06l7.5-7.5a.75.75 0 1 1 1.06 1.06L9.31 12l6.97 6.97a.75.75 0 1 1-1.06 1.06l-7.5-7.5Z\"\n          clip-rule=\"evenodd\"/>\n  </svg>\n\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 19.5 8.25 12l7.5-7.5\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-chevron-left-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path fill-rule=\"evenodd\"\n              d=\"M7.72 12.53a.75.75 0 0 1 0-1.06l7.5-7.5a.75.75 0 1 1 1.06 1.06L9.31 12l6.97 6.97a.75.75 0 1 1-1.06 1.06l-7.5-7.5Z\"\n              clip-rule=\"evenodd\"/>\n      </svg>\n\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 19.5 8.25 12l7.5-7.5\"/>\n      </svg>\n    }\n  `\n})\nexport class ChevronLeftIconComponent extends BaseIconDirective {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "CircleStackIconComponent",
            "id": "component-CircleStackIconComponent-0a491d57c03fc13f597254f25c90d41c94ac03a38c8c3ad82cd5f3136825473d3a96ff540ab426b225e75eaf0f11ac5ae5ab20cf094114bb4627dc61cef437d0",
            "file": "src/app/components/atoms/icons/circle-stack-icon/circle-stack-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-circle-stack-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path d=\"M21 6.375c0 2.692-4.03 4.875-9 4.875S3 9.067 3 6.375 7.03 1.5 12 1.5s9 2.183 9 4.875Z\"/>\n    <path\n      d=\"M12 12.75c2.685 0 5.19-.586 7.078-1.609a8.283 8.283 0 0 0 1.897-1.384c.016.121.025.244.025.368C21 12.817 16.97 15 12 15s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.285 8.285 0 0 0 1.897 1.384C6.809 12.164 9.315 12.75 12 12.75Z\"/>\n    <path\n      d=\"M12 16.5c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 0 0 1.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 0 0 1.897 1.384C6.809 15.914 9.315 16.5 12 16.5Z\"/>\n    <path\n      d=\"M12 20.25c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 0 0 1.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 0 0 1.897 1.384C6.809 19.664 9.315 20.25 12 20.25Z\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-circle-stack-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path d=\"M21 6.375c0 2.692-4.03 4.875-9 4.875S3 9.067 3 6.375 7.03 1.5 12 1.5s9 2.183 9 4.875Z\"/>\n        <path\n          d=\"M12 12.75c2.685 0 5.19-.586 7.078-1.609a8.283 8.283 0 0 0 1.897-1.384c.016.121.025.244.025.368C21 12.817 16.97 15 12 15s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.285 8.285 0 0 0 1.897 1.384C6.809 12.164 9.315 12.75 12 12.75Z\"/>\n        <path\n          d=\"M12 16.5c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 0 0 1.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 0 0 1.897 1.384C6.809 15.914 9.315 16.5 12 16.5Z\"/>\n        <path\n          d=\"M12 20.25c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 0 0 1.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 0 0 1.897 1.384C6.809 19.664 9.315 20.25 12 20.25Z\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125\"/>\n      </svg>\n    }\n  `\n})\nexport class CircleStackIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "CommandLineIconComponent",
            "id": "component-CommandLineIconComponent-0a206775065686961e0b16af6472ea244ec6770531c31a7b3d41b86a17fbaa199639040bfa8efdbc79436b515f047d16ba8f77f3156a5be22a8985e28461721e",
            "file": "src/app/components/atoms/icons/command-line-icon/command-line-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-command-line-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path fill-rule=\"evenodd\"\n          d=\"M2.25 6a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V6Zm3.97.97a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 0 1-1.06-1.06l1.72-1.72-1.72-1.72a.75.75 0 0 1 0-1.06Zm4.28 4.28a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5h-3Z\"\n          clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"m6.75 7.5 3 2.25-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0 0 21 18V6a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 6v12a2.25 2.25 0 0 0 2.25 2.25Z\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-command-line-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path fill-rule=\"evenodd\"\n              d=\"M2.25 6a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V6Zm3.97.97a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 0 1-1.06-1.06l1.72-1.72-1.72-1.72a.75.75 0 0 1 0-1.06Zm4.28 4.28a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5h-3Z\"\n              clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"m6.75 7.5 3 2.25-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0 0 21 18V6a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 6v12a2.25 2.25 0 0 0 2.25 2.25Z\"/>\n      </svg>\n    }\n  `\n})\nexport class CommandLineIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "ComputerDesktopIconComponent",
            "id": "component-ComputerDesktopIconComponent-215f6ed01ad55b594f8c7b9a0cff2da1631e21826716ebda487b7a4a73b8a2c6b2bca6b65f73283ce6c5bf3c9f4b51630080c4da30a096dbbf3dcdf2bec51821",
            "file": "src/app/components/atoms/icons/computer-desktop-icon/computer-desktop-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-computer-desktop-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path fill-rule=\"evenodd\"\n          d=\"M2.25 5.25a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3V15a3 3 0 0 1-3 3h-3v.257c0 .597.237 1.17.659 1.591l.621.622a.75.75 0 0 1-.53 1.28h-9a.75.75 0 0 1-.53-1.28l.621-.622a2.25 2.25 0 0 0 .659-1.59V18h-3a3 3 0 0 1-3-3V5.25Zm1.5 0v7.5a1.5 1.5 0 0 0 1.5 1.5h13.5a1.5 1.5 0 0 0 1.5-1.5v-7.5a1.5 1.5 0 0 0-1.5-1.5H5.25a1.5 1.5 0 0 0-1.5 1.5Z\"\n          clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-computer-desktop-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path fill-rule=\"evenodd\"\n              d=\"M2.25 5.25a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3V15a3 3 0 0 1-3 3h-3v.257c0 .597.237 1.17.659 1.591l.621.622a.75.75 0 0 1-.53 1.28h-9a.75.75 0 0 1-.53-1.28l.621-.622a2.25 2.25 0 0 0 .659-1.59V18h-3a3 3 0 0 1-3-3V5.25Zm1.5 0v7.5a1.5 1.5 0 0 0 1.5 1.5h13.5a1.5 1.5 0 0 0 1.5-1.5v-7.5a1.5 1.5 0 0 0-1.5-1.5H5.25a1.5 1.5 0 0 0-1.5 1.5Z\"\n              clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25\"/>\n      </svg>\n    }\n  `\n})\nexport class ComputerDesktopIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "CubeIconComponent",
            "id": "component-CubeIconComponent-96b7d92393e0e4623be8f3b18e43dddd5540b3ac62cc15de2d86edc20d7ff2ea50882862cc4da5e4535bff4ed6ff377c238810d7e0f26d4e3573e901672f8deb",
            "file": "src/app/components/atoms/icons/cube-icon/cube-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-cube-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      d=\"M12.378 1.602a.75.75 0 0 0-.756 0L3 6.632l9 5.25 9-5.25-8.622-5.03ZM21.75 7.93l-9 5.25v9l8.628-5.032a.75.75 0 0 0 .372-.648V7.93ZM11.25 22.18v-9l-9-5.25v8.57a.75.75 0 0 0 .372.648l8.628 5.033Z\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m21 7.5-9-5.25L3 7.5m18 0-9 5.25m9-5.25v9l-9 5.25M3 7.5l9 5.25M3 7.5v9l9 5.25m0-9v9\" />\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-cube-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          d=\"M12.378 1.602a.75.75 0 0 0-.756 0L3 6.632l9 5.25 9-5.25-8.622-5.03ZM21.75 7.93l-9 5.25v9l8.628-5.032a.75.75 0 0 0 .372-.648V7.93ZM11.25 22.18v-9l-9-5.25v8.57a.75.75 0 0 0 .372.648l8.628 5.033Z\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m21 7.5-9-5.25L3 7.5m18 0-9 5.25m9-5.25v9l-9 5.25M3 7.5l9 5.25M3 7.5v9l9 5.25m0-9v9\" />\n      </svg>\n    }\n  `\n})\nexport class CubeIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "DashboardButtonComponent",
            "id": "component-DashboardButtonComponent-d7d61d1bbf290567fb66f984e6d58b7c716803cb0af591f60c8d3263757853f052c01a026a9bedbb4a116b8a10225c61f6ff7315d7191ec2dd8a8e910e08eb66",
            "file": "src/app/components/atoms/buttons/dashboard-button/dashboard-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-dashboard-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PlusIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { PlusIconComponent } from '../../icons';\n\n@Component({\n  imports: [\n    PlusIconComponent\n  ],\n  selector: 'etri-dashboard-button',\n  standalone: true,\n  styleUrl: './dashboard-button.component.scss',\n  templateUrl: './dashboard-button.component.html',\n})\nexport class DashboardButtonComponent {\n}\n",
            "styleUrl": "./dashboard-button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button type=\"button\" class=\"btn btn-secondary btn-sm aspect-square w-fit\">\n  <etri-plus-icon class=\"size-5 text-white\"/>\n</button>\n\n"
        },
        {
            "name": "DashboardFormPageComponent",
            "id": "component-DashboardFormPageComponent-efabbb415667992126ba24451de47a9381e7f6b06b2b5657c27cf181f188b0da2432fbd83b387888a862c56828894cadd757cd5785266698481d3505cdbc1287",
            "file": "src/app/routes/dashboard/pages/make-dashboard-page/dashboard-form-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-dashboard-form-page",
            "styleUrls": [
                "dashboard-form-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "dashboard-form-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dashboardService",
                    "defaultValue": "inject(DashboardService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "queryData",
                    "defaultValue": "signal<RunQuery | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "queryService",
                    "defaultValue": "inject(QueryService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "submitting",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "executeQuery",
                    "args": [
                        {
                            "name": "query",
                            "type": "FindQuery",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "FindQuery",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "QuerySelectComponent",
                    "type": "component"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "PlusIconComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardItemInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe } from '@angular/common';\nimport { Component, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { finalize, map, Subscription, tap } from 'rxjs';\nimport {\n  DashboardItemInputComponent,\n  LoadingComponent,\n  PlusIconComponent,\n  QuerySelectComponent\n} from '../../../../components';\nimport { FindQuery, RunQuery } from '../../../../dto';\nimport { DashboardService, QueryService, TraindbService } from '../../../../services';\n\n@Component({\n  selector: 'etri-dashboard-form-page',\n  standalone: true,\n  styleUrls: ['dashboard-form-page.component.scss'],\n  templateUrl: 'dashboard-form-page.component.html',\n  imports: [\n    ReactiveFormsModule,\n    QuerySelectComponent,\n    LoadingComponent,\n    RouterLink,\n    JsonPipe,\n    PlusIconComponent,\n    DashboardItemInputComponent\n  ]\n})\nexport class DashboardFormPageComponent implements OnInit, OnDestroy {\n  submitting = false;\n  readonly formGroup: FormGroup;\n  readonly queryData = signal<RunQuery | null>(null);\n  readonly queryService = inject(QueryService);\n  readonly dashboardService = inject(DashboardService);\n  private readonly traindbService = inject(TraindbService);\n  private readonly route = inject(ActivatedRoute);\n  private readonly router = inject(Router);\n  private readonly subscription = new Subscription();\n\n  constructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      name: [null, [Validators.required]],\n      query_id: [null, [Validators.required]],\n      items: [[], [(control: AbstractControl) => {\n        const value = control.value;\n        return (value ?? []).length > 0 ? null : { required: true };\n      }]],\n    });\n  }\n\n  executeQuery(query: FindQuery) {\n    this.queryService.runQuery(query.id)\n      .pipe(\n        tap(res => console.log(JSON.stringify(res)))\n      )\n      .subscribe({\n        next: data => this.queryData.set(data),\n        error: err => {\n          console.error(err);\n          alert(`Error: ${err.error?.detail ?? err.message}`);\n        }\n      });\n  }\n\n  submit() {\n    const dto = this.formGroup.getRawValue();\n    dto.traindb_id = this.traindbService.currentId()!;\n    this.submitting = true;\n    this.dashboardService.createDashboard(dto).pipe(\n      finalize(() => this.submitting = false),\n    ).subscribe({\n      next: () => this.router.navigate(['/dashboard']),\n    });\n  }\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.route.params.pipe(\n        map(params => params['id'] ?? null),\n      ).subscribe()\n    );\n\n    this.subscription.add(\n      this.formGroup.get('query_id')?.valueChanges.subscribe(() => this.queryData.set(null)),\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply prose prose-zinc prose-sm mx-auto;\n}\n",
                    "styleUrl": "dashboard-form-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<h1>Create Dashboard</h1>\n<form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  class=\"section elevate p-8 space-y-8\"\n>\n  <label\n    class=\"input input-bordered flex items-center gap-4\"\n  >\n    Name:\n    <input\n      formControlName=\"name\"\n      type=\"text\"\n      placeholder=\"Input dashboard name\"\n      class=\"grow\"\n    />\n  </label>\n  <div class=\"space-y-4\">\n    <h3>Select a Query</h3>\n    <etri-query-select\n      formControlName=\"query_id\"\n      (onExecute)=\"executeQuery($event)\"\n    />\n  </div>\n\n  @if (queryData()) {\n    <etri-dashboard-item-input\n      [data]=\"queryData()!\"\n      formControlName=\"items\"\n    />\n  } @else {\n    <p class=\"text-zinc-500 text-sm\">쿼리를 선택 후 실행해주세요.</p>\n  }\n\n  <div class=\"flex gap-4\">\n    <button\n      type=\"button\"\n      routerLink=\"/dashboard\"\n      class=\"btn grow no-underline\"\n    >Cancel\n    </button>\n    <button\n      [disabled]=\"formGroup.invalid\"\n      class=\"btn btn-primary grow text-white disabled:btn-disabled\"\n    >\n      @if (submitting) {\n        <etri-loading size=\"xs\"></etri-loading>\n      } @else {\n        Register\n      }\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "DashboardItemComponent",
            "id": "component-DashboardItemComponent-c4f146ae62badee7e6c4afba031fa32eb50e7170de556262acbff644c01ee7fa154cd25c527d04cbd0b2dd8b0744036c79e0a8cade98fc38c3a1a64e68f4cae0",
            "file": "src/app/components/organisms/dashboard/dashboard-item/dashboard-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-dashboard-item",
            "styleUrls": [
                "dashboard-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "dashboard-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ChartType",
                    "defaultValue": "ChartType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "columns",
                    "defaultValue": "input<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "data",
                    "defaultValue": "input<Array<any[]>>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BarChartComponent",
                    "type": "component"
                },
                {
                    "name": "ColumnToAxisDataPipe",
                    "type": "pipe"
                },
                {
                    "name": "LineChartComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input } from '@angular/core';\nimport { ChartType, DashboardItem } from '../../../../dto';\nimport { ColumnToAxisDataPipe } from '../../../../pipes';\nimport { BarChartComponent } from '../../charts';\nimport { LineChartComponent } from '../../charts/line-chart/line-chart.component';\n\n@Component({\n  selector: 'etri-dashboard-item',\n  standalone: true,\n  styleUrls: ['dashboard-item.component.scss'],\n  templateUrl: 'dashboard-item.component.html',\n  imports: [\n    BarChartComponent,\n    ColumnToAxisDataPipe,\n    LineChartComponent\n  ]\n})\nexport class DashboardItemComponent {\n  item = input.required<DashboardItem>();\n  columns = input<string[]>([]);\n  data = input<Array<any[]>>([]);\n  protected readonly ChartType = ChartType;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "dashboard-item.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "@if (item().type === ChartType.BAR) {\n  <etri-bar-chart\n    height=\"350px\"\n    [xAxisLabel]=\"item().x_column\"\n    [yAxisLabel]=\"item().y_column\"\n    [x]=\"item().x_column | columnToAxisData:data():columns()\"\n    [y]=\"item().y_column | columnToAxisData:data():columns()\"\n  />\n} @else if (item().type === ChartType.LINE) {\n  <etri-line-chart\n    height=\"350px\"\n    [xAxisLabel]=\"item().x_column\"\n    [yAxisLabel]=\"item().y_column\"\n    [x]=\"item().x_column | columnToAxisData:data():columns()\"\n    [y]=\"item().y_column | columnToAxisData:data():columns()\"\n  />\n}\n"
        },
        {
            "name": "DashboardItemInputComponent",
            "id": "component-DashboardItemInputComponent-47d5650aad76dcc41ad48a49569149e1f1d426d9c0c01eb90a55666bef1c0f1e0e389f00d6ff54fb4db2700c643d7bd16cbcbbae3d7468b2d1bc6160dfcbcd07",
            "file": "src/app/components/organisms/dashboard/dashboard-item-input/dashboard-item-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "VALUE_ACCESSOR"
                }
            ],
            "selector": "etri-dashboard-item-input",
            "styleUrls": [
                "dashboard-item-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "dashboard-item-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": true
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartType",
                    "defaultValue": "computed(() => {\n    const item = this.selectedItem();\n    return item?.type ?? null;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Signal<ChartType | null>",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "ChartType",
                    "defaultValue": "ChartType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "columns",
                    "defaultValue": "computed(() => this.data().columns)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": true
                },
                {
                    "name": "dialog",
                    "defaultValue": "inject(Dialog)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "required": false
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedIndex",
                    "defaultValue": "signal<number>(-1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "selectedItem",
                    "defaultValue": "computed<DashboardItem | null>(() => {\n    const idx = this.selectedIndex();\n    if (idx === -1) return null;\n    return this.value()[idx];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Signal<DashboardItem | null>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "value",
                    "defaultValue": "model<DashboardItem[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "value",
                            "type": "DashboardItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "DashboardItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isNumber",
                    "args": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openMakeViz",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ChartItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ChartItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PlusIconComponent",
                    "type": "component"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                },
                {
                    "name": "BarChartComponent",
                    "type": "component"
                },
                {
                    "name": "ColumnToIndexPipe",
                    "type": "pipe"
                },
                {
                    "name": "ColumnToAxisDataPipe",
                    "type": "pipe"
                },
                {
                    "name": "LineChartComponent",
                    "type": "component"
                },
                {
                    "name": "UpperCasePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Dialog } from '@angular/cdk/dialog';\nimport { DecimalPipe, LowerCasePipe, UpperCasePipe } from '@angular/common';\nimport { Component, computed, forwardRef, inject, input, model, Provider, Signal, signal } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ChartItem, ChartType, DashboardItem, RunQuery } from '../../../../dto';\nimport { ColumnToAxisDataPipe, ColumnToIndexPipe } from '../../../../pipes';\nimport { PlusIconComponent } from '../../../atoms';\nimport { BarChartComponent } from '../../charts';\nimport { LineChartComponent } from '../../charts/line-chart/line-chart.component';\nimport { MakeChartDialog } from '../../dialogs';\n\nconst VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DashboardItemInputComponent),\n  multi: true,\n};\n\n@Component({\n  imports: [\n    PlusIconComponent,\n    DecimalPipe,\n    BarChartComponent,\n    ColumnToIndexPipe,\n    ColumnToAxisDataPipe,\n    LineChartComponent,\n    UpperCasePipe,\n  ],\n  providers: [VALUE_ACCESSOR],\n  selector: 'etri-dashboard-item-input',\n  standalone: true,\n  styleUrls: ['dashboard-item-input.component.scss'],\n  templateUrl: 'dashboard-item-input.component.html'\n})\nexport class DashboardItemInputComponent implements ControlValueAccessor {\n  data = input.required<RunQuery>();\n  selectedIndex = signal<number>(-1);\n  value = model<DashboardItem[]>([]);\n  disabled = model<boolean>();\n  columns = computed(() => this.data().columns);\n  selectedItem: Signal<DashboardItem | null> = computed<DashboardItem | null>(() => {\n    const idx = this.selectedIndex();\n    if (idx === -1) return null;\n    return this.value()[idx];\n  });\n  chartType: Signal<ChartType | null> = computed(() => {\n    const item = this.selectedItem();\n    return item?.type ?? null;\n  });\n  private readonly dialog = inject(Dialog);\n\n  private onChange: any;\n  private onTouch: any;\n\n  isNumber(item: any) {\n    return !isNaN(+item);\n  }\n\n  openMakeViz() {\n    const dialog = this.dialog.open<DashboardItem | undefined>(MakeChartDialog, {\n      data: this.data(),\n    });\n\n    dialog.closed.subscribe(item => {\n      if (item) {\n        console.log(item);\n        this.change([...this.value() as any, item]);\n        this.selectedIndex.set(this.selectedIndex() + 1);\n      }\n    });\n  }\n\n  setSelectedIndex(index: number) {\n    this.selectedIndex.set(index);\n  }\n\n  writeValue(value: ChartItem[]): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled.set(isDisabled);\n  }\n\n  private change(value: DashboardItem[]): void {\n    this.value.set([...value]);\n    if (this.onChange) this.onChange([...value]);\n  }\n\n  protected readonly ChartType = ChartType;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block;\n}\n",
                    "styleUrl": "dashboard-item-input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<div class=\"flex items-end gap-2\">\n  <div role=\"tablist\" class=\"tabs tabs-bordered\">\n    <button\n      role=\"tab\"\n      class=\"tab\"\n      [class.tab-active]=\"selectedIndex() === -1\"\n      (click)=\"setSelectedIndex(-1)\"\n    >Result\n    </button>\n    @for (item of value(); track $index) {\n      <button\n        role=\"tab\"\n        class=\"tab\"\n        [class.tab-active]=\"selectedIndex() === $index\"\n        (click)=\"setSelectedIndex($index)\"\n      >{{ item.type[0] | uppercase }}{{ item.type.slice(1) }} Chart\n      </button>\n    }\n  </div>\n  <button class=\"btn btn-sm\" type=\"button\" (click)=\"openMakeViz()\">\n    <etri-plus-icon class=\"size-4\"/>\n    Visualization\n  </button>\n</div>\n\n<section class=\"py-4\">\n  @if (selectedIndex() === -1) {\n    <div class=\"w-full overflow-auto max-h-[500px]\">\n      <table class=\"table table-xs\">\n        <thead class=\"sticky top-0 bg-white\">\n        <tr>\n          @for (column of data().columns; track column) {\n            <th class=\"border-r border-zinc-200 last:border-r-0\">{{ column }}</th>\n          }\n        </tr>\n        </thead>\n        <tbody>\n          @for (row of data().data; track $index) {\n            <tr class=\"even:bg-zinc-50 hover:bg-zinc-100\">\n              @for (item of row; track $index) {\n                @if (isNumber(item)) {\n                  <td class=\"text-right border-r border-zinc-200 last:border-r-0\">{{ item | number }}</td>\n                } @else {\n                  <td class=\"border-r border-zinc-200 last:border-r-0\">{{ item }}</td>\n                }\n              }\n            </tr>\n          }\n        </tbody>\n      </table>\n    </div>\n  } @else {\n    @if (chartType() === ChartType.BAR) {\n      <etri-bar-chart\n        [xAxisLabel]=\"selectedItem()?.x_column ?? 'X'\"\n        [yAxisLabel]=\"selectedItem()?.y_column ?? 'Y'\"\n        [x]=\"selectedItem()?.x_column | columnToAxisData:data().data:columns()\"\n        [y]=\"selectedItem()?.y_column | columnToAxisData:data().data:columns()\"\n      />\n    } @else if (chartType() === ChartType.LINE) {\n      <etri-line-chart\n        [xAxisLabel]=\"selectedItem()?.x_column ?? 'X'\"\n        [yAxisLabel]=\"selectedItem()?.y_column ?? 'Y'\"\n        [x]=\"selectedItem()?.x_column | columnToAxisData:data().data:columns()\"\n        [y]=\"selectedItem()?.y_column | columnToAxisData:data().data:columns()\"\n      ></etri-line-chart>\n    }\n  }\n</section>\n"
        },
        {
            "name": "DashboardItemsComponent",
            "id": "component-DashboardItemsComponent-3e172fe2a83698d57b7bf823864dc7f9343d52f6928e1e349c5476d03f8468c1dfdc462e5c5a22615f76b800113b83e703b3f97504a28f6635ff1dac789a647d",
            "file": "src/app/components/organisms/dashboard/dashboard-items/dashboard-items.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-dashboard-items",
            "styleUrls": [
                "dashboard-items.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "dashboard-items.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onDelete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "signal<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "signal<Array<any[]>>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "gridCols",
                    "defaultValue": "computed(() => {\n    if (this.items().length === 1) return 'grid-cols-1';\n    else if (this.items().length === 2) return 'grid-cols-1 md:grid-cols-2';\n    else if (this.items().length === 3) return 'grid-cols-1 md:grid-cols-3';\n    else return 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "items",
                    "defaultValue": "input.required<DashboardItem[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "onDelete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "queryService",
                    "defaultValue": "inject(QueryService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "runQuery",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PlayIconComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardItemComponent",
                    "type": "component"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "TrashIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, inject, input, output, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { DashboardItem, FindQuery } from '../../../../dto';\nimport { QueryService } from '../../../../services';\nimport { LoadingComponent, PlayIconComponent, TrashIconComponent } from '../../../atoms';\nimport { DashboardItemComponent } from '../dashboard-item';\n\n@Component({\n  imports: [\n    PlayIconComponent,\n    DashboardItemComponent,\n    LoadingComponent,\n    TrashIconComponent\n  ],\n  selector: 'etri-dashboard-items',\n  standalone: true,\n  styleUrls: ['dashboard-items.component.scss'],\n  templateUrl: 'dashboard-items.component.html'\n})\nexport class DashboardItemsComponent {\n  readonly name = input.required<string>();\n  readonly query = input.required<FindQuery>();\n  readonly items = input.required<DashboardItem[]>();\n  readonly columns = signal<string[]>([]);\n  readonly data = signal<Array<any[]>>([]);\n  readonly gridCols = computed(() => {\n    if (this.items().length === 1) return 'grid-cols-1';\n    else if (this.items().length === 2) return 'grid-cols-1 md:grid-cols-2';\n    else if (this.items().length === 3) return 'grid-cols-1 md:grid-cols-3';\n    else return 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4';\n  });\n  readonly loading = signal<boolean>(false);\n  readonly onDelete = output();\n\n  private readonly queryService = inject(QueryService);\n\n  runQuery() {\n    this.loading.set(true);\n    this.queryService.runQuery(this.query().id).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: res => {\n        const { data, columns } = res;\n        console.log(data, columns);\n        this.data.set(data);\n        this.columns.set(columns);\n      }\n    })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block bg-white p-4;\n}\n",
                    "styleUrl": "dashboard-items.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex items-center gap-4 px-4\">\n  <h2 class=\"my-0\">{{ name() }}</h2>\n  <button\n    type=\"button\"\n    (click)=\"onDelete.emit()\"\n    [disabled]=\"loading()\"\n    class=\"btn btn-error btn-xs\"\n  >\n    <etri-trash-icon class=\"size-4 text-white\" />\n  </button>\n  <button\n    type=\"button\"\n    (click)=\"runQuery()\"\n    [disabled]=\"loading()\"\n    class=\"btn btn-xs btn-primary\"\n  >\n    <etri-play-icon class=\"size-4 text-white\"/>\n  </button>\n</div>\n@if (loading()) {\n  <div class=\"h-[350px] flex items-center justify-center\">\n    <etri-loading/>\n  </div>\n} @else {\n  <div class=\"grid {{gridCols()}} bg-white p-2\">\n    @for (item of items(); track $index) {\n      <etri-dashboard-item\n        [item]=\"item\"\n        [columns]=\"columns()\"\n        [data]=\"data()\"\n      />\n    }\n  </div>\n}\n"
        },
        {
            "name": "DashboardPageComponent",
            "id": "component-DashboardPageComponent-b50380a330f8dcd5f1915c02975314b690e34fb33ac5f7c7846e084d35446d188a8c02358c2749e14e83451c0e74388d586689ba5509b88324d1363d2013825a",
            "file": "src/app/routes/dashboard/pages/dashboard-page/dashboard-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-dashboard-page",
            "styleUrls": [
                "dashboard-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "dashboard-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ChartType",
                    "defaultValue": "ChartType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "dashboards",
                    "defaultValue": "signal<FindDashboard[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dashboardService",
                    "defaultValue": "inject(DashboardService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteDashboard",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DashboardButtonComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "BarChartComponent",
                    "type": "component"
                },
                {
                    "name": "ColumnToAxisDataPipe",
                    "type": "pipe"
                },
                {
                    "name": "LineChartComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardItemsComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe } from '@angular/common';\nimport { Component, inject, OnInit, signal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { switchMap } from 'rxjs';\nimport { BarChartComponent, DashboardButtonComponent, DashboardItemsComponent } from '../../../../components';\nimport { LineChartComponent } from '../../../../components/organisms/charts/line-chart/line-chart.component';\nimport { ChartType, FindDashboard } from '../../../../dto';\nimport { ColumnToAxisDataPipe } from '../../../../pipes';\nimport { DashboardService, TraindbService } from '../../../../services';\n\n@Component({\n  host: {\n    class: 'page',\n  },\n  selector: 'etri-dashboard-page',\n  standalone: true,\n  styleUrls: ['dashboard-page.component.scss'],\n  templateUrl: 'dashboard-page.component.html',\n  imports: [\n    DashboardButtonComponent,\n    RouterLink,\n    JsonPipe,\n    BarChartComponent,\n    ColumnToAxisDataPipe,\n    LineChartComponent,\n    DashboardItemsComponent\n  ]\n})\nexport class DashboardPageComponent implements OnInit {\n  readonly dashboards = signal<FindDashboard[]>([]);\n  private readonly traindbService = inject(TraindbService);\n  private readonly dashboardService = inject(DashboardService);\n  protected readonly ChartType = ChartType;\n\n  deleteDashboard(id: number) {\n    if (!confirm('대시보드를 삭제하시겠습니까?')) return;\n    this.dashboardService.deleteDashboard(id).pipe(\n      switchMap(() => {\n        const traindbId = this.traindbService.currentId()!;\n        return this.dashboardService.searchDashboard(traindbId);\n      }),\n    ).subscribe({\n      next: dashboards => this.dashboards.set(dashboards),\n      error: err => {\n        console.error(err);\n      },\n    })\n  }\n\n  ngOnInit(): void {\n    const traindbId = this.traindbService.currentId()!;\n    this.dashboardService.searchDashboard(traindbId).subscribe({\n      next: dashboards => this.dashboards.set(dashboards)\n    })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n",
                    "styleUrl": "dashboard-page.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex\">\n  <etri-dashboard-button\n    routerLink=\"/dashboard/make\"\n  />\n</div>\n\n@for (dashboard of dashboards(); track dashboard.id) {\n  <etri-dashboard-items\n    [name]=\"dashboard.name\"\n    [query]=\"dashboard.query\"\n    [items]=\"dashboard.items\"\n    (onDelete)=\"deleteDashboard(dashboard.id)\"\n  />\n}\n"
        },
        {
            "name": "DatabaseFormPageComponent",
            "id": "component-DatabaseFormPageComponent-f82c1be22606388958039408ee8c81f1676f5041d2323a8a9127d2e9d7bfbb11350927c68ef8edd111ec34d4b3b19ab16176234b658b90ff6a2b8aefdc878191",
            "file": "src/app/routes/databases/pages/database-form-page/database-form-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-database-form-page",
            "styleUrls": [
                "database-form-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "database-form-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "databaseService",
                    "defaultValue": "inject(DatabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "submitting",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "testConnectionStatus",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"success\" | \"failure\" | \"loading\" | null",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "testConnection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { delay, finalize, map, of, Subscription, switchMap, tap } from 'rxjs';\nimport { LoadingComponent } from '../../../../components';\nimport { DatabaseService, TraindbService } from '../../../../services';\n\n@Component({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    LoadingComponent,\n    RouterLink\n  ],\n  selector: 'etri-database-form-page',\n  standalone: true,\n  styleUrls: ['database-form-page.component.scss'],\n  templateUrl: 'database-form-page.component.html'\n})\nexport class DatabaseFormPageComponent implements OnInit, OnDestroy {\n  id: number | null = null;\n  testConnectionStatus: 'success' | 'failure' | 'loading' | null = null;\n  submitting = false;\n\n  readonly formGroup: FormGroup;\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly databaseService = inject(DatabaseService);\n  private readonly route = inject(ActivatedRoute);\n  private readonly router = inject(Router);\n  private readonly subscription = new Subscription();\n\n  constructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      name: [null, [Validators.required]],\n      dbms: [null, [Validators.required]],\n      host: [null, [Validators.required]],\n      port: [null, [Validators.required]],\n      username: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n    });\n  }\n\n  testConnection() {\n    const traindb = this.traindbService.current();\n    this.testConnectionStatus = 'loading';\n    const dto = this.formGroup.getRawValue();\n    this.databaseService.testConnection({\n      dbms: dto.dbms,\n      host: dto.host,\n      port: dto.port,\n      username: dto.username,\n      password: dto.password,\n      server_host: traindb?.host ?? null,\n      server_port: traindb?.port ?? null,\n    }).pipe(\n      delay(500)\n    ).subscribe({\n      next: ({ success }) => {\n        this.testConnectionStatus = success ? 'success' : 'failure';\n      },\n      error: err => {\n        console.error(err);\n        this.testConnectionStatus = 'failure';\n      }\n    });\n  }\n\n  submit() {\n    const traindbId = this.traindbService.currentId();\n    if (!traindbId) return;\n\n    const dto = { ...this.formGroup.getRawValue(), traindb_id: traindbId };\n    const observable = this.id ?\n      this.databaseService.updateDatabase(this.id, dto) :\n      this.databaseService.createDatabase(dto);\n\n    this.submitting = true;\n    observable.pipe(\n      finalize(() => this.submitting = false),\n    ).subscribe({\n      next: () => this.router.navigate(['/databases']),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      this.route.params.pipe(\n        map(params => params['id']),\n        tap(id => this.id = id ? +id : null),\n        switchMap(id => id ? this.databaseService.findDatabase(id) : of(null))\n      ).subscribe({\n        next: database => {\n          if (database) this.formGroup.patchValue(database);\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page block mx-auto;\n}\n",
                    "styleUrl": "database-form-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<h1>{{ id ? 'Update' : 'Register' }} Database</h1>\n\n<form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  class=\"section elevate p-8 space-y-4\"\n>\n  <div class=\"flex flex-col gap-8\">\n    <label\n      class=\"input input-bordered flex items-center gap-4\"\n    >\n      Name:\n      <input\n        formControlName=\"name\"\n        type=\"text\"\n        placeholder=\"e.g. Etri MySQL\"\n        class=\"grow\"\n      />\n    </label>\n    <select\n      formControlName=\"dbms\"\n      class=\"select select-bordered\"\n    >\n      <option [ngValue]=\"null\" disabled selected>Select DBMS</option>\n      <option value=\"mysql\">MySQL</option>\n      <option value=\"kairos\">Kairos</option>\n    </select>\n    <label\n      class=\"input input-bordered flex items-center gap-4\"\n    >\n      Host:\n      <input\n        formControlName=\"host\"\n        type=\"text\"\n        placeholder=\"e.g. 123.123.123.123\"\n        class=\"grow\"\n      />\n    </label>\n    <label\n      class=\"input input-bordered flex items-center gap-4\"\n    >\n      Port:\n      <input\n        formControlName=\"port\"\n        type=\"text\"\n        class=\"grow\"\n        placeholder=\"e.g. 3306\"\n      />\n    </label>\n    <label class=\"input input-bordered flex items-center gap-4\">\n      Username:\n      <input\n        formControlName=\"username\"\n        type=\"text\"\n        placeholder=\"e.g. database_username\"\n        class=\"grow\"\n      />\n    </label>\n    <label class=\"input input-bordered flex items-center gap-4\">\n      Password:\n      <input\n        formControlName=\"password\"\n        type=\"password\"\n        placeholder=\"e.g. database_password\"\n        autocomplete=\"off\"\n        class=\"grow\"\n      />\n    </label>\n  </div>\n  <div class=\"flex gap-4 px-2\">\n    <button\n      type=\"button\"\n      [disabled]=\"formGroup.get('dbms')?.invalid || formGroup.get('host')?.invalid || formGroup.get('port')?.invalid\"\n      (click)=\"testConnection()\"\n      class=\"text-primary disabled:text-zinc-500\"\n    >Test Connection\n    </button>\n    @if (testConnectionStatus === 'loading') {\n      <etri-loading size=\"xs\"></etri-loading>\n    } @else if (testConnectionStatus === 'failure') {\n      <span class=\"text-error\">Failure</span>\n    } @else if (testConnectionStatus === 'success') {\n      <span class=\"text-secondary\">Success</span>\n    } @else {\n      <span class=\"text-zinc-500\"> - </span>\n    }\n  </div>\n  <div class=\"flex gap-4\">\n    <button\n      routerLink=\"/databases\"\n      type=\"button\"\n      class=\"btn grow no-underline\"\n    >Cancel</button>\n    <button\n      [disabled]=\"formGroup.invalid || submitting\"\n      class=\"btn btn-primary grow text-white disabled:btn-disabled\"\n    >\n      @if (submitting) {\n        <etri-loading size=\"xs\"></etri-loading>\n      } @else {\n        {{ id ? 'Update' : 'Register' }}\n      }\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "DatabaseListPageComponent",
            "id": "component-DatabaseListPageComponent-ef72ddf40087216725b50e4e0712849ff06758b419caa66e413fd90bacdee9b6741c4fab5390469689198b1bb887d89a64ab74a72e128caa4e0a6efce920bc38",
            "file": "src/app/routes/databases/pages/database-list-page/database-list-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-database-list-page",
            "styleUrls": [
                "database-list-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "database-list-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "databaseList",
                    "defaultValue": "signal([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<FindDatabase[]>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "databaseService",
                    "defaultValue": "inject(DatabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "keyword",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "computed(() => this.databaseService.loading())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteDatabase",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "db",
                            "type": "FindDatabase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "db",
                            "type": "FindDatabase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadDatabases",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "IpAnonymizationPipe",
                    "type": "pipe"
                },
                {
                    "name": "PatternFilterPipe",
                    "type": "pipe"
                },
                {
                    "name": "SearchInputComponent",
                    "type": "component"
                },
                {
                    "name": "TrashIconComponent",
                    "type": "component"
                },
                {
                    "name": "PencilSquareIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DecimalPipe } from '@angular/common';\nimport { Component, computed, inject, signal, WritableSignal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport {\n  LoadingComponent,\n  PencilSquareIconComponent,\n  SearchInputComponent,\n  TrashIconComponent\n} from '../../../../components';\nimport { FindDatabase } from '../../../../dto';\nimport { IpAnonymizationPipe, PatternFilterPipe } from '../../../../pipes';\nimport { DatabaseService, TraindbService } from '../../../../services';\n\n@Component({\n  imports: [\n    DecimalPipe,\n    LoadingComponent,\n    RouterLink,\n    IpAnonymizationPipe,\n    PatternFilterPipe,\n    SearchInputComponent,\n    TrashIconComponent,\n    PencilSquareIconComponent\n  ],\n  selector: 'etri-database-list-page',\n  standalone: true,\n  styleUrls: ['database-list-page.component.scss'],\n  templateUrl: 'database-list-page.component.html'\n})\nexport class DatabaseListPageComponent {\n  readonly databaseList: WritableSignal<FindDatabase[]> = signal([]);\n  readonly loading = computed(() => this.databaseService.loading());\n  readonly keyword = signal('');\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly databaseService = inject(DatabaseService);\n\n  constructor() {\n    this.loadDatabases();\n  }\n\n  deleteDatabase(event: MouseEvent, db: FindDatabase) {\n    event.stopPropagation();\n    if (!confirm(`${db.name}을 삭제하시겠습니까?`)) return;\n    this.databaseService.deleteDatabase(db.id).subscribe({\n      next: () => this.loadDatabases(),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  private loadDatabases() {\n    const traindbId = this.traindbService.currentId();\n    this.databaseService.searchDatabases(traindbId!).subscribe({\n      next: list => this.databaseList.set(list),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      },\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page;\n}\n",
                    "styleUrl": "database-list-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 36
            },
            "extends": [],
            "templateData": "<h1>Databases</h1>\n\n<section class=\"section elevate flex gap-4\">\n  <etri-search-input\n    class=\"inline-block grow max-w-lg\"\n    (onKeyword)=\"keyword.set($event)\"/>\n  <button\n    type=\"button\"\n    routerLink=\"/databases/register\"\n    class=\"ml-auto btn btn-primary btn-sm text-white no-underline rounded-none\">New</button>\n</section>\n\n<section class=\"section elevate p-0 overflow-auto\">\n  <table class=\"table\">\n    <!-- head -->\n    <thead class=\"sticky top-0\">\n    <tr>\n      <th class=\"text-right\">#</th>\n      <th class=\"text-left\">Name</th>\n      <th class=\"text-left\">Host</th>\n      <th class=\"text-left\">Port</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n      @for (db of databaseList() | patternFilter:keyword():'name'; track $index) {\n        <tr class=\"even:bg-zinc-50 hover:bg-zinc-100\">\n          <th class=\"text-right\">{{ $index + 1 | number }}</th>\n          <td>{{ db.name }}</td>\n          <td>{{ db.host | ipAnonymization }}</td>\n          <td>{{ db.port }}</td>\n          <td class=\"flex gap-2 py-2 px-4\">\n            <button\n              type=\"button\"\n              (click)=\"deleteDatabase($event, db)\"\n              class=\"btn btn-warning btn-xs rounded-none text-white\"\n            >\n              <etri-trash-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n            <button\n              type=\"button\"\n              [routerLink]=\"['/databases', db.id, 'update']\"\n              class=\"btn btn-secondary btn-xs rounded-none no-underline text-white\"\n            >\n              <etri-pencil-square-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n          </td>\n        </tr>\n      } @empty {\n        <tr>\n          @if (loading()) {\n            <td colspan=\"5\">\n              <div class=\"flex flex-col gap-2 items-center py-4\">\n                <etri-loading/>\n                <span class=\"text-zinc-500 text-xs\">Loading...</span>\n              </div>\n            </td>\n          } @else {\n            <td class=\"text-zinc-500 text-center\" colspan=\"5\">결과가 없습니다.</td>\n          }\n        </tr>\n      }\n    </tbody>\n  </table>\n</section>\n"
        },
        {
            "name": "DatabaseTablesComponent",
            "id": "component-DatabaseTablesComponent-b43237517f08bc067db7f242c26c089e2541bff7cf3b2c1b1919a702f8eb3b143a8552bc76217f125ba03a44b40e5f56fe3ce46ebb8a9a190a6ba5e885769657",
            "file": "src/app/components/molecules/database-tables/database-tables.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-database-tables",
            "styleUrls": [
                "database-tables.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "database-tables.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "collapse",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": false
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "collapse",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": false
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": true
                },
                {
                    "name": "selected",
                    "defaultValue": "input<{ schema: string; table: Table; } | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selectTable",
                    "defaultValue": "output<{ schema: string; table: Table; }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "tables",
                    "defaultValue": "input<Table[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CircleStackIconComponent",
                    "type": "component"
                },
                {
                    "name": "TableCellsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, model, output } from '@angular/core';\nimport { Table } from '../../../dto';\nimport { CircleStackIconComponent, TableCellsIconComponent } from '../../atoms';\n\n@Component({\n  imports: [\n    CircleStackIconComponent,\n    TableCellsIconComponent\n  ],\n  selector: 'etri-database-tables',\n  standalone: true,\n  styleUrls: ['database-tables.component.scss'],\n  templateUrl: 'database-tables.component.html'\n})\nexport class DatabaseTablesComponent {\n  collapse = model(true);\n  schema = input.required<string>();\n  selected = input<{ schema: string; table: Table; } | null>(null);\n  tables = input<Table[]>([]);\n  selectTable = output<{ schema: string; table: Table; }>();\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply prose prose-zinc flex flex-col;\n}\n",
                    "styleUrl": "database-tables.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<button\n  type=\"button\"\n  (click)=\"collapse.set(!collapse())\"\n  class=\"flex items-center gap-4 {{ selected()?.schema === schema() ? 'font-semibold' : '' }}\"\n>\n  <etri-circle-stack-icon\n    [type]=\"selected()?.schema === schema() ? 'solid' : 'outline'\"\n    class=\"size-5\"\n  />\n  <span>{{ schema() }}</span>\n</button>\n@if (!collapse()) {\n  <div class=\"pl-8 text-sm my-1\">\n    @for (table of tables(); track $index) {\n      <button\n        type=\"button\"\n        (click)=\"selectTable.emit({schema: schema(), table: table})\"\n        class=\"flex items-center gap-4 {{ selected()?.table === table ? 'font-semibold' : '' }}\"\n      >\n        <etri-table-cells-icon\n          [type]=\"selected()?.table === table ? 'solid' : 'outline'\"\n          class=\"size-4\"\n        />\n        <span class=\"whitespace-nowrap\">{{ table.name }}({{ table.type }})</span>\n      </button>\n    }\n  </div>\n}\n"
        },
        {
            "name": "DocumentMagnifyingGlassIconComponent",
            "id": "component-DocumentMagnifyingGlassIconComponent-05e9d00a31428ebcbf41412ade0db40d19e1fb13746a8701ed3d39eed9c63e275188b5f6bf2867e98e7642a38420b56e460ca6591640147e4cdf329647cdb829",
            "file": "src/app/components/atoms/icons/document-magnifying-glass-icon/document-magnifying-glass-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-document-magnifying-glass-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path d=\"M11.625 16.5a1.875 1.875 0 1 0 0-3.75 1.875 1.875 0 0 0 0 3.75Z\" />\n    <path fill-rule=\"evenodd\" d=\"M5.625 1.5H9a3.75 3.75 0 0 1 3.75 3.75v1.875c0 1.036.84 1.875 1.875 1.875H16.5a3.75 3.75 0 0 1 3.75 3.75v7.875c0 1.035-.84 1.875-1.875 1.875H5.625a1.875 1.875 0 0 1-1.875-1.875V3.375c0-1.036.84-1.875 1.875-1.875Zm6 16.5c.66 0 1.277-.19 1.797-.518l1.048 1.048a.75.75 0 0 0 1.06-1.06l-1.047-1.048A3.375 3.375 0 1 0 11.625 18Z\" clip-rule=\"evenodd\" />\n    <path d=\"M14.25 5.25a5.23 5.23 0 0 0-1.279-3.434 9.768 9.768 0 0 1 6.963 6.963A5.23 5.23 0 0 0 16.5 7.5h-1.875a.375.375 0 0 1-.375-.375V5.25Z\" />\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Zm3.75 11.625a2.625 2.625 0 1 1-5.25 0 2.625 2.625 0 0 1 5.25 0Z\" />\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-document-magnifying-glass-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path d=\"M11.625 16.5a1.875 1.875 0 1 0 0-3.75 1.875 1.875 0 0 0 0 3.75Z\" />\n        <path fill-rule=\"evenodd\" d=\"M5.625 1.5H9a3.75 3.75 0 0 1 3.75 3.75v1.875c0 1.036.84 1.875 1.875 1.875H16.5a3.75 3.75 0 0 1 3.75 3.75v7.875c0 1.035-.84 1.875-1.875 1.875H5.625a1.875 1.875 0 0 1-1.875-1.875V3.375c0-1.036.84-1.875 1.875-1.875Zm6 16.5c.66 0 1.277-.19 1.797-.518l1.048 1.048a.75.75 0 0 0 1.06-1.06l-1.047-1.048A3.375 3.375 0 1 0 11.625 18Z\" clip-rule=\"evenodd\" />\n        <path d=\"M14.25 5.25a5.23 5.23 0 0 0-1.279-3.434 9.768 9.768 0 0 1 6.963 6.963A5.23 5.23 0 0 0 16.5 7.5h-1.875a.375.375 0 0 1-.375-.375V5.25Z\" />\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Zm3.75 11.625a2.625 2.625 0 1 1-5.25 0 2.625 2.625 0 0 1 5.25 0Z\" />\n      </svg>\n    }\n  `\n})\nexport class DocumentMagnifyingGlassIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-8d644c1dc807bb034d8f8bb34b2d6fb401daf0511fd309431d5b5226555482901b72c568ee1c855817f96f98fabd24ccf9361b52d342d10d13caa39fef33d549",
            "file": "src/app/components/organisms/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-header",
            "styleUrls": [
                "header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'etri-header',\n  standalone: true,\n  styleUrls: ['header.component.scss'],\n  templateUrl: 'header.component.html',\n})\nexport class HeaderComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "header.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<header class=\"px-4 py-2 flex gap-4 items-center\">\n  <img src=\"images/logo.png\" class=\"h-6\" alt=\"로고\"/>\n  <h1>TrainDB Workbench</h1>\n</header>\n"
        },
        {
            "name": "HyperParameterInputsComponent",
            "id": "component-HyperParameterInputsComponent-c77a9ca49a74cc94b00d73b8bcb31acbffb52294fabf83c714383431915aed4cfb6695689c8c285095266c6ea8fc85c1cfc6fe4d22344f1e5a8a31570b060ad2",
            "file": "src/app/components/organisms/hyper-parameter-inputs/hyper-parameter-inputs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-hyper-parameter-inputs",
            "styleUrls": [
                "hyper-parameter-inputs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "hyper-parameter-inputs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hyperparameters",
                    "defaultValue": "input<HyperParameter[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "onChange",
                    "defaultValue": "output<TrainModelOption[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainModelOption[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "changeValue",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, effect, input, output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HyperParameter, TrainModelOption } from '../../../dto';\n\n@Component({\n  selector: 'etri-hyper-parameter-inputs',\n  standalone: true,\n  styleUrls: ['hyper-parameter-inputs.component.scss'],\n  imports: [\n    FormsModule\n  ],\n  templateUrl: 'hyper-parameter-inputs.component.html'\n})\nexport class HyperParameterInputsComponent {\n  hyperparameters = input<HyperParameter[]>([]);\n  value: TrainModelOption[] = [];\n  onChange = output<TrainModelOption[]>();\n\n  constructor() {\n    effect(() => {\n      this.value = this.hyperparameters().map(params => ({ name: params.name, value: '' }));\n      this.onChange.emit(this.value);\n    });\n  }\n\n  changeValue(i: number, value: string) {\n    this.value[i].value = value;\n    this.onChange.emit([...this.value]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply grid grid-cols-2 gap-y-4 gap-x-8;\n}\n",
                    "styleUrl": "hyper-parameter-inputs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "templateData": "@for (param of hyperparameters(); track param; let i = $index) {\n  <div>\n    <label\n      class=\"input input-bordered flex items-center gap-4 w-full max-w-md\"\n    >\n      <span class=\"font-semibold\">{{ param.name }}:</span>\n      <input\n        type=\"text\"\n        [ngModel]=\"value[i].value\"\n        (ngModelChange)=\"changeValue(i, $event)\"\n        placeholder=\"Input value, default: {{ param.default_value }}\"\n        class=\"grow\"\n      />\n    </label>\n    <span class=\"text-xs text-info -mt-1\">{{ param.description }}(Type: {{ param.type }})</span>\n  </div>\n}\n"
        },
        {
            "name": "ImportModelDialog",
            "id": "component-ImportModelDialog-75a9239264de996903a1879a10627aa3acdcbc70f85701fd759d937ceeef9538719d644ba61fb771980bae8dd4d6ae95d1315c59db7c61b0f99c9ebf709c955f",
            "file": "src/app/components/organisms/dialogs/import-model-dialog/import-model-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-import-model-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<etri-import-model-dialog_\n  (onClose)=\"dialogRef.close($event)\"\n/>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(DialogRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ImportModelDialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DialogRef } from '@angular/cdk/dialog';\nimport { Component, inject, output, signal } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { finalize } from 'rxjs';\nimport { ModelService, TraindbService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  selector: 'etri-import-model-dialog_',\n  standalone: true,\n  styleUrls: ['import-model-dialog.component.scss'],\n  templateUrl: 'import-model-dialog.component.html',\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    ReactiveFormsModule,\n    FormsModule,\n    LoadingComponent\n  ]\n})\nexport class ImportModelDialogComponent {\n  name: string | null = null;\n  file: File | null = null;\n  conflictName = false;\n  readonly onClose = output<boolean>();\n  readonly loading = signal(false);\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly modelService = inject(ModelService);\n\n  changeName(name: string) {\n    this.name = name;\n    if (this.conflictName) this.conflictName = false;\n  }\n\n  importModel() {\n    const traindbId = this.traindbService.currentId();\n    const name = this.name!.trim();\n    this.loading.set(true);\n    this.modelService.importModel(traindbId!, name, this.file!).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: () => this.onClose.emit(true),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName = true;\n          alert('이미 사용 중인 모델명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  onFileChange(event: any) {\n    this.file = event.target.files[0];\n  }\n}\n\n\n@Component({\n  imports: [\n    ImportModelDialogComponent\n  ],\n  selector: 'etri-import-model-dialog',\n  standalone: true,\n  template: `\n    <etri-import-model-dialog_\n      (onClose)=\"dialogRef.close($event)\"\n    />`\n})\nexport class ImportModelDialog {\n  readonly dialogRef = inject(DialogRef);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ImportModelDialogComponent",
            "id": "component-ImportModelDialogComponent-75a9239264de996903a1879a10627aa3acdcbc70f85701fd759d937ceeef9538719d644ba61fb771980bae8dd4d6ae95d1315c59db7c61b0f99c9ebf709c955f",
            "file": "src/app/components/organisms/dialogs/import-model-dialog/import-model-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-import-model-dialog_",
            "styleUrls": [
                "import-model-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "import-model-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "conflictName",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "file",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File | null",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "modelService",
                    "defaultValue": "inject(ModelService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "importModel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFileChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BaseDialogComponent",
                    "type": "component"
                },
                {
                    "name": "DialogHeaderDirective",
                    "type": "directive"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DialogRef } from '@angular/cdk/dialog';\nimport { Component, inject, output, signal } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { finalize } from 'rxjs';\nimport { ModelService, TraindbService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  selector: 'etri-import-model-dialog_',\n  standalone: true,\n  styleUrls: ['import-model-dialog.component.scss'],\n  templateUrl: 'import-model-dialog.component.html',\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    ReactiveFormsModule,\n    FormsModule,\n    LoadingComponent\n  ]\n})\nexport class ImportModelDialogComponent {\n  name: string | null = null;\n  file: File | null = null;\n  conflictName = false;\n  readonly onClose = output<boolean>();\n  readonly loading = signal(false);\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly modelService = inject(ModelService);\n\n  changeName(name: string) {\n    this.name = name;\n    if (this.conflictName) this.conflictName = false;\n  }\n\n  importModel() {\n    const traindbId = this.traindbService.currentId();\n    const name = this.name!.trim();\n    this.loading.set(true);\n    this.modelService.importModel(traindbId!, name, this.file!).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: () => this.onClose.emit(true),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName = true;\n          alert('이미 사용 중인 모델명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  onFileChange(event: any) {\n    this.file = event.target.files[0];\n  }\n}\n\n\n@Component({\n  imports: [\n    ImportModelDialogComponent\n  ],\n  selector: 'etri-import-model-dialog',\n  standalone: true,\n  template: `\n    <etri-import-model-dialog_\n      (onClose)=\"dialogRef.close($event)\"\n    />`\n})\nexport class ImportModelDialog {\n  readonly dialogRef = inject(DialogRef);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block w-[90vw] max-w-[600px] max-h-[95vh];\n}\n",
                    "styleUrl": "import-model-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<etri-base-dialog\n  (onClose)=\"onClose.emit(false)\"\n>\n  <h1 header etriDialogHeader>Import Model</h1>\n  <div class=\"flex flex-col items-start gap-4\">\n    <label\n      class=\"input input-bordered flex items-center gap-4 w-full max-w-md {{ conflictName ? 'input-error' : '' }}\"\n    >\n      Name:\n      <input\n        [ngModel]=\"name\"\n        (ngModelChange)=\"changeName($event)\"\n        type=\"text\"\n        placeholder=\"Input model name\"\n        class=\"grow\"\n      />\n    </label>\n\n    <input\n      type=\"file\"\n      (change)=\"onFileChange($event)\"\n      class=\"file-input file-input-bordered file-input-primary w-full max-w-xs\"/>\n  </div>\n  <div footer class=\"flex justify-end items-center gap-4\">\n    <button\n      type=\"button\"\n      (click)=\"onClose.emit(false)\"\n      class=\"btn btn-sm\"\n    >Cancel</button>\n    <button\n      type=\"button\"\n      [disabled]=\"loading() || !name?.trim() || !file\"\n      (click)=\"importModel()\"\n      class=\"btn btn-sm btn-primary text-white\"\n    >\n      @if (loading()) {\n        <etri-loading/>\n      } @else {\n        Import\n      }\n    </button>\n  </div>\n</etri-base-dialog>\n"
        },
        {
            "name": "ImportSynopsisDialog",
            "id": "component-ImportSynopsisDialog-4d1a3c948b8e8bee8cd534a414c0a11101cad9b37af8c087d9452968260d4a769e28dfa1f65b4dd22081b52cecb1c0304c1250cabea2fd8f368970516f76a233",
            "file": "src/app/components/organisms/dialogs/import-synopsis-dialog/import-synopsis-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-import-synopsis-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<etri-import-synopsis-dialog_\n  (onClose)=\"dialogRef.close($event)\"\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(DialogRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ImportSynopsisDialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DialogRef } from '@angular/cdk/dialog';\nimport { Component, inject, output, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { finalize } from 'rxjs';\nimport { SynopsisService, TraindbService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  selector: 'etri-import-synopsis-dialog_',\n  standalone: true,\n  styleUrls: ['import-synopsis-dialog.component.scss'],\n  templateUrl: 'import-synopsis-dialog.component.html',\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    FormsModule,\n    LoadingComponent\n  ]\n})\nexport class ImportSynopsisDialogComponent {\n  name: string | null = null;\n  file: File | null = null;\n  conflictName = false;\n  readonly onClose = output<boolean>();\n  readonly loading = signal(false);\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly synopsisService = inject(SynopsisService);\n\n  changeName(name: string) {\n    this.name = name;\n    if (this.conflictName) this.conflictName = false;\n  }\n\n  importSynopsis() {\n    const traindbId = this.traindbService.currentId();\n    const name = this.name!.trim();\n    this.loading.set(true);\n    this.synopsisService.importSynopsis(traindbId!, name, this.file!).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: () => this.onClose.emit(true),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName = true;\n          alert('이미 사용 중인 시놉시스명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  onFileChange(event: any) {\n    this.file = event.target.files[0];\n  }\n}\n\n@Component({\n  imports: [\n    ImportSynopsisDialogComponent\n  ],\n  selector: 'etri-import-synopsis-dialog',\n  standalone: true,\n  template: `\n    <etri-import-synopsis-dialog_\n      (onClose)=\"dialogRef.close($event)\"\n    />\n  `\n})\nexport class ImportSynopsisDialog {\n  readonly dialogRef = inject(DialogRef);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ImportSynopsisDialogComponent",
            "id": "component-ImportSynopsisDialogComponent-4d1a3c948b8e8bee8cd534a414c0a11101cad9b37af8c087d9452968260d4a769e28dfa1f65b4dd22081b52cecb1c0304c1250cabea2fd8f368970516f76a233",
            "file": "src/app/components/organisms/dialogs/import-synopsis-dialog/import-synopsis-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-import-synopsis-dialog_",
            "styleUrls": [
                "import-synopsis-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "import-synopsis-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "conflictName",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "file",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File | null",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "synopsisService",
                    "defaultValue": "inject(SynopsisService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "importSynopsis",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFileChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BaseDialogComponent",
                    "type": "component"
                },
                {
                    "name": "DialogHeaderDirective",
                    "type": "directive"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DialogRef } from '@angular/cdk/dialog';\nimport { Component, inject, output, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { finalize } from 'rxjs';\nimport { SynopsisService, TraindbService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  selector: 'etri-import-synopsis-dialog_',\n  standalone: true,\n  styleUrls: ['import-synopsis-dialog.component.scss'],\n  templateUrl: 'import-synopsis-dialog.component.html',\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    FormsModule,\n    LoadingComponent\n  ]\n})\nexport class ImportSynopsisDialogComponent {\n  name: string | null = null;\n  file: File | null = null;\n  conflictName = false;\n  readonly onClose = output<boolean>();\n  readonly loading = signal(false);\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly synopsisService = inject(SynopsisService);\n\n  changeName(name: string) {\n    this.name = name;\n    if (this.conflictName) this.conflictName = false;\n  }\n\n  importSynopsis() {\n    const traindbId = this.traindbService.currentId();\n    const name = this.name!.trim();\n    this.loading.set(true);\n    this.synopsisService.importSynopsis(traindbId!, name, this.file!).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: () => this.onClose.emit(true),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName = true;\n          alert('이미 사용 중인 시놉시스명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  onFileChange(event: any) {\n    this.file = event.target.files[0];\n  }\n}\n\n@Component({\n  imports: [\n    ImportSynopsisDialogComponent\n  ],\n  selector: 'etri-import-synopsis-dialog',\n  standalone: true,\n  template: `\n    <etri-import-synopsis-dialog_\n      (onClose)=\"dialogRef.close($event)\"\n    />\n  `\n})\nexport class ImportSynopsisDialog {\n  readonly dialogRef = inject(DialogRef);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block w-[90vw] max-w-[600px] max-h-[95vh];\n}\n",
                    "styleUrl": "import-synopsis-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<etri-base-dialog\n  (onClose)=\"onClose.emit(false)\"\n>\n  <h1 header etriDialogHeader>Import Synopsis</h1>\n  <div class=\"flex flex-col items-start gap-4\">\n    <label\n      class=\"input input-bordered flex items-center gap-4 w-full max-w-md {{ conflictName ? 'input-error' : '' }}\"\n    >\n      Name:\n      <input\n        [ngModel]=\"name\"\n        (ngModelChange)=\"changeName($event)\"\n        type=\"text\"\n        placeholder=\"Input synopsis name\"\n        class=\"grow\"\n      />\n    </label>\n    <input\n      type=\"file\"\n      (change)=\"onFileChange($event)\"\n      class=\"file-input file-input-bordered file-input-primary w-full max-w-xs\"/>\n  </div>\n  <div footer class=\"flex justify-end items-center gap-4\">\n    <button\n      type=\"button\"\n      (click)=\"onClose.emit(false)\"\n      class=\"btn btn-sm\"\n    >Cancel</button>\n    <button\n      type=\"button\"\n      [disabled]=\"loading() || !name?.trim() || !file\"\n      (click)=\"importSynopsis()\"\n      class=\"btn btn-sm btn-primary text-white\"\n    >\n      @if (loading()) {\n        <etri-loading/>\n      } @else {\n        Import\n      }\n    </button>\n  </div>\n</etri-base-dialog>\n"
        },
        {
            "name": "LineChartComponent",
            "id": "component-LineChartComponent-28f50bd02b7e1d505d7dfa68db70232ea90fe8698361803291eeeb27b4632c0a66d9501b08a2873fc8a6328000952195509269ac5ec77be4b67dd4e97915ac8f",
            "file": "src/app/components/organisms/charts/line-chart/line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-line-chart",
            "styleUrls": [
                "line-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "line-chart.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "height",
                    "defaultValue": "'500px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartRef",
                    "defaultValue": "viewChild<ElementRef<HTMLDivElement>>('chartRef')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "MAX",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "MIN",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "svg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "d3.Selection<SVGSVGElement |  |  | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "input<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "d3.Selection<HTMLDivElement |  |  | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "x",
                    "defaultValue": "input<(string | number)[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "xAxisLabel",
                    "defaultValue": "input<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "y",
                    "defaultValue": "input<number[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "yAxisLabel",
                    "defaultValue": "input<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "createChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "updateChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45
                }
            ],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component, effect,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  input,\n  viewChild\n} from '@angular/core';\nimport * as d3 from 'd3';\n\n@Component({\n  selector: 'etri-line-chart',\n  standalone: true,\n  styleUrls: ['line-chart.component.scss'],\n  templateUrl: 'line-chart.component.html',\n})\nexport class LineChartComponent implements AfterViewInit {\n  x = input<(string | number)[]>([]);\n  y = input<number[]>([]);\n  xAxisLabel = input<string | null>(null);\n  yAxisLabel = input<string | null>(null);\n  title = input<string | null>(null);\n  chartRef = viewChild<ElementRef<HTMLDivElement>>('chartRef');\n  @HostBinding('style.height') @Input() height = '500px';\n\n  private readonly MAX = 10;\n  private readonly MIN = 0;\n  private svg!: d3.Selection<SVGSVGElement, unknown, null, undefined>;\n  private tooltip!: d3.Selection<HTMLDivElement, unknown, null, undefined>;\n\n  constructor() {\n    effect(() => {\n      const x = this.x();\n      const y = this.y();\n      const xAxisLabel = this.xAxisLabel();\n      const yAxisLabel = this.yAxisLabel();\n      console.log(xAxisLabel, ':', x);\n      console.log(yAxisLabel, ':', y);\n      this.updateChart();\n    });\n  }\n\n  @HostListener('window:resize') onResize() {\n    this.updateChart();\n  }\n\n  ngAfterViewInit() {\n    this.createChart();\n  }\n\n  private createChart() {\n    const element = this.chartRef()!.nativeElement;\n    this.svg = d3.select(element).append('svg');\n    this.tooltip = d3.select(element)\n      .append('div')\n      .style('position', 'absolute')\n      .style('display', 'flex')\n      .style('align-items', 'center')\n      .style('justify-content', 'center')\n      .style('text-align', 'center')\n      .style('width', 'fit-content')\n      .style('height', 'fit-content')\n      .style('padding', '0.5rem')\n      .style('border-radius', '0.5rem')\n      .style('color', 'white')\n      .style('background-color', 'rgba(0, 0, 0, 0.8)')\n      .style('box-shadow', '2px 2px 2px rgba(0, 0, 0. 0.5)')\n      .style('pointer-events', 'none')\n      .style('opacity', 0);\n    this.updateChart();\n  }\n\n  private updateChart() {\n    const element = this.chartRef()!.nativeElement;\n    const width = element.offsetWidth;\n    const height = element.offsetHeight;\n    const margin = { top: 60, right: 20, bottom: 70, left: 90 };\n\n    this.svg\n      .attr('width', width)\n      .attr('height', height);\n\n    const x = d3.scaleLinear()\n      .domain([0, this.x().length - 1])\n      .range([margin.left, width - margin.right]);\n\n    const y = d3.scaleLinear()\n      .domain([d3.min(this.y()) ?? this.MIN, d3.max(this.y()) ?? this.MAX])\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = (g: any) => g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x).ticks(this.x().length - 1).tickFormat((i: any) => String(this.x()[i])));\n\n    const yAxis = (g: any) => g\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y));\n\n    const xGrid = (g: any) => g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x)\n        .tickSize(-height + margin.top + margin.bottom)\n        .tickFormat('' as any)\n      )\n      .call((g: any) => g.selectAll('.tick line')\n        .attr('stroke', 'lightgrey')\n        .attr('stroke-opacity', 0.7))\n      .call((g: any) => g.select('.domain').remove());\n\n    const yGrid = (g: any) => g\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y)\n        .tickSize(-width + margin.left + margin.right)\n        .tickFormat('' as any)\n      )\n      .call((g: any) => g.selectAll('.tick line')\n        .attr('stroke', 'lightgrey')\n        .attr('stroke-opacity', 0.7))\n      .call((g: any) => g.select('.domain').remove());\n\n    this.svg.selectAll('*').remove();\n\n    // 그리드를 먼저 그립니다.\n    this.svg.append('g').call(xGrid);\n    this.svg.append('g').call(yGrid);\n\n    // 라인 생성\n    const line = d3.line<any>()\n      .x((d, i) => x(i))\n      .y(d => y(d));\n\n    const path = this.svg.append('path')\n      .datum(this.y())\n      .attr('fill', 'none')\n      .attr('stroke', 'steelblue')\n      .attr('stroke-width', 2)\n      .attr('d', line);\n\n    // 애니메이션 추가\n    const totalLength = path.node()?.getTotalLength();\n    if (totalLength) {\n      path\n        .attr('stroke-dasharray', `${totalLength} ${totalLength}`)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .duration(2000)\n        .attr('stroke-dashoffset', 0);\n    }\n\n    this.svg.append('g').call(xAxis);\n\n    if (this.xAxisLabel()) {\n      this.svg.append('text')\n        .attr('class', 'x label')\n        .attr('text-anchor', 'middle')\n        .attr('x', width / 2)\n        .attr('y', height - margin.bottom + 40) // x축 레이블 위치 조정\n        .text(this.xAxisLabel());\n    }\n\n    this.svg.append('g').call(yAxis);\n\n    if (this.yAxisLabel()) {\n      this.svg.append('text')\n        .attr('class', 'y label')\n        .attr('text-anchor', 'middle')\n        .attr('transform', 'rotate(-90)')\n        .attr('x', -height / 2)\n        .attr('y', margin.left - 60) // y축 레이블 위치 조정\n        .text(this.yAxisLabel());\n    }\n\n    if (this.title()) {\n      this.svg.append('text')\n        .attr('x', width / 2)\n        .attr('y', margin.top / 2)\n        .attr('text-anchor', 'middle')\n        .attr('class', 'chart-title')\n        .text(this.title());\n    }\n\n    this.svg.selectAll('circle')\n      .data(this.y())\n      .enter()\n      .append('circle')\n      .attr('cx', (d, i) => x(i))\n      .attr('cy', d => y(d))\n      .attr('r', 3)\n      .attr('fill', 'steelblue')\n      .on('mouseover', (event, d: any) => {\n        d3.select(event.currentTarget)\n          .attr('fill', 'orange')\n          .attr('r', 5);\n        this.tooltip.transition()\n          .duration(200)\n          .style('opacity', .9);\n        this.tooltip.html(`x: ${this.x()[this.y().indexOf(d)]}<br/>y: ${d}`)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 30) + 'px');\n      })\n      .on('mouseout', (event) => {\n        d3.select(event.currentTarget)\n          .attr('fill', 'steelblue')\n          .attr('r', 3);\n        this.tooltip.transition()\n          .duration(500)\n          .style('opacity', 0);\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block w-full;\n}\n",
                    "styleUrl": "line-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 31
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div #chartRef class=\"w-full h-full relative\"></div>\n"
        },
        {
            "name": "LoadingComponent",
            "id": "component-LoadingComponent-827c32727e10065070b71a47bea7f1565c6d9ebc75942f5d3b04452abab2f5a19b0db5e1f2b0f5fde9b6eaf9405f9500087e7ba1d7fa1226a50a8538216a7361",
            "file": "src/app/components/atoms/loading/loading.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-loading",
            "styleUrls": [],
            "styles": [],
            "template": "<span class=\"loading loading-bars {{sizeClass()}}\"></span>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "size",
                    "defaultValue": "input<'xs' | 'sm' | 'md'>('md')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"xs\" | \"sm\" | \"md\">",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "sizeClass",
                    "defaultValue": "computed(() => {\n    switch (this.size()) {\n      case 'xs':\n        return 'loading-xs';\n      case 'sm':\n        return 'loading-sm';\n      default:\n        return 'loading-md';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input, InputSignal } from '@angular/core';\n\n@Component({\n  host: {\n    class: 'flex justify-center'\n  },\n  selector: 'etri-loading',\n  standalone: true,\n  template: `<span class=\"loading loading-bars {{sizeClass()}}\"></span>`\n})\nexport class LoadingComponent {\n  size: InputSignal<'xs' | 'sm' | 'md'> = input<'xs' | 'sm' | 'md'>('md');\n  readonly sizeClass = computed(() => {\n    switch (this.size()) {\n      case 'xs':\n        return 'loading-xs';\n      case 'sm':\n        return 'loading-sm';\n      default:\n        return 'loading-md';\n    }\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MagnifyingGlassIconComponent",
            "id": "component-MagnifyingGlassIconComponent-06b865d7273753835cef64162ea0a9e82f8757073bb0ff94174d5018eef59d34095b15998a26cd6fe75f8fc9be0fbc55265bd8f80d3ea44ac10992a973ecb11c",
            "file": "src/app/components/atoms/icons/magnifying-glass-icon/magnifying-glass-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-magnifying-glass-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path fill-rule=\"evenodd\"\n          d=\"M10.5 3.75a6.75 6.75 0 1 0 0 13.5 6.75 6.75 0 0 0 0-13.5ZM2.25 10.5a8.25 8.25 0 1 1 14.59 5.28l4.69 4.69a.75.75 0 1 1-1.06 1.06l-4.69-4.69A8.25 8.25 0 0 1 2.25 10.5Z\"\n          clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-magnifying-glass-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path fill-rule=\"evenodd\"\n              d=\"M10.5 3.75a6.75 6.75 0 1 0 0 13.5 6.75 6.75 0 0 0 0-13.5ZM2.25 10.5a8.25 8.25 0 1 1 14.59 5.28l4.69 4.69a.75.75 0 1 1-1.06 1.06l-4.69-4.69A8.25 8.25 0 0 1 2.25 10.5Z\"\n              clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\"/>\n      </svg>\n    }\n  `\n})\nexport class MagnifyingGlassIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "MakeChartDialog",
            "id": "component-MakeChartDialog-47177ca6e1a59c53baaf83f28552f7e9f98f958977eb4fa6168e4fa69d951c62d7c752445615415e14d14f2c964912fcbe9c6db2c0bd94dbd30ad8cb4543fd83",
            "file": "src/app/components/organisms/dialogs/make-chart-dialog/make-chart-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-make-chart-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<etri-make-chart-dialog_\n  [data]=\"data\"\n  (onClose)=\"dialogRef.close($event)\"\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "inject(DIALOG_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RunQuery",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(DialogRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MakeChartDialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { UpperCasePipe } from '@angular/common';\nimport { Component, computed, inject, model, output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CHART_TYPES, ChartType, DashboardItem, RunQuery } from '../../../../dto';\nimport { DialogHeaderDirective } from '../../../atoms';\nimport { ChartItemComponent } from '../../dashboard';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  selector: 'etri-make-chart-dialog_',\n  standalone: true,\n  styleUrls: ['make-chart-dialog.component.scss'],\n  templateUrl: 'make-chart-dialog.component.html',\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    FormsModule,\n    UpperCasePipe,\n    ChartItemComponent\n  ]\n})\nexport class MakeChartDialogComponent {\n  fields: any = {};\n  readonly data = model.required<RunQuery>();\n  readonly chartType = model<ChartType>(ChartType.BAR);\n  readonly columns = computed(() => this.data().columns);\n  readonly types = computed(() => this.data().types);\n  readonly onClose = output<DashboardItem | undefined>();\n  readonly ChartType = ChartType;\n  readonly CHART_TYPES = CHART_TYPES;\n  readonly isChartItem = computed(() => [ChartType.BAR, ChartType.LINE, ChartType.SCATTER, ChartType.PIE].includes(this.chartType()));\n\n  changeFields(fields: any) {\n    this.fields = fields;\n  }\n\n  emitDashboardItem() {\n    this.onClose.emit({\n      type: this.chartType(),\n      ...this.fields,\n    })\n  }\n}\n\n@Component({\n  selector: 'etri-make-chart-dialog',\n  standalone: true,\n  imports: [\n    MakeChartDialogComponent\n  ],\n  template: `\n    <etri-make-chart-dialog_\n      [data]=\"data\"\n      (onClose)=\"dialogRef.close($event)\"\n    />\n  `\n})\nexport class MakeChartDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: RunQuery = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MakeChartDialogComponent",
            "id": "component-MakeChartDialogComponent-47177ca6e1a59c53baaf83f28552f7e9f98f958977eb4fa6168e4fa69d951c62d7c752445615415e14d14f2c964912fcbe9c6db2c0bd94dbd30ad8cb4543fd83",
            "file": "src/app/components/organisms/dialogs/make-chart-dialog/make-chart-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-make-chart-dialog_",
            "styleUrls": [
                "make-chart-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "make-chart-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "CHART_TYPES",
                    "defaultValue": "CHART_TYPES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "chartType",
                    "defaultValue": "model<ChartType>(ChartType.BAR)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "ChartType",
                    "defaultValue": "ChartType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "columns",
                    "defaultValue": "computed(() => this.data().columns)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "fields",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "isChartItem",
                    "defaultValue": "computed(() => [ChartType.BAR, ChartType.LINE, ChartType.SCATTER, ChartType.PIE].includes(this.chartType()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "onClose",
                    "defaultValue": "output<DashboardItem | undefined>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "types",
                    "defaultValue": "computed(() => this.data().types)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFields",
                    "args": [
                        {
                            "name": "fields",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitDashboardItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BaseDialogComponent",
                    "type": "component"
                },
                {
                    "name": "DialogHeaderDirective",
                    "type": "directive"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "UpperCasePipe",
                    "type": "pipe"
                },
                {
                    "name": "ChartItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { UpperCasePipe } from '@angular/common';\nimport { Component, computed, inject, model, output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CHART_TYPES, ChartType, DashboardItem, RunQuery } from '../../../../dto';\nimport { DialogHeaderDirective } from '../../../atoms';\nimport { ChartItemComponent } from '../../dashboard';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  selector: 'etri-make-chart-dialog_',\n  standalone: true,\n  styleUrls: ['make-chart-dialog.component.scss'],\n  templateUrl: 'make-chart-dialog.component.html',\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    FormsModule,\n    UpperCasePipe,\n    ChartItemComponent\n  ]\n})\nexport class MakeChartDialogComponent {\n  fields: any = {};\n  readonly data = model.required<RunQuery>();\n  readonly chartType = model<ChartType>(ChartType.BAR);\n  readonly columns = computed(() => this.data().columns);\n  readonly types = computed(() => this.data().types);\n  readonly onClose = output<DashboardItem | undefined>();\n  readonly ChartType = ChartType;\n  readonly CHART_TYPES = CHART_TYPES;\n  readonly isChartItem = computed(() => [ChartType.BAR, ChartType.LINE, ChartType.SCATTER, ChartType.PIE].includes(this.chartType()));\n\n  changeFields(fields: any) {\n    this.fields = fields;\n  }\n\n  emitDashboardItem() {\n    this.onClose.emit({\n      type: this.chartType(),\n      ...this.fields,\n    })\n  }\n}\n\n@Component({\n  selector: 'etri-make-chart-dialog',\n  standalone: true,\n  imports: [\n    MakeChartDialogComponent\n  ],\n  template: `\n    <etri-make-chart-dialog_\n      [data]=\"data\"\n      (onClose)=\"dialogRef.close($event)\"\n    />\n  `\n})\nexport class MakeChartDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: RunQuery = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "make-chart-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<etri-base-dialog\n  (onClose)=\"onClose.emit(undefined)\"\n>\n  <h1 header etriDialogHeader>Add Visualization</h1>\n  <div class=\"space-y-4\">\n    <label class=\"flex items-center gap-4 w-full\">\n      <span>Select Visualization</span>\n      <select\n        [(ngModel)]=\"chartType\"\n        class=\"select select-sm select-bordered max-w-[300px] grow\"\n      >\n        @for (type of CHART_TYPES; track type) {\n          <option [ngValue]=\"type\">{{ type[0] | uppercase }}{{ type.slice(1) }} Chart</option>\n        }\n      </select>\n    </label>\n\n    @if (isChartItem()) {\n      <etri-chart-item\n        [columns]=\"columns()\"\n        [types]=\"types()\"\n        (onChange)=\"changeFields($event)\"\n      />\n    }\n  </div>\n  <div footer class=\"flex justify-end gap-4\">\n    <button\n      type=\"button\"\n      (click)=\"onClose.emit(undefined)\"\n      class=\"btn btn-sm w-[80px]\"\n    >취소</button>\n    <button\n      type=\"button\"\n      (click)=\"emitDashboardItem()\"\n      class=\"btn btn-sm btn-primary w-[80px]\"\n    >저장</button>\n  </div>\n</etri-base-dialog>\n"
        },
        {
            "name": "ModelDialog",
            "id": "component-ModelDialog-95b99279d31854cc1a9a630aba851cea1e2430c49536cf194ba1c5525327c54e1f3bd4c146fd9c0b22b26557c96f348ad2b0155159b666d5bd186f541dfca936",
            "file": "src/app/components/organisms/dialogs/model-dialog/model-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-model-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<etri-model-dialog_\n  [model]=\"data\"\n  (onClose)=\"dialogRef.close()\"\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "inject(DIALOG_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Model",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(DialogRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ModelDialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { DatePipe, DecimalPipe, PercentPipe } from '@angular/common';\nimport { Component, computed, effect, inject, input, output } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport { Model } from '../../../../dto';\nimport { TraindbService } from '../../../../services';\nimport { ArrowDownTrayIconComponent, DialogHeaderDirective } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    PercentPipe,\n    DecimalPipe,\n    DatePipe,\n    ArrowDownTrayIconComponent\n  ],\n  selector: 'etri-model-dialog_',\n  standalone: true,\n  styleUrls: ['model-dialog.component.scss'],\n  templateUrl: 'model-dialog.component.html'\n})\nexport class ModelDialogComponent {\n  downloadLink: string | null = null;\n  readonly model = input.required<Model>();\n  readonly hyperParameters = computed(() => {\n    const options = this.model().options;\n    return Object.keys(options).map(key => ({ name: key, value: options[key] }));\n  });\n  readonly onClose = output();\n\n  private readonly traindbService = inject(TraindbService);\n\n  constructor() {\n    effect(() => {\n      const model = this.model();\n      const traindbId = this.traindbService.currentId();\n      if (model) this.downloadLink = environment.apiHost + `/models/${model.name}/export?traindb_id=${traindbId}`;\n    });\n  }\n}\n\n\n@Component({\n  imports: [\n    ModelDialogComponent\n  ],\n  selector: 'etri-model-dialog',\n  standalone: true,\n  template: `\n    <etri-model-dialog_\n      [model]=\"data\"\n      (onClose)=\"dialogRef.close()\"\n    />\n  `\n})\nexport class ModelDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: Model = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ModelDialogComponent",
            "id": "component-ModelDialogComponent-95b99279d31854cc1a9a630aba851cea1e2430c49536cf194ba1c5525327c54e1f3bd4c146fd9c0b22b26557c96f348ad2b0155159b666d5bd186f541dfca936",
            "file": "src/app/components/organisms/dialogs/model-dialog/model-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-model-dialog_",
            "styleUrls": [
                "model-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "model-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hyperParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "downloadLink",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "hyperParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BaseDialogComponent",
                    "type": "component"
                },
                {
                    "name": "DialogHeaderDirective",
                    "type": "directive"
                },
                {
                    "name": "PercentPipe",
                    "type": "pipe"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                },
                {
                    "name": "DatePipe",
                    "type": "pipe"
                },
                {
                    "name": "ArrowDownTrayIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { DatePipe, DecimalPipe, PercentPipe } from '@angular/common';\nimport { Component, computed, effect, inject, input, output } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport { Model } from '../../../../dto';\nimport { TraindbService } from '../../../../services';\nimport { ArrowDownTrayIconComponent, DialogHeaderDirective } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    PercentPipe,\n    DecimalPipe,\n    DatePipe,\n    ArrowDownTrayIconComponent\n  ],\n  selector: 'etri-model-dialog_',\n  standalone: true,\n  styleUrls: ['model-dialog.component.scss'],\n  templateUrl: 'model-dialog.component.html'\n})\nexport class ModelDialogComponent {\n  downloadLink: string | null = null;\n  readonly model = input.required<Model>();\n  readonly hyperParameters = computed(() => {\n    const options = this.model().options;\n    return Object.keys(options).map(key => ({ name: key, value: options[key] }));\n  });\n  readonly onClose = output();\n\n  private readonly traindbService = inject(TraindbService);\n\n  constructor() {\n    effect(() => {\n      const model = this.model();\n      const traindbId = this.traindbService.currentId();\n      if (model) this.downloadLink = environment.apiHost + `/models/${model.name}/export?traindb_id=${traindbId}`;\n    });\n  }\n}\n\n\n@Component({\n  imports: [\n    ModelDialogComponent\n  ],\n  selector: 'etri-model-dialog',\n  standalone: true,\n  template: `\n    <etri-model-dialog_\n      [model]=\"data\"\n      (onClose)=\"dialogRef.close()\"\n    />\n  `\n})\nexport class ModelDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: Model = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block w-[90vw] max-w-[600px] max-h-[90vh] overflow-auto;\n}\n",
                    "styleUrl": "model-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 33
            },
            "extends": [],
            "templateData": "<etri-base-dialog\n  (onClose)=\"onClose.emit()\"\n  [hiddenFooter]=\"true\"\n>\n  <h1 header etriDialogHeader>Model Information</h1>\n\n  <div class=\"space-y-6\">\n    <div class=\"flex flex-col gap-4 p-4 border border-zinc-300\">\n      <div class=\"flex gap-4 items-center text-lg\">\n        <span class=\"text-zinc-600\">Model Name: </span>\n        <span class=\"font-semibold\">{{ model().name }}</span>\n        @if (downloadLink) {\n          <a\n            [href]=\"downloadLink\"\n            class=\"btn btn-info btn-xs rounded-none text-white no-underline\"\n          >\n            <etri-arrow-down-tray-icon type=\"solid\" class=\"size-4\"/>\n            Export\n          </a>\n        }\n      </div>\n      <div class=\"flex gap-4 items-center text-lg\">\n        <span class=\"text-zinc-600\">Status: </span>\n        <span\n          class=\"badge {{ model().status === 'ENABLED' ? 'badge-primary text-white' : 'text-zinc-500' }}\"\n        >{{ model().status }}</span>\n      </div>\n    </div>\n\n    <div class=\"flex flex-col gap-2 p-4 border border-zinc-300\">\n      <table class=\"table table-sm\">\n        <tbody>\n        <tr>\n          <th>Model Type</th>\n          <td>{{ model().modeltype }}</td>\n        </tr>\n        <tr>\n          <th>Schema</th>\n          <td>{{ model().schema }}</td>\n        </tr>\n        <tr>\n          <th>Table</th>\n          <td>{{ model().table }}</td>\n        </tr>\n        <tr>\n          <th>Columns</th>\n          <td>\n            <div class=\"flex gap-2 flex-wrap\">\n              @for (col of model().columns; track col) {\n                <span class=\"py-px px-1 text-xs border border-zinc-300\">{{ col }}</span>\n              }\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <th>Training Samples</th>\n          <td>\n            {{ model().trained_rows / model().table_rows | percent }}\n            <span class=\"text-zinc-600 text-sm\">\n              ({{ model().trained_rows | number }} / {{ model().table_rows | number }})\n            </span>\n          </td>\n        </tr>\n        <tr>\n          <th>Training Server</th>\n          <td>{{ model().server || '-' }}</td>\n        </tr>\n        <tr>\n          <th>Training Start Time</th>\n          <td>{{ model().start ? (model().start | date: 'yyyy년 M월 d일 HH시 mm분') : '-' }}</td>\n        </tr>\n        <tr>\n          <th>Training Status</th>\n          <td>\n            @if (model().training_status) {\n              <span\n                class=\"badge badge-sm text-white {{ model().training_status === 'FINISHED' ? 'badge-primary' : 'badge-warning' }}\"\n              >{{ model().training_status }}</span>\n            } @else {\n              <span>-</span>\n            }\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"flex flex-col gap-2 p-4 border border-zinc-300\">\n      <h3 class=\"text-sm font-semibold\">Hyper Parameters</h3>\n      <table class=\"table table-sm\">\n        <tbody>\n          @for (param of hyperParameters(); track param) {\n            <tr>\n              <th>{{ param.name }}:</th>\n              <td>{{ param.value }}</td>\n            </tr>\n          }\n        </tbody>\n      </table>\n    </div>\n  </div>\n</etri-base-dialog>\n"
        },
        {
            "name": "ModelListPageComponent",
            "id": "component-ModelListPageComponent-9672ba58604def8004e405a7c7d91f5ad380170c0105c15a258258feee2d3743cf005d9dd499bb55187e37e156313cf09d5f6e497b750cfc84dbfec2ca554f84",
            "file": "src/app/routes/models/pages/model-list-page/model-list-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-model-list-page",
            "styleUrls": [
                "model-list-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "model-list-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "defaultValue": "inject(Dialog)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "keyword",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "computed(() => this.modelService.loading())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "modelList",
                    "defaultValue": "signal([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<Model[]>",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "modelService",
                    "defaultValue": "inject(ModelService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteModel",
                    "args": [
                        {
                            "name": "model",
                            "type": "Model",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "Model",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "importModel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadModels",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showDetail",
                    "args": [
                        {
                            "name": "model",
                            "type": "Model",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "Model",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateModel",
                    "args": [
                        {
                            "name": "model",
                            "type": "Model",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "Model",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "PatternFilterPipe",
                    "type": "pipe"
                },
                {
                    "name": "SearchInputComponent",
                    "type": "component"
                },
                {
                    "name": "IpAnonymizationPipe",
                    "type": "pipe"
                },
                {
                    "name": "TrashIconComponent",
                    "type": "component"
                },
                {
                    "name": "PencilSquareIconComponent",
                    "type": "component"
                },
                {
                    "name": "DocumentMagnifyingGlassIconComponent",
                    "type": "component"
                },
                {
                    "name": "ArrowUpTrayIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Dialog } from '@angular/cdk/dialog';\nimport { DecimalPipe, JsonPipe } from '@angular/common';\nimport { Component, computed, inject, signal, WritableSignal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport {\n  ArrowUpTrayIconComponent,\n  DocumentMagnifyingGlassIconComponent, ImportModelDialog,\n  LoadingComponent,\n  ModelDialog,\n  PencilSquareIconComponent,\n  SearchInputComponent,\n  TrashIconComponent,\n  UpdateModelDialog\n} from '../../../../components';\nimport { Model } from '../../../../dto';\nimport { IpAnonymizationPipe, PatternFilterPipe } from '../../../../pipes';\nimport { ModelService, TraindbService } from '../../../../services';\n\n@Component({\n  imports: [\n    RouterLink,\n    DecimalPipe,\n    LoadingComponent,\n    JsonPipe,\n    PatternFilterPipe,\n    SearchInputComponent,\n    IpAnonymizationPipe,\n    TrashIconComponent,\n    PencilSquareIconComponent,\n    DocumentMagnifyingGlassIconComponent,\n    ArrowUpTrayIconComponent,\n  ],\n  selector: 'etri-model-list-page',\n  standalone: true,\n  styleUrls: ['model-list-page.component.scss'],\n  templateUrl: 'model-list-page.component.html'\n})\nexport class ModelListPageComponent {\n  readonly modelList: WritableSignal<Model[]> = signal([]);\n  readonly loading = computed(() => this.modelService.loading());\n  readonly keyword = signal('');\n  private readonly traindbService = inject(TraindbService);\n  private readonly modelService = inject(ModelService);\n  private readonly dialog = inject(Dialog);\n\n  constructor() {\n    this.loadModels();\n  }\n\n  updateModel(model: Model) {\n    const dialog = this.dialog.open(UpdateModelDialog, {\n      data: model\n    });\n    dialog.closed.subscribe(res => {\n      if (res) this.loadModels();\n    });\n  }\n\n  deleteModel(model: Model) {\n    if (!confirm(`${model.name}을 삭제하시겠습니까?`)) return;\n    const traindbId = this.traindbService.currentId();\n    this.modelService.deleteModel(traindbId!, model.name).subscribe({\n      next: () => this.loadModels(),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  showDetail(model: Model) {\n    this.dialog.open(ModelDialog, { data: model });\n  }\n\n  importModel() {\n    const dialog = this.dialog.open(ImportModelDialog);\n    dialog.closed.subscribe(res => {\n      if (res) this.loadModels();\n    });\n  }\n\n  private loadModels() {\n    const traindbId = this.traindbService.currentId();\n    this.modelService.searchModels(traindbId!).subscribe({\n      next: list => this.modelList.set(list),\n      error: console.error,\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page;\n}\n",
                    "styleUrl": "model-list-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 44
            },
            "extends": [],
            "templateData": "<h1>Models</h1>\n\n<section class=\"section elevate flex gap-4\">\n  <etri-search-input\n    class=\"inline-block grow max-w-lg\"\n    (onKeyword)=\"keyword.set($event)\"/>\n  <div class=\"ml-auto flex gap-2\">\n    <button\n      type=\"button\"\n      (click)=\"importModel()\"\n      class=\"btn btn-info btn-sm text-white rounded-none\"\n    >\n      <etri-arrow-up-tray-icon type=\"solid\" class=\"size-4\"/>\n      Import\n    </button>\n    <button\n      type=\"button\"\n      routerLink=\"/models/train\"\n      class=\"btn btn-primary btn-sm text-white rounded-none\">New\n    </button>\n  </div>\n</section>\n\n<section class=\"section elevate p-0 overflow-auto\">\n  <table class=\"table\">\n    <!-- head -->\n    <thead class=\"sticky top-0\">\n    <tr>\n      <th class=\"text-right\">#</th>\n      <th class=\"text-left\">Status</th>\n      <th class=\"text-left\">Name</th>\n      <th class=\"text-left\">Model Type</th>\n      <th class=\"text-left\">Schema</th>\n      <th class=\"text-left\">Table</th>\n      <th class=\"text-left\">Server</th>\n      <th class=\"text-left\">Training Rows</th>\n      <th class=\"text-left\">Training</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n      @for (model of modelList() | patternFilter:keyword():'name'; track $index) {\n        <tr class=\"even:bg-zinc-50 hover:bg-zinc-100\">\n          <th class=\"text-right\">{{ $index + 1 | number }}</th>\n          <td>{{ model.status }}</td>\n          <td>{{ model.name }}</td>\n          <td>{{ model.modeltype }}</td>\n          <td>{{ model.schema }}</td>\n          <td>{{ model.table }}</td>\n          <td>{{ (model.server | ipAnonymization) || '-' }}</td>\n          <td>{{ model.trained_rows | number }} / {{ model.table_rows | number }}</td>\n          <td>\n            @if (model.training_status) {\n              <div\n                class=\"badge {{ model.training_status === 'TRAINING' ? 'badge-warning' : '' }}\">{{ model.training_status }}\n              </div>\n            } @else {\n              <span>-</span>\n            }\n          </td>\n          <td class=\"flex gap-2 py-2 px-4\">\n            <button\n              type=\"button\"\n              (click)=\"deleteModel(model)\"\n              class=\"btn btn-warning btn-xs rounded-none text-white\"\n            >\n              <etri-trash-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n            <button\n              type=\"button\"\n              (click)=\"updateModel(model)\"\n              class=\"btn btn-secondary btn-xs rounded-none text-white\"\n            >\n              <etri-pencil-square-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n            <button\n              type=\"button\"\n              (click)=\"showDetail(model)\"\n              class=\"btn btn-primary btn-xs rounded-none text-white\"\n            >\n              <etri-document-magnifying-glass-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n          </td>\n        </tr>\n      } @empty {\n        <tr>\n          @if (loading()) {\n            <td colspan=\"11\">\n              <div class=\"flex flex-col gap-2 items-center py-4\">\n                <etri-loading/>\n                <span class=\"text-zinc-500 text-xs\">Loading...</span>\n              </div>\n            </td>\n          } @else {\n            <td class=\"text-zinc-500 text-center\" colspan=\"11\">결과가 없습니다.</td>\n          }\n        </tr>\n      }\n    </tbody>\n  </table>\n</section>\n"
        },
        {
            "name": "ModeltypeFormPageComponent",
            "id": "component-ModeltypeFormPageComponent-de0ed9458c068e1a89a9b631e8cecb23e3e7fa361278ec89b8cd820d2710cb935e73d514c3c4d1d4a8949c3a15f22f6f96248863adea30efe0de749818288685",
            "file": "src/app/routes/modeltypes/pages/modeltype-form-page/modeltype-form-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-modeltype-form-page",
            "styleUrls": [
                "modeltype-form-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "modeltype-form-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "conflictName",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "modeltypeService",
                    "defaultValue": "inject(ModeltypeService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { finalize, Subscription } from 'rxjs';\nimport { LoadingComponent } from '../../../../components';\nimport { ModeltypeService, TraindbService } from '../../../../services';\n\n@Component({\n  selector: 'etri-modeltype-form-page',\n  standalone: true,\n  styleUrls: ['modeltype-form-page.component.scss'],\n  templateUrl: 'modeltype-form-page.component.html',\n  imports: [\n    FormsModule,\n    LoadingComponent,\n    RouterLink,\n    ReactiveFormsModule\n  ]\n})\nexport class ModeltypeFormPageComponent implements OnInit, OnDestroy {\n  loading = false;\n  conflictName = false;\n  readonly formGroup: FormGroup;\n  private readonly traindbService = inject(TraindbService);\n  private readonly modeltypeService = inject(ModeltypeService);\n  private readonly router = inject(Router);\n  private readonly subscription = new Subscription();\n\n  constructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      name: [null, [Validators.required]],\n      category: [null, [Validators.required]],\n      location: [null, [Validators.required]],\n      className: [null, [Validators.required]],\n      uri: [null, [Validators.required]]\n    });\n  }\n\n  submit() {\n    const dto = this.formGroup.getRawValue();\n    const traindbId = this.traindbService.currentId();\n    if (!traindbId) return;\n    this.loading = true;\n    this.modeltypeService.createModeltype(traindbId, dto).pipe(\n      finalize(() => this.loading = false),\n    ).subscribe({\n      next: () => this.router.navigate(['/modeltypes']),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName = true;\n          alert('이미 사용 중인 모델 타입명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      this.formGroup.valueChanges.subscribe(() => this.conflictName = false)\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page block mx-auto;\n}\n",
                    "styleUrl": "modeltype-form-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<h1>Register Model Type</h1>\n\n<form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  class=\"section elevate p-8 space-y-8\"\n>\n  <div class=\"flex flex-col gap-8\">\n    <label\n      class=\"input input-bordered flex items-center gap-4 {{ conflictName ? 'input-error' : '' }}\"\n    >\n      Name:\n      <input\n        formControlName=\"name\"\n        type=\"text\"\n        placeholder=\"e.g. tablegan\"\n        class=\"grow {{ conflictName ? 'text-error' : '' }}\"\n      />\n    </label>\n\n    <select\n      formControlName=\"category\"\n      class=\"select select-bordered\"\n    >\n      <option [ngValue]=\"null\" disabled selected>Select Category</option>\n      <option value=\"INFERENCE\">INFERENCE</option>\n      <option value=\"SYNOPSIS\">SYNOPSIS</option>\n    </select>\n\n    <select\n      formControlName=\"location\"\n      class=\"select select-bordered\"\n    >\n      <option [ngValue]=\"null\" disabled selected>Select Location</option>\n      <option value=\"REMOTE\">REMOTE</option>\n      <option value=\"LOCAL\">LOCAL</option>\n    </select>\n\n    <label\n      class=\"input input-bordered flex items-center gap-4\"\n    >\n      Class:\n      <input\n        formControlName=\"className\"\n        type=\"text\"\n        placeholder=\"e.g. TableGAN\"\n        class=\"grow\"\n      />\n    </label>\n\n    <label\n      class=\"input input-bordered flex items-center gap-4\"\n    >\n      URI:\n      <input\n        formControlName=\"uri\"\n        type=\"text\"\n        placeholder=\"e.g. models/TableGAN.py\"\n        class=\"grow\"\n      />\n    </label>\n  </div>\n  <div class=\"flex gap-4\">\n    <a\n      routerLink=\"/modeltypes\"\n      class=\"btn grow no-underline\"\n    >Cancel</a>\n    <button\n      [disabled]=\"formGroup.invalid || loading\"\n      class=\"btn btn-primary grow text-white disabled:btn-disabled\"\n    >\n      @if (loading) {\n        <etri-loading size=\"xs\"></etri-loading>\n      } @else {\n        Register\n      }\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "ModeltypeListPageComponent",
            "id": "component-ModeltypeListPageComponent-f3ccb39f2df8befc300a79469004db6c7642a593213e559a1069f0bf9c92c83434d8d5cd278896b00ea65ea21289d2224293fa05ef0a2431e6cfdd4098e41108",
            "file": "src/app/routes/modeltypes/pages/modeltype-list-page/modeltype-list-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-modeltype-list-page",
            "styleUrls": [
                "modeltype-list-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "modeltype-list-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "keyword",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "computed(() => this.modeltypeService.loading())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "modeltypeList",
                    "defaultValue": "signal([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<Modeltype[]>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "modeltypeService",
                    "defaultValue": "inject(ModeltypeService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteModeltype",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isDefaultModeltype",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadModeltypes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "PatternFilterPipe",
                    "type": "pipe"
                },
                {
                    "name": "SearchInputComponent",
                    "type": "component"
                },
                {
                    "name": "TrashIconComponent",
                    "type": "component"
                },
                {
                    "name": "IpAnonymizationPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DecimalPipe } from '@angular/common';\nimport { Component, computed, inject, signal, WritableSignal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { LoadingComponent, SearchInputComponent, TrashIconComponent } from '../../../../components';\nimport { Modeltype } from '../../../../dto';\nimport { IpAnonymizationPipe, PatternFilterPipe } from '../../../../pipes';\nimport { ModeltypeService, TraindbService } from '../../../../services';\n\n@Component({\n  imports: [\n    RouterLink,\n    DecimalPipe,\n    LoadingComponent,\n    PatternFilterPipe,\n    SearchInputComponent,\n    TrashIconComponent,\n    IpAnonymizationPipe\n  ],\n  selector: 'etri-modeltype-list-page',\n  standalone: true,\n  styleUrls: ['modeltype-list-page.component.scss'],\n  templateUrl: 'modeltype-list-page.component.html'\n})\nexport class ModeltypeListPageComponent {\n  readonly modeltypeList: WritableSignal<Modeltype[]> = signal([]);\n  readonly loading = computed(() => this.modeltypeService.loading());\n  readonly keyword = signal('');\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly modeltypeService = inject(ModeltypeService);\n\n  constructor() {\n    this.loadModeltypes();\n  }\n\n  isDefaultModeltype(name: string) {\n    return ['rspn', 'tablegan', 'ctgan', 'octgan', 'stasy', 'tvae'].includes(name);\n  }\n\n  deleteModeltype(event: MouseEvent, name: string) {\n    event.stopPropagation();\n    const traindbId = this.traindbService.currentId();\n    if (!traindbId) return;\n    if (!confirm(`${name}을 삭제하시겠습니까?`)) return;\n    this.modeltypeService.deleteModeltype(traindbId, name).subscribe({\n      next: () => this.loadModeltypes(),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    });\n  }\n\n  private loadModeltypes() {\n    const traindbId = this.traindbService.currentId();\n    this.modeltypeService.searchModeltypes(traindbId!).subscribe({\n      next: list => this.modeltypeList.set(list),\n      error: console.error,\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page;\n}\n",
                    "styleUrl": "modeltype-list-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 30
            },
            "extends": [],
            "templateData": "<h1>Model Types</h1>\n\n<section class=\"section elevate flex gap-4\">\n  <etri-search-input\n    class=\"inline-block grow max-w-lg\"\n    (onKeyword)=\"keyword.set($event)\"\n  />\n  <button\n    type=\"button\"\n    routerLink=\"/modeltypes/register\"\n    class=\"ml-auto btn btn-primary btn-sm text-white no-underline rounded-none\">New</button>\n</section>\n\n<section class=\"section elevate p-0 overflow-auto\">\n  <table class=\"table\">\n    <!-- head -->\n    <thead class=\"sticky top-0\">\n    <tr>\n      <th class=\"text-right\">#</th>\n      <th class=\"text-left\">Name</th>\n      <th class=\"text-left\">Category</th>\n      <th class=\"text-left\">Location</th>\n      <th class=\"text-left\">Class</th>\n      <th class=\"text-left\">URI</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n      @for (model of modeltypeList() | patternFilter:keyword():'name'; track $index) {\n        <tr class=\"even:bg-zinc-50 hover:bg-zinc-100\">\n          <th class=\"text-right\">{{ $index + 1 | number }}</th>\n          <td>{{ model.name }}</td>\n          <td>{{ model.category }}</td>\n          <td>{{ model.location }}</td>\n          <td>{{ model.className }}</td>\n          <td>{{ model.uri | ipAnonymization }}</td>\n          <td class=\"flex gap-2 py-2 px-4\">\n            <button\n              type=\"button\"\n              [disabled]=\"isDefaultModeltype(model.name)\"\n              (click)=\"deleteModeltype($event, model.name)\"\n              class=\"btn btn-warning btn-xs rounded-none text-white\"\n            >\n              <etri-trash-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n          </td>\n        </tr>\n      } @empty {\n        <tr>\n          @if (loading()) {\n            <td colspan=\"7\">\n              <div class=\"flex flex-col gap-2 items-center py-4\">\n                <etri-loading/>\n                <span class=\"text-zinc-500 text-xs\">Loading...</span>\n              </div>\n            </td>\n          } @else {\n            <td class=\"text-zinc-500 text-center\" colspan=\"7\">결과가 없습니다.</td>\n          }\n        </tr>\n      }\n    </tbody>\n  </table>\n</section>\n"
        },
        {
            "name": "NavigatorComponent",
            "id": "component-NavigatorComponent-8ca780d5f68a0ed5bbfc481060d06aa6bd1e4d381fc5ab3f1a7a3158eb5fe7d963225d34ad219c4a31dd5de01f96309a223840145dbfacbdf872b1a408c7dace",
            "file": "src/app/components/organisms/navigator/navigator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-navigator",
            "styleUrls": [
                "navigator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "navigator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconInputs",
                    "defaultValue": "{\n    class: 'size-10',\n    type: 'solid',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "menuItems",
                    "defaultValue": "[\n    {\n      icon: ComputerDesktopIconComponent,\n      name: 'Dashboard',\n      link: '/dashboard',\n    },\n    // {\n    //   icon: ChartBarIconComponent,\n    //   name: 'Benchmarks',\n    //   link: '/benchmarks',\n    // },\n    // {\n    //   icon: RectangleStackIconComponent,\n    //   name: 'TrainDB',\n    //   link: '/traindb',\n    // },\n    {\n      icon: RectangleGroupIconComponent,\n      name: 'Model Types',\n      link: '/modeltypes'\n    },\n    {\n      icon: CircleStackIconComponent,\n      name: 'Databases',\n      link: '/databases',\n    },\n    {\n      icon: CubeIconComponent,\n      name: 'Models',\n      link: '/models'\n    },\n    {\n      icon: Square3Stack3dIconComponent,\n      name: 'Synopses',\n      link: '/synopses'\n    },\n    {\n      icon: CommandLineIconComponent,\n      name: 'Queries',\n      link: '/queries'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isActive",
                    "args": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "NgOptimizedImage"
                },
                {
                    "name": "NgComponentOutlet",
                    "type": "component"
                },
                {
                    "name": "ChevronLeftIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgComponentOutlet, NgOptimizedImage } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport {\n  ChevronLeftIconComponent,\n  CircleStackIconComponent,\n  CommandLineIconComponent,\n  ComputerDesktopIconComponent,\n  CubeIconComponent,\n  RectangleGroupIconComponent,\n  Square3Stack3dIconComponent\n} from '../../atoms';\n\n@Component({\n  imports: [\n    RouterLink,\n    NgOptimizedImage,\n    NgComponentOutlet,\n    ChevronLeftIconComponent\n  ],\n  selector: 'etri-navigator',\n  standalone: true,\n  styleUrls: ['navigator.component.scss'],\n  templateUrl: 'navigator.component.html'\n})\nexport class NavigatorComponent {\n  readonly route = inject(ActivatedRoute);\n\n  iconInputs = {\n    class: 'size-10',\n    type: 'solid',\n  };\n\n  menuItems = [\n    {\n      icon: ComputerDesktopIconComponent,\n      name: 'Dashboard',\n      link: '/dashboard',\n    },\n    // {\n    //   icon: ChartBarIconComponent,\n    //   name: 'Benchmarks',\n    //   link: '/benchmarks',\n    // },\n    // {\n    //   icon: RectangleStackIconComponent,\n    //   name: 'TrainDB',\n    //   link: '/traindb',\n    // },\n    {\n      icon: RectangleGroupIconComponent,\n      name: 'Model Types',\n      link: '/modeltypes'\n    },\n    {\n      icon: CircleStackIconComponent,\n      name: 'Databases',\n      link: '/databases',\n    },\n    {\n      icon: CubeIconComponent,\n      name: 'Models',\n      link: '/models'\n    },\n    {\n      icon: Square3Stack3dIconComponent,\n      name: 'Synopses',\n      link: '/synopses'\n    },\n    {\n      icon: CommandLineIconComponent,\n      name: 'Queries',\n      link: '/queries'\n    }\n  ];\n\n  private readonly router = inject(Router);\n\n  isActive(link: string) {\n    return this.router.url.startsWith(link);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "navigator.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<a\n  type=\"button\"\n  routerLink=\"/traindb\"\n  class=\"flex justify-center no-underline text-center mt-8\"\n>\n  <etri-chevron-left-icon class=\"size-10 text-white\"></etri-chevron-left-icon>\n</a>\n<nav\n  class=\"flex flex-col items-center py-8 gap-8\"\n>\n  @for (item of menuItems; track $index) {\n    <a\n      [routerLink]=\"item.link\"\n      [queryParams]=\"route.snapshot.queryParams\"\n      class=\"flex flex-col gap-1 items-center  hover:text-amber-500 {{ isActive(item.link) ? 'text-amber-400' : '' }}\"\n    >\n      <ng-container *ngComponentOutlet=\"item.icon; inputs: iconInputs\"/>\n      <span class=\"text-xs\">{{ item.name }}</span>\n    </a>\n  }\n</nav>\n"
        },
        {
            "name": "PencilSquareIconComponent",
            "id": "component-PencilSquareIconComponent-d9cdb67391459f01dc2e00fcabb61c1e1d888121b2180fc21259796d09196ef16436805bdbe6081de3621f94dcfe8aecfe121f4a1a1c3d7333ed5a6e375803f9",
            "file": "src/app/components/atoms/icons/pencil-square-icon/pencil-square-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-pencil-square-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      d=\"M21.731 2.269a2.625 2.625 0 0 0-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 0 0 0-3.712ZM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 0 0-1.32 2.214l-.8 2.685a.75.75 0 0 0 .933.933l2.685-.8a5.25 5.25 0 0 0 2.214-1.32l8.4-8.4Z\"/>\n    <path\n      d=\"M5.25 5.25a3 3 0 0 0-3 3v10.5a3 3 0 0 0 3 3h10.5a3 3 0 0 0 3-3V13.5a.75.75 0 0 0-1.5 0v5.25a1.5 1.5 0 0 1-1.5 1.5H5.25a1.5 1.5 0 0 1-1.5-1.5V8.25a1.5 1.5 0 0 1 1.5-1.5h5.25a.75.75 0 0 0 0-1.5H5.25Z\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-pencil-square-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          d=\"M21.731 2.269a2.625 2.625 0 0 0-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 0 0 0-3.712ZM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 0 0-1.32 2.214l-.8 2.685a.75.75 0 0 0 .933.933l2.685-.8a5.25 5.25 0 0 0 2.214-1.32l8.4-8.4Z\"/>\n        <path\n          d=\"M5.25 5.25a3 3 0 0 0-3 3v10.5a3 3 0 0 0 3 3h10.5a3 3 0 0 0 3-3V13.5a.75.75 0 0 0-1.5 0v5.25a1.5 1.5 0 0 1-1.5 1.5H5.25a1.5 1.5 0 0 1-1.5-1.5V8.25a1.5 1.5 0 0 1 1.5-1.5h5.25a.75.75 0 0 0 0-1.5H5.25Z\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\"/>\n      </svg>\n    }\n  `,\n})\nexport class PencilSquareIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "PlayIconComponent",
            "id": "component-PlayIconComponent-72c5f6155a314f4e17feb3fb1fedc03cc9d5679be4868220274208011f5908bcefb67e29ed5f83c6de785694002029829eb5d34acec9a9f69f7adca882226ab2",
            "file": "src/app/components/atoms/icons/play-icon/play-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-play-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M4.5 5.653c0-1.427 1.529-2.33 2.779-1.643l11.54 6.347c1.295.712 1.295 2.573 0 3.286L7.28 19.99c-1.25.687-2.779-.217-2.779-1.643V5.653Z\"\n      clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      stroke-linecap=\"round\" stroke-linejoin=\"round\"\n      d=\"M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-play-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M4.5 5.653c0-1.427 1.529-2.33 2.779-1.643l11.54 6.347c1.295.712 1.295 2.573 0 3.286L7.28 19.99c-1.25.687-2.779-.217-2.779-1.643V5.653Z\"\n          clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z\"/>\n      </svg>\n    }\n  `\n})\nexport class PlayIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "PlusIconComponent",
            "id": "component-PlusIconComponent-bbe4e7a77c39e29507fd6938dea4b3805558933710c5abcd2a6fb66c740a2bf9bec66a726a16a28f9dfe64e63b5795217eb6066424531f6fe01ac251dac00a44",
            "file": "src/app/components/atoms/icons/plus-icon/plus-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-plus-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M12 3.75a.75.75 0 0 1 .75.75v6.75h6.75a.75.75 0 0 1 0 1.5h-6.75v6.75a.75.75 0 0 1-1.5 0v-6.75H4.5a.75.75 0 0 1 0-1.5h6.75V4.5a.75.75 0 0 1 .75-.75Z\"\n      clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-plus-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M12 3.75a.75.75 0 0 1 .75.75v6.75h6.75a.75.75 0 0 1 0 1.5h-6.75v6.75a.75.75 0 0 1-1.5 0v-6.75H4.5a.75.75 0 0 1 0-1.5h6.75V4.5a.75.75 0 0 1 .75-.75Z\"\n          clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\"/>\n      </svg>\n    }\n  `\n})\nexport class PlusIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "QueryFormPageComponent",
            "id": "component-QueryFormPageComponent-977e5aab79de1bd0555415a2529931cb59eeb9fae437029c9055f683c147a6844c84a2934ea535197f349901721267a836d93ebdee8bea18e5b973021498a491",
            "file": "src/app/routes/queries/pages/query-form-page/query-form-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-query-form-page",
            "styleUrls": [
                "query-form-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "query-form-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "databases",
                    "defaultValue": "signal<FindDatabase[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "databaseService",
                    "defaultValue": "inject(DatabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "editorOptions",
                    "defaultValue": "{\n    language: 'sql',\n    automaticLayout: true,\n    wordWrap: 'on',\n    overviewRulerBorder: false,\n    minimap: {\n      enabled: false\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "queryService",
                    "defaultValue": "inject(QueryService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "submitting",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadDatabases",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "EditorComponent",
                    "type": "component"
                },
                {
                    "name": "IpAnonymizationPipe",
                    "type": "pipe"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { EditorComponent } from 'ngx-monaco-editor-v2';\nimport { finalize, map, of, Subscription, switchMap, tap } from 'rxjs';\nimport { LoadingComponent } from '../../../../components';\nimport { CreateQuery, FindDatabase, UpdateQuery } from '../../../../dto';\nimport { IpAnonymizationPipe } from '../../../../pipes';\nimport { DatabaseService, QueryService, TraindbService } from '../../../../services';\n\n@Component({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    EditorComponent,\n    IpAnonymizationPipe,\n    LoadingComponent,\n    RouterLink,\n  ],\n  selector: 'etri-query-form-page',\n  standalone: true,\n  styleUrls: ['query-form-page.component.scss'],\n  templateUrl: 'query-form-page.component.html'\n})\nexport class QueryFormPageComponent implements OnInit, OnDestroy {\n  id: number | null = null;\n  submitting = false;\n\n  readonly editorOptions = {\n    language: 'sql',\n    automaticLayout: true,\n    wordWrap: 'on',\n    overviewRulerBorder: false,\n    minimap: {\n      enabled: false\n    }\n  };\n\n  readonly formGroup: FormGroup;\n  readonly databases = signal<FindDatabase[]>([]);\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly databaseService = inject(DatabaseService);\n  private readonly queryService = inject(QueryService);\n  private readonly route = inject(ActivatedRoute);\n  private readonly router = inject(Router);\n  private readonly subscription = new Subscription();\n\n  constructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      name: [null, [(control: AbstractControl) => !!(control.value || '').trim() ? null : { required: true }]],\n      database_id: [null, [Validators.required]],\n      sql: [null, [Validators.required, Validators.pattern(/^select\\b[^;]+\\bfrom\\b[^;]+;\\s*$/i)]],\n    });\n    this.loadDatabases();\n  }\n\n  submit() {\n    const dto: CreateQuery | UpdateQuery = this.formGroup.getRawValue();\n    dto.name = dto.name.trim();\n    dto.traindb_id = this.traindbService.currentId()!;\n    dto.is_approximate = /^select approximate .+/i.test(dto.sql);\n\n    const observable = this.id ?\n      this.queryService.updateQuery(this.id, dto) :\n      this.queryService.createQuery(dto);\n\n    this.submitting = true;\n    observable.pipe(\n      finalize(() => this.submitting = false),\n    ).subscribe({\n      next: () => this.router.navigate(['/queries']),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      },\n    })\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      this.route.params.pipe(\n        map(params => params['id']),\n        tap(id => this.id = id ? +id : null),\n        switchMap(id => id ? this.queryService.findQuery(+id) : of(null))\n      ).subscribe({\n        next: query => {\n          if (query) this.formGroup.patchValue(query);\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private loadDatabases() {\n    const traindbId = this.traindbService.currentId();\n    this.databaseService.searchDatabases(traindbId!).subscribe({\n      next: list => this.databases.set(list),\n      error: console.error\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page block mx-auto;\n}\n",
                    "styleUrl": "query-form-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<h1>{{ id ? 'Update Query' : 'Register Query' }}</h1>\n\n<form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  class=\"section elevate p-8 space-y-8\"\n>\n  <div class=\"flex flex-col gap-8\">\n    <label\n      class=\"input input-bordered flex items-center gap-4\"\n    >\n      Name:\n      <input\n        formControlName=\"name\"\n        type=\"text\"\n        placeholder=\"e.g. test query\"\n        class=\"grow\"\n      />\n    </label>\n\n    <select\n      formControlName=\"database_id\"\n      class=\"select select-bordered\"\n    >\n      <option [ngValue]=\"null\" disabled selected>Select DBMS</option>\n      @for (database of databases(); track database) {\n        <option [ngValue]=\"database.id\">\n          {{ database.name }} ({{database.host | ipAnonymization }}:{{ database.port}})\n        </option>\n      }\n    </select>\n\n    <label class=\"textarea textarea-bordered flex flex-col\">\n      SQL:\n      <ngx-monaco-editor\n        formControlName=\"sql\"\n        [style.height]=\"'100px'\"\n        [options]=\"editorOptions\"\n      ></ngx-monaco-editor>\n    </label>\n  </div>\n\n  <div class=\"flex gap-4\">\n    <button\n      type=\"button\"\n      routerLink=\"/queries\"\n      class=\"btn grow no-underline\"\n    >Cancel\n    </button>\n    <button\n      [disabled]=\"formGroup.invalid || submitting\"\n      class=\"btn btn-primary grow text-white disabled:btn-disabled\"\n    >\n      @if (submitting) {\n        <etri-loading size=\"xs\"></etri-loading>\n      } @else {\n        Register\n      }\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "QueryListPageComponent",
            "id": "component-QueryListPageComponent-ae76f80c82f4701a729243cafe3bb53079767228303b3572fe3358e15e6c5fb52798cf8095e5135f279e3be42079f91b4a9d000e6561529aa1def06e57610495",
            "file": "src/app/routes/queries/pages/query-list-page/query-list-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-query-list-page",
            "styleUrls": [
                "query-list-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "query-list-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "defaultValue": "inject(Dialog)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "keyword",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "computed(() => this.queryService.loading())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "queryList",
                    "defaultValue": "signal<FindQuery[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "queryService",
                    "defaultValue": "inject(QueryService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteQuery",
                    "args": [
                        {
                            "name": "query",
                            "type": "FindQuery",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "FindQuery",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadQueries",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "runQuery",
                    "args": [
                        {
                            "name": "query",
                            "type": "FindQuery",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "FindQuery",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "PatternFilterPipe",
                    "type": "pipe"
                },
                {
                    "name": "SearchInputComponent",
                    "type": "component"
                },
                {
                    "name": "TrashIconComponent",
                    "type": "component"
                },
                {
                    "name": "PencilSquareIconComponent",
                    "type": "component"
                },
                {
                    "name": "PlayIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Dialog } from '@angular/cdk/dialog';\nimport { DecimalPipe, JsonPipe } from '@angular/common';\nimport { Component, computed, inject, signal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport {\n  LoadingComponent,\n  PencilSquareIconComponent, PlayIconComponent, RunQueryDialog,\n  SearchInputComponent,\n  TrashIconComponent\n} from '../../../../components';\nimport { FindQuery } from '../../../../dto';\nimport { PatternFilterPipe } from '../../../../pipes';\nimport { QueryService, TraindbService } from '../../../../services';\n\n@Component({\n  imports: [\n    RouterLink,\n    DecimalPipe,\n    JsonPipe,\n    LoadingComponent,\n    PatternFilterPipe,\n    SearchInputComponent,\n    TrashIconComponent,\n    PencilSquareIconComponent,\n    PlayIconComponent\n  ],\n  selector: 'etri-query-list-page',\n  standalone: true,\n  styleUrls: ['query-list-page.component.scss'],\n  templateUrl: 'query-list-page.component.html'\n})\nexport class QueryListPageComponent {\n  readonly queryList = signal<FindQuery[]>([]);\n  readonly loading = computed(() => this.queryService.loading());\n  readonly keyword = signal('');\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly queryService = inject(QueryService);\n  private readonly dialog = inject(Dialog);\n\n  constructor() {\n    this.loadQueries();\n  }\n\n  deleteQuery(query: FindQuery) {\n    if (!confirm(`${query.name}을 삭제하시겠습니까?`)) return;\n    this.queryService.deleteQuery(query.id).subscribe({\n      next: () => this.loadQueries(),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  runQuery(query: FindQuery) {\n    this.dialog.open(RunQueryDialog, {\n      data: query,\n      width: '90vw',\n    });\n  }\n\n  private loadQueries() {\n    const traindbId = this.traindbService.currentId();\n    this.queryService.searchQueries(traindbId!).subscribe({\n      next: list => this.queryList.set(list),\n      error: console.error,\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page;\n}\n",
                    "styleUrl": "query-list-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 39
            },
            "extends": [],
            "templateData": "<h1>Queries</h1>\n\n<section class=\"section elevate flex gap-4\">\n  <etri-search-input\n    class=\"inline-block grow max-w-lg\"\n    (onKeyword)=\"keyword.set($event)\"/>\n  <button\n    type=\"button\"\n    routerLink=\"/queries/register\"\n    class=\"ml-auto btn btn-primary btn-sm text-white no-underline rounded-none\">New</button>\n</section>\n\n<section class=\"section elevate p-0 overflow-auto\">\n  <table class=\"table\">\n    <!-- head -->\n    <thead class=\"sticky top-0\">\n    <tr>\n      <th class=\"text-right\">ID</th>\n      <th class=\"text-left\">Name</th>\n      <th class=\"text-left\">Type</th>\n      <th class=\"text-left\">Query</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n      @for (query of queryList() | patternFilter:keyword():'name'; track $index) {\n        <tr class=\"even:bg-zinc-50 hover:bg-zinc-100\">\n          <th class=\"text-right\">{{ query.id }}</th>\n          <td>{{ query.name }}</td>\n          <td>{{ query.is_approximate ? '근사질의' : '정확질의' }}</td>\n          <td class=\"truncate\">{{ query.sql }}</td>\n          <td class=\"flex gap-2 py-2 px-4\">\n            <button\n              type=\"button\"\n              (click)=\"deleteQuery(query)\"\n              class=\"btn btn-warning btn-xs rounded-none text-white\"\n            >\n              <etri-trash-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n            <button\n              [routerLink]=\"['/queries', query.id, 'update']\"\n              type=\"button\"\n              class=\"btn btn-secondary btn-xs rounded-none text-white\"\n            >\n              <etri-pencil-square-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n            <button\n              type=\"button\"\n              (click)=\"runQuery(query)\"\n              class=\"btn btn-primary btn-xs rounded-none text-white\"\n            >\n              <etri-play-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n          </td>\n        </tr>\n      } @empty {\n        <tr>\n          @if (loading()) {\n            <td colspan=\"5\">\n              <div class=\"flex flex-col gap-2 items-center py-4\">\n                <etri-loading/>\n                <span class=\"text-zinc-500 text-xs\">Loading...</span>\n              </div>\n            </td>\n          } @else {\n            <td class=\"text-zinc-500 text-center\" colspan=\"5\">결과가 없습니다.</td>\n          }\n        </tr>\n      }\n    </tbody>\n  </table>\n</section>\n"
        },
        {
            "name": "QuerySelectComponent",
            "id": "component-QuerySelectComponent-85aa4275ff846fe20baa57c014fb812fb0727069e4f9c67963dea3b74c476dc8082d9289ba230f696621ee97a3779f69d6c5c6cacec01d15d58af00920733e8a",
            "file": "src/app/components/organisms/dashboard/query-select/query-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "VALUE_ACCESSOR"
                }
            ],
            "selector": "etri-query-select",
            "styleUrls": [
                "query-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "query-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "onExecute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "keyword",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onExecute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "onTouch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "queries",
                    "defaultValue": "signal<FindQuery[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "query",
                    "defaultValue": "computed(() => {\n    const id = this.value();\n    if (!id) return null;\n    return this.queries().find(q => q.id === id) ?? null;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "queryService",
                    "defaultValue": "inject(QueryService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "sql",
                    "defaultValue": "computed(() => this.query()?.sql ?? null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "model<number | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "value",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "SearchInputComponent",
                    "type": "component"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "PatternFilterPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe } from '@angular/common';\nimport { Component, computed, forwardRef, inject, model, OnInit, output, Provider, signal } from '@angular/core';\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { FindQuery } from '../../../../dto';\nimport { PatternFilterPipe } from '../../../../pipes';\nimport { QueryService, TraindbService } from '../../../../services';\nimport { LoadingComponent } from '../../../atoms';\nimport { SearchInputComponent } from '../../../molecules';\n\nconst VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => QuerySelectComponent),\n  multi: true,\n};\n\n@Component({\n  imports: [\n    SearchInputComponent,\n    FormsModule,\n    LoadingComponent,\n    RouterLink,\n    PatternFilterPipe\n  ],\n  providers: [\n    VALUE_ACCESSOR,\n  ],\n  selector: 'etri-query-select',\n  standalone: true,\n  styleUrls: ['query-select.component.scss'],\n  templateUrl: 'query-select.component.html'\n})\nexport class QuerySelectComponent implements ControlValueAccessor, OnInit {\n  readonly value = model<number | null>(null);\n  readonly disabled = model<boolean>();\n  readonly onExecute = output<FindQuery>();\n  readonly keyword = signal('');\n  readonly queries = signal<FindQuery[]>([]);\n  readonly query = computed(() => {\n    const id = this.value();\n    if (!id) return null;\n    return this.queries().find(q => q.id === id) ?? null;\n  });\n  readonly sql = computed(() => this.query()?.sql ?? null);\n\n  readonly queryService = inject(QueryService);\n  private readonly traindbService = inject(TraindbService);\n  private onChange: any;\n  private onTouch: any;\n\n  change(value: number | null): void {\n    this.value.set(value);\n    if (this.onChange) this.onChange(value);\n  }\n\n  writeValue(value: number | null): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled.set(isDisabled);\n  }\n\n  ngOnInit(): void {\n    this.queryService.searchQueries(this.traindbService.currentId()!).subscribe(queries => this.queries.set(queries));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block space-y-4;\n}\n",
                    "styleUrl": "query-select.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor",
                "OnInit"
            ],
            "templateData": "<etri-search-input\n  class=\"inline-block w-full max-w-lg\"\n  (onKeyword)=\"keyword.set($event)\"/>\n<div class=\"overflow-auto max-h-[300px]\">\n  <table class=\"table table-sm\">\n    <thead class=\"sticky top-0 bg-white\">\n    <tr>\n      <th>Select</th>\n      <th>Name</th>\n      <th>Query</th>\n    </tr>\n    </thead>\n    <tbody>\n      @for (query of queries() | patternFilter:keyword():'name'; track query.id) {\n        <tr class=\"even:bg-zinc-50 hover:bg-zinc-100\">\n          <td>\n            <input\n              type=\"radio\"\n              class=\"radio radio-sm\"\n              [ngModel]=\"value()\"\n              (ngModelChange)=\"change(query.id)\"\n              [value]=\"query.id\"\n            />\n          </td>\n          <td>{{ query.name }}</td>\n          <td class=\"truncate\">{{ query.sql }}</td>\n        </tr>\n      } @empty {\n        <tr>\n          @if (queryService.loading()) {\n            <td colspan=\"3\">\n              <etri-loading size=\"sm\"/>\n            </td>\n          } @else {\n            <td colspan=\"3\" class=\"text-zinc-500\">\n              결과가 없습니다. <a routerLink=\"/queries\" class=\"text-primary\">쿼리 관리 페이지</a>로 이동\n            </td>\n          }\n        </tr>\n      }\n    </tbody>\n  </table>\n</div>\n\n<div class=\"flex flex-col gap-2 items-end\">\n  <pre\n    [class.text-zinc-500]=\"!value()\"\n    class=\"border border-zinc-300 px-4 py-2 text-sm w-full\"\n  >{{ sql() ?? '선택된 쿼리가 없습니다.' }}</pre>\n  <button\n    (click)=\"onExecute.emit(query()!)\"\n    type=\"button\"\n    class=\"btn btn-sm btn-secondary text-white\"\n    [disabled]=\"!value()\"\n  >Execute\n  </button>\n</div>\n"
        },
        {
            "name": "RectangleGroupIconComponent",
            "id": "component-RectangleGroupIconComponent-796a7a4ecc76ea2b0ef1ee74e6a02902d252a84edd69e47435f59b13705ad19319512aa0ebc4ae7f28592b63f0c7a1a856db1b382d22e6b71a8c39c8d968d982",
            "file": "src/app/components/atoms/icons/rectangle-group-icon/rectangle-group-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-rectangle-group-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path fill-rule=\"evenodd\"\n          d=\"M1.5 7.125c0-1.036.84-1.875 1.875-1.875h6c1.036 0 1.875.84 1.875 1.875v3.75c0 1.036-.84 1.875-1.875 1.875h-6A1.875 1.875 0 0 1 1.5 10.875v-3.75Zm12 1.5c0-1.036.84-1.875 1.875-1.875h5.25c1.035 0 1.875.84 1.875 1.875v8.25c0 1.035-.84 1.875-1.875 1.875h-5.25a1.875 1.875 0 0 1-1.875-1.875v-8.25ZM3 16.125c0-1.036.84-1.875 1.875-1.875h5.25c1.036 0 1.875.84 1.875 1.875v2.25c0 1.035-.84 1.875-1.875 1.875h-5.25A1.875 1.875 0 0 1 3 18.375v-2.25Z\"\n          clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M2.25 7.125C2.25 6.504 2.754 6 3.375 6h6c.621 0 1.125.504 1.125 1.125v3.75c0 .621-.504 1.125-1.125 1.125h-6a1.125 1.125 0 0 1-1.125-1.125v-3.75ZM14.25 8.625c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v8.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 0 1-1.125-1.125v-8.25ZM3.75 16.125c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 0 1-1.125-1.125v-2.25Z\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-rectangle-group-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path fill-rule=\"evenodd\"\n              d=\"M1.5 7.125c0-1.036.84-1.875 1.875-1.875h6c1.036 0 1.875.84 1.875 1.875v3.75c0 1.036-.84 1.875-1.875 1.875h-6A1.875 1.875 0 0 1 1.5 10.875v-3.75Zm12 1.5c0-1.036.84-1.875 1.875-1.875h5.25c1.035 0 1.875.84 1.875 1.875v8.25c0 1.035-.84 1.875-1.875 1.875h-5.25a1.875 1.875 0 0 1-1.875-1.875v-8.25ZM3 16.125c0-1.036.84-1.875 1.875-1.875h5.25c1.036 0 1.875.84 1.875 1.875v2.25c0 1.035-.84 1.875-1.875 1.875h-5.25A1.875 1.875 0 0 1 3 18.375v-2.25Z\"\n              clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"M2.25 7.125C2.25 6.504 2.754 6 3.375 6h6c.621 0 1.125.504 1.125 1.125v3.75c0 .621-.504 1.125-1.125 1.125h-6a1.125 1.125 0 0 1-1.125-1.125v-3.75ZM14.25 8.625c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v8.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 0 1-1.125-1.125v-8.25ZM3.75 16.125c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 0 1-1.125-1.125v-2.25Z\"/>\n      </svg>\n    }\n  `\n})\nexport class RectangleGroupIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "RectangleStackIconComponent",
            "id": "component-RectangleStackIconComponent-14e1e129f700785dff37372f410f7747016fab95f5b101c1c71b3c660ffd2b8ebaa548a0e7f597c89c7bb3eb0216c6a0b5b11761f4b5b8ffbdcf49aa49674db2",
            "file": "src/app/components/atoms/icons/rectangle-stack-icon/rectangle-stack-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-rectangle-stack-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      d=\"M5.566 4.657A4.505 4.505 0 0 1 6.75 4.5h10.5c.41 0 .806.055 1.183.157A3 3 0 0 0 15.75 3h-7.5a3 3 0 0 0-2.684 1.657ZM2.25 12a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3v-6ZM5.25 7.5c-.41 0-.806.055-1.184.157A3 3 0 0 1 6.75 6h10.5a3 3 0 0 1 2.683 1.657A4.505 4.505 0 0 0 18.75 7.5H5.25Z\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M6 6.878V6a2.25 2.25 0 0 1 2.25-2.25h7.5A2.25 2.25 0 0 1 18 6v.878m-12 0c.235-.083.487-.128.75-.128h10.5c.263 0 .515.045.75.128m-12 0A2.25 2.25 0 0 0 4.5 9v.878m13.5-3A2.25 2.25 0 0 1 19.5 9v.878m0 0a2.246 2.246 0 0 0-.75-.128H5.25c-.263 0-.515.045-.75.128m15 0A2.25 2.25 0 0 1 21 12v6a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 18v-6c0-.98.626-1.813 1.5-2.122\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-rectangle-stack-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          d=\"M5.566 4.657A4.505 4.505 0 0 1 6.75 4.5h10.5c.41 0 .806.055 1.183.157A3 3 0 0 0 15.75 3h-7.5a3 3 0 0 0-2.684 1.657ZM2.25 12a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3v-6ZM5.25 7.5c-.41 0-.806.055-1.184.157A3 3 0 0 1 6.75 6h10.5a3 3 0 0 1 2.683 1.657A4.505 4.505 0 0 0 18.75 7.5H5.25Z\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"M6 6.878V6a2.25 2.25 0 0 1 2.25-2.25h7.5A2.25 2.25 0 0 1 18 6v.878m-12 0c.235-.083.487-.128.75-.128h10.5c.263 0 .515.045.75.128m-12 0A2.25 2.25 0 0 0 4.5 9v.878m13.5-3A2.25 2.25 0 0 1 19.5 9v.878m0 0a2.246 2.246 0 0 0-.75-.128H5.25c-.263 0-.515.045-.75.128m15 0A2.25 2.25 0 0 1 21 12v6a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 18v-6c0-.98.626-1.813 1.5-2.122\"/>\n      </svg>\n    }\n  `\n})\nexport class RectangleStackIconComponent extends BaseIconDirective {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "RunQueryDialog",
            "id": "component-RunQueryDialog-0f37209b41a11731fe25a099dc2e97180a845f6261a96ff3348b95ce62c9bc91ef975cffb2e9c7193f871c317d8b76b42a4c4fc6f50b22729c0df068e865e488",
            "file": "src/app/components/organisms/dialogs/run-query-dialog/run-query-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-run-query-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<etri-run-query-dialog_\n  [query]=\"data\"\n  (onClose)=\"dialogRef.close()\"\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "inject(DIALOG_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FindQuery",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(DialogRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RunQueryDialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { DecimalPipe } from '@angular/common';\nimport { Component, inject, input, OnInit, output, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { FindQuery } from '../../../../dto';\nimport { QueryService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    LoadingComponent,\n    DecimalPipe\n  ],\n  selector: 'etri-run-query-dialog_',\n  standalone: true,\n  styleUrls: ['run-query-dialog.component.scss'],\n  templateUrl: 'run-query-dialog.component.html'\n})\nexport class RunQueryDialogComponent implements OnInit {\n  readonly onClose = output<void>();\n  readonly loading = signal(false);\n  readonly query = input.required<FindQuery>();\n  readonly columns = signal<string[]>([]);\n  readonly data = signal<Array<any[]>>([]);\n  readonly executionTime = signal<number>(0);\n\n  private readonly queryService = inject(QueryService);\n\n  isNumber(item: any) {\n    return !isNaN(+item);\n  }\n\n  ngOnInit() {\n    this.runQuery();\n  }\n\n  private runQuery() {\n    this.loading.set(true);\n    this.queryService.runQuery(this.query().id).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: res => {\n        this.columns.set(res.columns);\n        this.data.set(res.data);\n        this.executionTime.set(res.execution_time);\n      },\n    })\n  }\n}\n\n@Component({\n  imports: [\n    RunQueryDialogComponent\n  ],\n  selector: 'etri-run-query-dialog',\n  standalone: true,\n  template: `\n    <etri-run-query-dialog_\n      [query]=\"data\"\n      (onClose)=\"dialogRef.close()\"\n    />\n  `\n})\nexport class RunQueryDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: FindQuery = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "RunQueryDialogComponent",
            "id": "component-RunQueryDialogComponent-0f37209b41a11731fe25a099dc2e97180a845f6261a96ff3348b95ce62c9bc91ef975cffb2e9c7193f871c317d8b76b42a4c4fc6f50b22729c0df068e865e488",
            "file": "src/app/components/organisms/dialogs/run-query-dialog/run-query-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-run-query-dialog_",
            "styleUrls": [
                "run-query-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "run-query-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "signal<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "signal<Array<any[]>>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "executionTime",
                    "defaultValue": "signal<number>(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "queryService",
                    "defaultValue": "inject(QueryService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isNumber",
                    "args": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "runQuery",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BaseDialogComponent",
                    "type": "component"
                },
                {
                    "name": "DialogHeaderDirective",
                    "type": "directive"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { DecimalPipe } from '@angular/common';\nimport { Component, inject, input, OnInit, output, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { FindQuery } from '../../../../dto';\nimport { QueryService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    LoadingComponent,\n    DecimalPipe\n  ],\n  selector: 'etri-run-query-dialog_',\n  standalone: true,\n  styleUrls: ['run-query-dialog.component.scss'],\n  templateUrl: 'run-query-dialog.component.html'\n})\nexport class RunQueryDialogComponent implements OnInit {\n  readonly onClose = output<void>();\n  readonly loading = signal(false);\n  readonly query = input.required<FindQuery>();\n  readonly columns = signal<string[]>([]);\n  readonly data = signal<Array<any[]>>([]);\n  readonly executionTime = signal<number>(0);\n\n  private readonly queryService = inject(QueryService);\n\n  isNumber(item: any) {\n    return !isNaN(+item);\n  }\n\n  ngOnInit() {\n    this.runQuery();\n  }\n\n  private runQuery() {\n    this.loading.set(true);\n    this.queryService.runQuery(this.query().id).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: res => {\n        this.columns.set(res.columns);\n        this.data.set(res.data);\n        this.executionTime.set(res.execution_time);\n      },\n    })\n  }\n}\n\n@Component({\n  imports: [\n    RunQueryDialogComponent\n  ],\n  selector: 'etri-run-query-dialog',\n  standalone: true,\n  template: `\n    <etri-run-query-dialog_\n      [query]=\"data\"\n      (onClose)=\"dialogRef.close()\"\n    />\n  `\n})\nexport class RunQueryDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: FindQuery = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "run-query-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<etri-base-dialog\n  [hiddenFooter]=\"true\"\n  (onClose)=\"onClose.emit()\"\n>\n  <h1 header etriDialogHeader>{{ query().name }}</h1>\n  <div class=\"pb-4 text-xs\"><span class=\"text-zinc-500\">Execution Time:</span> {{ executionTime() }} sec</div>\n  <div class=\"overflow-auto min-h-[500px] h-[80vh]\">\n    <table class=\"table table-xs\">\n      <thead class=\"sticky top-0\">\n      <tr class=\"bg-white\">\n        <th class=\"border-r border-zinc-200\">#</th>\n        @for (column of columns(); track $index) {\n          <th class=\"border-r border-zinc-200 last:border-r-0\">{{ column }}</th>\n        }\n      </tr>\n      </thead>\n      <tbody>\n        @if (loading()) {\n          <tr>\n            <td [colSpan]=\"columns().length + 1\">\n              <etri-loading/>\n            </td>\n          </tr>\n        } @else {\n          @for (row of data(); track $index) {\n            <tr class=\"even:bg-zinc-50 hover:bg-zinc-100\">\n              <th class=\"text-right border-r border-zinc-200\">{{ $index + 1 | number }}</th>\n              @for (item of row; track $index; let i = $index) {\n                @if (isNumber(item)) {\n                  <td class=\"text-right border-r border-zinc-200 last:border-r-0\">{{ item | number }}</td>\n                } @else {\n                  <td class=\"border-r border-zinc-200 last:border-r-0\">{{ item }}</td>\n                }\n              }\n            </tr>\n          } @empty {\n            <tr>\n              <td class=\"text-zinc-500 text-center\" [colSpan]=\"columns().length + 1\">결과가 없습니다.</td>\n            </tr>\n          }\n        }\n      </tbody>\n    </table>\n  </div>\n</etri-base-dialog>\n"
        },
        {
            "name": "ScatterChartComponent",
            "id": "component-ScatterChartComponent-4393f35ca727862b449bcc47a54620386e9e5cb3f1e6b5226732cc57850c372b77b6d92c54523a0bc1f4653f7edd0cecf01a0f2d2172d6243f7347bfe322635c",
            "file": "src/app/components/organisms/charts/scatter-chart/scatter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "scatter-chart",
            "styleUrls": [
                "./scatter-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scatter-chart.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'scatter-chart',\n  templateUrl: './scatter-chart.component.html',\n  styleUrls: ['./scatter-chart.component.scss'],\n})\nexport class ScatterChartComponent { }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block w-full;\n}\n",
                    "styleUrl": "./scatter-chart.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div #chartRef class=\"w-full h-full relative\"></div>\n"
        },
        {
            "name": "SearchInputComponent",
            "id": "component-SearchInputComponent-691f77455fd2bb8ea55c41ebc827aa6dff254021e7d10863f663c7d8bc3d09a1b5e1f388adf48d0514700f418e2bd57b2d7976e289bf529dcc394a71753dc69d",
            "file": "src/app/components/molecules/search-input/search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-search-input",
            "styleUrls": [
                "search-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "search-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onKeyword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "keywordControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "onKeyword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MagnifyingGlassIconComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, output } from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { distinctUntilChanged, map, Subscription } from 'rxjs';\nimport { MagnifyingGlassIconComponent } from '../../atoms';\n\n@Component({\n  selector: 'etri-search-input',\n  standalone: true,\n  styleUrls: ['search-input.component.scss'],\n  templateUrl: 'search-input.component.html',\n  imports: [\n    FormsModule,\n    MagnifyingGlassIconComponent,\n    ReactiveFormsModule\n  ]\n})\nexport class SearchInputComponent implements OnInit, OnDestroy {\n  onKeyword = output<string>();\n  readonly keywordControl = new FormControl('');\n  private readonly subscription = new Subscription();\n\n  ngOnInit() {\n    this.subscription.add(\n      this.keywordControl.valueChanges.pipe(\n        map(keyword => (keyword || '').trim()),\n        distinctUntilChanged()\n      ).subscribe(keyword => this.onKeyword.emit(keyword))\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "search-input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<label class=\"input input-bordered input-sm rounded-none flex items-center gap-2\">\n  <etri-magnifying-glass-icon class=\"size-4\"/>\n  <input\n    [formControl]=\"keywordControl\"\n    type=\"text\"\n    placeholder=\"Search\"\n    class=\"grow max-w-lg\"\n  />\n</label>\n"
        },
        {
            "name": "SelectColumnsComponent",
            "id": "component-SelectColumnsComponent-f4a8cb11d4cc445b9303da635e0bef39e55dd83b66d44b625ca9cd62b8d3627482f2389038f5a006ee0fca7c6f7ca46fa9c261083037b6a2f74085678d166b39",
            "file": "src/app/components/molecules/select-columns/select-columns.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-select-columns",
            "styleUrls": [
                "select-columns.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "select-columns.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "input<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "selectColumns",
                    "defaultValue": "output<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "selectedColumns",
                    "defaultValue": "model<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, model, output } from '@angular/core';\n\n@Component({\n  selector: 'etri-select-columns',\n  standalone: true,\n  styleUrls: ['select-columns.component.scss'],\n  templateUrl: 'select-columns.component.html',\n})\nexport class SelectColumnsComponent {\n  columns = input<string[]>();\n  selectedColumns = model<string[]>([]);\n  selectColumns = output<string[]>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply flex flex-col gap-2;\n}\n",
                    "styleUrl": "select-columns.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "@for (column of [1, 2, 3, 4]; track $index) {\n  <div class=\"form-control\">\n    <label class=\"cursor-pointer label justify-start gap-4\">\n      <input type=\"checkbox\" class=\"checkbox checkbox-primary\"/>\n      <span class=\"label-text\">column {{ column }}</span>\n    </label>\n  </div>\n}\n"
        },
        {
            "name": "Square3Stack3dIconComponent",
            "id": "component-Square3Stack3dIconComponent-c489358701279c3ff962f5726999c074a591b67bd6056b8a36310216d4d063ec18b54994aa060b8356f98c81c890aadc145a2e86993eeea9b9c675d4ba2f64dc",
            "file": "src/app/components/atoms/icons/square-3-stack-3d-icon/square-3-stack-3d-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-square-3-stack-3d-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path\n      d=\"M11.644 1.59a.75.75 0 0 1 .712 0l9.75 5.25a.75.75 0 0 1 0 1.32l-9.75 5.25a.75.75 0 0 1-.712 0l-9.75-5.25a.75.75 0 0 1 0-1.32l9.75-5.25Z\"/>\n    <path\n      d=\"m3.265 10.602 7.668 4.129a2.25 2.25 0 0 0 2.134 0l7.668-4.13 1.37.739a.75.75 0 0 1 0 1.32l-9.75 5.25a.75.75 0 0 1-.71 0l-9.75-5.25a.75.75 0 0 1 0-1.32l1.37-.738Z\"/>\n    <path\n      d=\"m10.933 19.231-7.668-4.13-1.37.739a.75.75 0 0 0 0 1.32l9.75 5.25c.221.12.489.12.71 0l9.75-5.25a.75.75 0 0 0 0-1.32l-1.37-.738-7.668 4.13a2.25 2.25 0 0 1-2.134-.001Z\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M6.429 9.75 2.25 12l4.179 2.25m0-4.5 5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0 4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0-5.571 3-5.571-3\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-square-3-stack-3d-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path\n          d=\"M11.644 1.59a.75.75 0 0 1 .712 0l9.75 5.25a.75.75 0 0 1 0 1.32l-9.75 5.25a.75.75 0 0 1-.712 0l-9.75-5.25a.75.75 0 0 1 0-1.32l9.75-5.25Z\"/>\n        <path\n          d=\"m3.265 10.602 7.668 4.129a2.25 2.25 0 0 0 2.134 0l7.668-4.13 1.37.739a.75.75 0 0 1 0 1.32l-9.75 5.25a.75.75 0 0 1-.71 0l-9.75-5.25a.75.75 0 0 1 0-1.32l1.37-.738Z\"/>\n        <path\n          d=\"m10.933 19.231-7.668-4.13-1.37.739a.75.75 0 0 0 0 1.32l9.75 5.25c.221.12.489.12.71 0l9.75-5.25a.75.75 0 0 0 0-1.32l-1.37-.738-7.668 4.13a2.25 2.25 0 0 1-2.134-.001Z\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"M6.429 9.75 2.25 12l4.179 2.25m0-4.5 5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0 4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0-5.571 3-5.571-3\"/>\n      </svg>\n    }\n  `\n})\nexport class Square3Stack3dIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "SynopsisFormPageComponent",
            "id": "component-SynopsisFormPageComponent-f8f7227e0906cf2696b48db2846f3b82cc75e8e359aea2acb4f06313f17fcc20eee89fb2c920c1dd31123c0ea14515ed0fc90aa8dd7252cb9014309b8d4f1e53",
            "file": "src/app/routes/synopses/pages/synopsis-form-page/synopsis-form-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-synopsis-form-page",
            "styleUrls": [
                "synopsis-form-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "synopsis-form-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "conflictName",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "databases",
                    "defaultValue": "signal<FindDatabase[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "databaseService",
                    "defaultValue": "inject(DatabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "models",
                    "defaultValue": "signal<Model[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "modelService",
                    "defaultValue": "inject(ModelService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "modeltypeService",
                    "defaultValue": "inject(ModeltypeService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "submitting",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "synopsisService",
                    "defaultValue": "inject(SynopsisService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadDatabases",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadModels",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "IpAnonymizationPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { finalize, forkJoin, map, Subscription } from 'rxjs';\nimport { LoadingComponent } from '../../../../components';\nimport { FindDatabase, Model } from '../../../../dto';\nimport { IpAnonymizationPipe } from '../../../../pipes';\nimport { DatabaseService, ModelService, ModeltypeService, SynopsisService, TraindbService } from '../../../../services';\n\n@Component({\n  selector: 'etri-synopsis-form-page',\n  standalone: true,\n  styleUrls: ['synopsis-form-page.component.scss'],\n  templateUrl: 'synopsis-form-page.component.html',\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    LoadingComponent,\n    RouterLink,\n    IpAnonymizationPipe\n  ]\n})\nexport class SynopsisFormPageComponent implements OnInit, OnDestroy {\n  conflictName = false;\n  submitting = false;\n  readonly databases = signal<FindDatabase[]>([]);\n  readonly models = signal<Model[]>([]);\n  readonly formGroup: FormGroup;\n\n  private readonly traindbService = inject(TraindbService);\n  private readonly databaseService = inject(DatabaseService);\n  private readonly modeltypeService = inject(ModeltypeService);\n  private readonly modelService = inject(ModelService);\n  private readonly synopsisService = inject(SynopsisService);\n  private readonly router = inject(Router);\n  private readonly subscription = new Subscription();\n\n  constructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      name: [null, [Validators.required]],\n      database: [null, Validators.required],\n      model: [null, [Validators.required]],\n      limit_rows: [null, [Validators.required, Validators.pattern(/^\\d+(\\.\\d+)?$/)]],\n      is_percent: [false]\n    });\n    this.formGroup.setValidators([\n      (control: AbstractControl) => {\n        const isPercent = !!control.get('is_percent')?.value;\n        const rows = +(control.get('limit_rows')?.value || '');\n        let err = false;\n        if (isNaN(rows)) err = true;\n        else if (rows < 0) err = true;\n        else if (isPercent && rows > 100) err = true;\n        return err ? { invalidRows: true } : null;\n      }\n    ]);\n    this.loadDatabases();\n    this.loadModels();\n  }\n\n  submit() {\n    this.submitting = true;\n    const { database, ...dto } = this.formGroup.getRawValue();\n    this.synopsisService.createSynopsis(database, dto).pipe(\n      finalize(() => this.submitting = false)\n    ).subscribe({\n      next: () => this.router.navigate(['/synopses']),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName = true;\n          alert('이미 사용 중인 시놉시스명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      },\n    });\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      this.formGroup.get('name')?.valueChanges?.subscribe(() => this.conflictName = false)\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private loadDatabases() {\n    const traindbId = this.traindbService.currentId();\n    this.databaseService.searchDatabases(traindbId!).subscribe({\n      next: list => this.databases.set(list),\n      error: console.error\n    });\n  }\n\n  private loadModels() {\n    const traindbId = this.traindbService.currentId();\n    forkJoin([\n      this.modelService.searchModels(traindbId!),\n      this.modeltypeService.searchModeltypes(traindbId!)\n    ]).pipe(\n      map(([models, modeltypes]) => {\n        return models\n          .filter(model => model.status === 'ENABLED' && model.training_status === 'FINISHED')\n          .filter(model => modeltypes.find(modeltype => modeltype.name === model.modeltype)?.category === 'SYNOPSIS');\n      })\n    ).subscribe({\n      next: list => this.models.set(list),\n      error: console.error\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page block mx-auto;\n}\n",
                    "styleUrl": "synopsis-form-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<h1>Register Synopsis</h1>\n\n<form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  class=\"section elevate p-8 space-y-8\"\n>\n  <div class=\"flex flex-col gap-8\">\n    <label\n      class=\"input input-bordered flex items-center gap-4 {{ conflictName ? 'input-error' : '' }}\"\n    >\n      Name:\n      <input\n        formControlName=\"name\"\n        type=\"text\"\n        placeholder=\"e.g. test_syn\"\n        class=\"grow {{ conflictName ? 'text-error' : '' }}\"\n      />\n    </label>\n\n    <select\n      formControlName=\"database\"\n      class=\"select select-bordered\"\n    >\n      <option [ngValue]=\"null\" disabled selected>Select DBMS</option>\n      @for (database of databases(); track database) {\n        <option [ngValue]=\"database.id\">\n          {{ database.name }} ({{database.host | ipAnonymization }}:{{ database.port}})\n        </option>\n      }\n    </select>\n\n    <select\n      formControlName=\"model\"\n      class=\"select select-bordered\"\n    >\n      <option [ngValue]=\"null\" disabled selected>Select Model</option>\n      @for (model of models(); track model) {\n        <option [ngValue]=\"model.name\">{{ model.name }} ({{model.modeltype}})</option>\n      }\n    </select>\n    <div class=\"flex gap-2 items-center\">\n      <label\n        class=\"input input-bordered flex items-center gap-4\"\n      >\n        Limit Rows:\n        <input\n          formControlName=\"limit_rows\"\n          type=\"text\"\n          placeholder=\"e.g. 10000\"\n          class=\"grow text-right\"\n        />\n      </label>\n      <select\n        formControlName=\"is_percent\"\n        class=\"select select-bordered\"\n      >\n        <option [ngValue]=\"false\">ROWS</option>\n        <option [ngValue]=\"true\">PERCENT</option>\n      </select>\n    </div>\n  </div>\n\n  <div class=\"flex gap-4\">\n    <button\n      type=\"button\"\n      routerLink=\"/synopses\"\n      class=\"btn grow no-underline\"\n    >Cancel\n    </button>\n    <button\n      [disabled]=\"formGroup.invalid || submitting\"\n      class=\"btn btn-primary grow text-white disabled:btn-disabled\"\n    >\n      @if (submitting) {\n        <etri-loading size=\"xs\"></etri-loading>\n      } @else {\n        Register\n      }\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "SynopsisListPageComponent",
            "id": "component-SynopsisListPageComponent-925cc040a58d208a2092ed2d5198c09046e8536214aa49cd01adce59182ec50d504180e3467453412d5385fd6a0ed8e4a3c9a02736a4bd220e0cc60f4a04d92d",
            "file": "src/app/routes/synopses/pages/synopsis-list-page/synopsis-list-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-synopsis-list-page",
            "styleUrls": [
                "synopsis-list-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "synopsis-list-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiHost",
                    "defaultValue": "environment.apiHost",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dialog",
                    "defaultValue": "inject(Dialog)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "keyword",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "computed(() => this.synopsisService.loading())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "synopsisList",
                    "defaultValue": "signal([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<Synopsis[]>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "synopsisService",
                    "defaultValue": "inject(SynopsisService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbId",
                    "defaultValue": "computed(() => this.traindbService.currentId())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteSynopsis",
                    "args": [
                        {
                            "name": "synopsis",
                            "type": "Synopsis",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "synopsis",
                            "type": "Synopsis",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "importSynopsis",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadSynopses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "updateSynopsis",
                    "args": [
                        {
                            "name": "synopsis",
                            "type": "Synopsis",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "synopsis",
                            "type": "Synopsis",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "PatternFilterPipe",
                    "type": "pipe"
                },
                {
                    "name": "SearchInputComponent",
                    "type": "component"
                },
                {
                    "name": "TrashIconComponent",
                    "type": "component"
                },
                {
                    "name": "PencilSquareIconComponent",
                    "type": "component"
                },
                {
                    "name": "ArrowUpTrayIconComponent",
                    "type": "component"
                },
                {
                    "name": "ArrowDownTrayIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Dialog } from '@angular/cdk/dialog';\nimport { DecimalPipe } from '@angular/common';\nimport { Component, computed, inject, signal, WritableSignal } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { environment } from '../../../../../environments/environment';\nimport {\n  ArrowDownTrayIconComponent,\n  ArrowUpTrayIconComponent, ImportSynopsisDialog,\n  LoadingComponent,\n  PencilSquareIconComponent,\n  SearchInputComponent,\n  TrashIconComponent, UpdateSynopsisDialog\n} from '../../../../components';\nimport { Synopsis } from '../../../../dto';\nimport { PatternFilterPipe } from '../../../../pipes';\nimport { SynopsisService, TraindbService } from '../../../../services';\n\n@Component({\n  imports: [\n    RouterLink,\n    DecimalPipe,\n    LoadingComponent,\n    PatternFilterPipe,\n    SearchInputComponent,\n    TrashIconComponent,\n    PencilSquareIconComponent,\n    ArrowUpTrayIconComponent,\n    ArrowDownTrayIconComponent\n  ],\n  selector: 'etri-synopsis-list-page',\n  standalone: true,\n  styleUrls: ['synopsis-list-page.component.scss'],\n  templateUrl: 'synopsis-list-page.component.html'\n})\nexport class SynopsisListPageComponent {\n  readonly synopsisList: WritableSignal<Synopsis[]> = signal([]);\n  readonly loading = computed(() => this.synopsisService.loading());\n  readonly keyword = signal('');\n  readonly apiHost = environment.apiHost;\n  private readonly traindbService = inject(TraindbService);\n  private readonly synopsisService =inject(SynopsisService);\n  private readonly dialog = inject(Dialog);\n  readonly traindbId = computed(() => this.traindbService.currentId());\n\n  constructor() {\n    this.loadSynopses();\n  }\n\n  importSynopsis() {\n    const dialog = this.dialog.open(ImportSynopsisDialog);\n    dialog.closed.subscribe(res => {\n      if (res) this.loadSynopses();\n    })\n  }\n\n  deleteSynopsis(synopsis: Synopsis) {\n    if (!confirm(`${synopsis.name}을 삭제하시겠습니까?`)) return;\n    const traindbId = this.traindbService.currentId();\n    this.synopsisService.deleteSynopsis(traindbId!, synopsis.name).subscribe({\n      next: () => this.loadSynopses(),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  updateSynopsis(synopsis: Synopsis) {\n    const dialog = this.dialog.open(UpdateSynopsisDialog, {\n      data: synopsis\n    });\n    dialog.closed.subscribe(res => {\n      if (res) this.loadSynopses();\n    });\n  }\n\n  private loadSynopses() {\n    const traindbId = this.traindbService.currentId();\n    this.synopsisService.searchSynopses(traindbId!).subscribe({\n      next: list => this.synopsisList.set([...list]),\n      error: console.error,\n    })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page;\n}\n",
                    "styleUrl": "synopsis-list-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 43
            },
            "extends": [],
            "templateData": "<h1>Synopses</h1>\n\n<section class=\"section elevate flex gap-4\">\n  <etri-search-input\n    class=\"inline-block grow max-w-lg\"\n    (onKeyword)=\"keyword.set($event)\"/>\n  <div class=\"ml-auto flex gap-2\">\n    <button\n      type=\"button\"\n      (click)=\"importSynopsis()\"\n      class=\"btn btn-info btn-sm text-white no-underline rounded-none\">\n      <etri-arrow-up-tray-icon type=\"solid\" class=\"size-4\"/>\n      Import\n    </button>\n    <button\n      type=\"button\"\n      routerLink=\"/synopses/register\"\n      class=\"btn btn-primary btn-sm text-white no-underline rounded-none\">New\n    </button>\n  </div>\n</section>\n\n<section class=\"section elevate p-0 overflow-auto\">\n  <table class=\"table\">\n    <!-- head -->\n    <thead class=\"sticky top-0\">\n    <tr>\n      <th class=\"text-right\">#</th>\n      <th class=\"text-left\">Status</th>\n      <th class=\"text-left\">Name</th>\n      <th class=\"text-left\">Model</th>\n      <th class=\"text-left\">Schema</th>\n      <th class=\"text-left\">Table</th>\n      <th class=\"text-left\">Columns</th>\n      <th class=\"text-left\">Rows</th>\n      <th class=\"text-left\">Ratio</th>\n      <th class=\"text-left\">External</th>\n      <th class=\"text-left\">Statistics</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n      @if (loading()) {\n        <tr>\n          <td colspan=\"12\">\n            <div class=\"flex flex-col gap-2 items-center py-4\">\n              <etri-loading/>\n              <span class=\"text-zinc-500 text-xs\">Loading...</span>\n            </div>\n          </td>\n        </tr>\n      } @else {\n        @for (synopsis of synopsisList() | patternFilter:keyword():'name'; track $index) {\n          <tr class=\"even:bg-zinc-50 hover:bg-zinc-100\">\n            <th class=\"text-right\">{{ $index + 1 | number }}</th>\n            <td>{{ synopsis.status }}</td>\n            <td>{{ synopsis.name }}</td>\n            <td>{{ synopsis.model }}</td>\n            <td>{{ synopsis.schema }}</td>\n            <td>{{ synopsis.table }}</td>\n            <td>{{ synopsis.columns }}</td>\n            <td>{{ synopsis.rows | number }}</td>\n            <td>{{ synopsis.ratio }}</td>\n            <td>{{ synopsis.external }}</td>\n            <td>{{ synopsis.statistics || '-' }}</td>\n            <td class=\"flex gap-2 py-2 px-4\">\n              <button\n                type=\"button\"\n                (click)=\"deleteSynopsis(synopsis)\"\n                class=\"btn btn-warning btn-xs rounded-none text-white\"\n              >\n                <etri-trash-icon type=\"solid\" class=\"size-4\"/>\n              </button>\n              <button\n                type=\"button\"\n                (click)=\"updateSynopsis(synopsis)\"\n                class=\"btn btn-secondary btn-xs rounded-none text-white\"\n              >\n                <etri-pencil-square-icon type=\"solid\" class=\"size-4\"/>\n              </button>\n              <a\n                [href]=\"apiHost + '/synopses/' + synopsis.name + '/export?traindb_id=' + traindbId()\"\n                class=\"btn btn-info btn-xs rounded-none no-underline\"\n              >\n                <etri-arrow-down-tray-icon type=\"solid\" class=\"size-4 text-white\"/>\n              </a>\n            </td>\n          </tr>\n        } @empty {\n          <tr>\n            <td class=\"text-zinc-500 text-center\" colspan=\"12\">결과가 없습니다.</td>\n          </tr>\n        }\n      }\n    </tbody>\n  </table>\n</section>\n"
        },
        {
            "name": "TableCellsIconComponent",
            "id": "component-TableCellsIconComponent-ff0188d933df285572446f336e2a0a649745a4681d7947e458ed110bac98ea6b970b8193144799f7149f05dfbb5f71ca7e438f07fd841a9a2132167218ccbb48",
            "file": "src/app/components/atoms/icons/table-cells-icon/table-cells-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-table-cells-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path fill-rule=\"evenodd\"\n          d=\"M1.5 5.625c0-1.036.84-1.875 1.875-1.875h17.25c1.035 0 1.875.84 1.875 1.875v12.75c0 1.035-.84 1.875-1.875 1.875H3.375A1.875 1.875 0 0 1 1.5 18.375V5.625ZM21 9.375A.375.375 0 0 0 20.625 9h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375h7.5a.375.375 0 0 0 .375-.375v-1.5Zm0 3.75a.375.375 0 0 0-.375-.375h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375h7.5a.375.375 0 0 0 .375-.375v-1.5Zm0 3.75a.375.375 0 0 0-.375-.375h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375h7.5a.375.375 0 0 0 .375-.375v-1.5ZM10.875 18.75a.375.375 0 0 0 .375-.375v-1.5a.375.375 0 0 0-.375-.375h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375h7.5ZM3.375 15h7.5a.375.375 0 0 0 .375-.375v-1.5a.375.375 0 0 0-.375-.375h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375Zm0-3.75h7.5a.375.375 0 0 0 .375-.375v-1.5A.375.375 0 0 0 10.875 9h-7.5A.375.375 0 0 0 3 9.375v1.5c0 .207.168.375.375.375Z\"\n          clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 0 1-1.125-1.125M3.375 19.5h7.5c.621 0 1.125-.504 1.125-1.125m-9.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-7.5A1.125 1.125 0 0 1 12 18.375m9.75-12.75c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125m19.5 0v1.5c0 .621-.504 1.125-1.125 1.125M2.25 5.625v1.5c0 .621.504 1.125 1.125 1.125m0 0h17.25m-17.25 0h7.5c.621 0 1.125.504 1.125 1.125M3.375 8.25c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m17.25-3.75h-7.5c-.621 0-1.125.504-1.125 1.125m8.625-1.125c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M12 10.875v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125M13.125 12h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125M20.625 12c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5M12 14.625v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 14.625c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m0 1.5v-1.5m0 0c0-.621.504-1.125 1.125-1.125m0 0h7.5\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-table-cells-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path fill-rule=\"evenodd\"\n              d=\"M1.5 5.625c0-1.036.84-1.875 1.875-1.875h17.25c1.035 0 1.875.84 1.875 1.875v12.75c0 1.035-.84 1.875-1.875 1.875H3.375A1.875 1.875 0 0 1 1.5 18.375V5.625ZM21 9.375A.375.375 0 0 0 20.625 9h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375h7.5a.375.375 0 0 0 .375-.375v-1.5Zm0 3.75a.375.375 0 0 0-.375-.375h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375h7.5a.375.375 0 0 0 .375-.375v-1.5Zm0 3.75a.375.375 0 0 0-.375-.375h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375h7.5a.375.375 0 0 0 .375-.375v-1.5ZM10.875 18.75a.375.375 0 0 0 .375-.375v-1.5a.375.375 0 0 0-.375-.375h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375h7.5ZM3.375 15h7.5a.375.375 0 0 0 .375-.375v-1.5a.375.375 0 0 0-.375-.375h-7.5a.375.375 0 0 0-.375.375v1.5c0 .207.168.375.375.375Zm0-3.75h7.5a.375.375 0 0 0 .375-.375v-1.5A.375.375 0 0 0 10.875 9h-7.5A.375.375 0 0 0 3 9.375v1.5c0 .207.168.375.375.375Z\"\n              clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 0 1-1.125-1.125M3.375 19.5h7.5c.621 0 1.125-.504 1.125-1.125m-9.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-7.5A1.125 1.125 0 0 1 12 18.375m9.75-12.75c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125m19.5 0v1.5c0 .621-.504 1.125-1.125 1.125M2.25 5.625v1.5c0 .621.504 1.125 1.125 1.125m0 0h17.25m-17.25 0h7.5c.621 0 1.125.504 1.125 1.125M3.375 8.25c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m17.25-3.75h-7.5c-.621 0-1.125.504-1.125 1.125m8.625-1.125c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M12 10.875v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125M13.125 12h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125M20.625 12c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5M12 14.625v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 14.625c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m0 1.5v-1.5m0 0c0-.621.504-1.125 1.125-1.125m0 0h7.5\"/>\n      </svg>\n    }\n  `\n})\nexport class TableCellsIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "TablePreviewDialog",
            "id": "component-TablePreviewDialog-21186f99bef3d2dc12eb06f1409c62421368664863417cd6666dc460a708202ac1213c60bfc0507531d2b6a01218ab1ae7c8494d2f52547ae6db57f56cde0f7b",
            "file": "src/app/components/organisms/dialogs/table-preview-dialog/table-preview-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-table-preview-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<etri-table-preview-dialog_\n  [databaseId]=\"data.database_id\"\n  [schema]=\"data.schema\"\n  [table]=\"data.table\"\n  [selectedColumns]=\"data.columns\"\n  (onClose)=\"dialogRef.close()\"\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "inject(DIALOG_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TablePreviewRequest",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(DialogRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TablePreviewDialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { DecimalPipe } from '@angular/common';\nimport { Component, inject, input, OnInit, output, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { TablePreviewRequest } from '../../../../dto';\nimport { TableService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    LoadingComponent,\n    DecimalPipe\n  ],\n  selector: 'etri-table-preview-dialog_',\n  standalone: true,\n  styleUrls: ['table-preview-dialog.component.scss'],\n  templateUrl: 'table-preview-dialog.component.html'\n})\nexport class TablePreviewDialogComponent implements OnInit {\n  readonly onClose = output<void>();\n  readonly loading = signal(false);\n  readonly databaseId = input.required<number>();\n  readonly schema = input.required<string>();\n  readonly table = input.required<string>();\n  readonly selectedColumns = input.required<string[]>();\n  readonly columns = signal<string[]>([]);\n  readonly data = signal<Array<any[]>>([]);\n\n  private readonly tableService = inject(TableService);\n\n  ngOnInit() {\n    this.loadPreviewTable();\n  }\n\n  isNumber(item: any) {\n    return !isNaN(+item);\n  }\n\n  private loadPreviewTable() {\n    const dto: TablePreviewRequest = {\n      database_id: this.databaseId()!,\n      schema: this.schema()!,\n      table: this.table()!,\n      columns: this.selectedColumns()!\n    };\n\n    this.loading.set(true);\n    this.tableService.previewTable(dto).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: res => {\n        this.columns.set(res.columns);\n        this.data.set(res.data);\n      },\n      error: err => {\n        console.error(err);\n        alert(`데이터를 가져오는데 실패했습니다.\\nError: ${err.error?.detail ?? err.message}`);\n      }\n    });\n  }\n}\n\n@Component({\n  imports: [\n    TablePreviewDialogComponent\n  ],\n  selector: 'etri-table-preview-dialog',\n  standalone: true,\n  template: `\n    <etri-table-preview-dialog_\n      [databaseId]=\"data.database_id\"\n      [schema]=\"data.schema\"\n      [table]=\"data.table\"\n      [selectedColumns]=\"data.columns\"\n      (onClose)=\"dialogRef.close()\"\n    />\n  `\n})\nexport class TablePreviewDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: TablePreviewRequest = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "TablePreviewDialogComponent",
            "id": "component-TablePreviewDialogComponent-21186f99bef3d2dc12eb06f1409c62421368664863417cd6666dc460a708202ac1213c60bfc0507531d2b6a01218ab1ae7c8494d2f52547ae6db57f56cde0f7b",
            "file": "src/app/components/organisms/dialogs/table-preview-dialog/table-preview-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-table-preview-dialog_",
            "styleUrls": [
                "table-preview-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "table-preview-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "databaseId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "signal<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "signal<Array<any[]>>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "databaseId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "selectedColumns",
                    "defaultValue": "input.required<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "tableService",
                    "defaultValue": "inject(TableService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isNumber",
                    "args": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadPreviewTable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BaseDialogComponent",
                    "type": "component"
                },
                {
                    "name": "DialogHeaderDirective",
                    "type": "directive"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { DecimalPipe } from '@angular/common';\nimport { Component, inject, input, OnInit, output, signal } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { TablePreviewRequest } from '../../../../dto';\nimport { TableService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    LoadingComponent,\n    DecimalPipe\n  ],\n  selector: 'etri-table-preview-dialog_',\n  standalone: true,\n  styleUrls: ['table-preview-dialog.component.scss'],\n  templateUrl: 'table-preview-dialog.component.html'\n})\nexport class TablePreviewDialogComponent implements OnInit {\n  readonly onClose = output<void>();\n  readonly loading = signal(false);\n  readonly databaseId = input.required<number>();\n  readonly schema = input.required<string>();\n  readonly table = input.required<string>();\n  readonly selectedColumns = input.required<string[]>();\n  readonly columns = signal<string[]>([]);\n  readonly data = signal<Array<any[]>>([]);\n\n  private readonly tableService = inject(TableService);\n\n  ngOnInit() {\n    this.loadPreviewTable();\n  }\n\n  isNumber(item: any) {\n    return !isNaN(+item);\n  }\n\n  private loadPreviewTable() {\n    const dto: TablePreviewRequest = {\n      database_id: this.databaseId()!,\n      schema: this.schema()!,\n      table: this.table()!,\n      columns: this.selectedColumns()!\n    };\n\n    this.loading.set(true);\n    this.tableService.previewTable(dto).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: res => {\n        this.columns.set(res.columns);\n        this.data.set(res.data);\n      },\n      error: err => {\n        console.error(err);\n        alert(`데이터를 가져오는데 실패했습니다.\\nError: ${err.error?.detail ?? err.message}`);\n      }\n    });\n  }\n}\n\n@Component({\n  imports: [\n    TablePreviewDialogComponent\n  ],\n  selector: 'etri-table-preview-dialog',\n  standalone: true,\n  template: `\n    <etri-table-preview-dialog_\n      [databaseId]=\"data.database_id\"\n      [schema]=\"data.schema\"\n      [table]=\"data.table\"\n      [selectedColumns]=\"data.columns\"\n      (onClose)=\"dialogRef.close()\"\n    />\n  `\n})\nexport class TablePreviewDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: TablePreviewRequest = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block max-h-[90vh] overflow-auto;\n}\n",
                    "styleUrl": "table-preview-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<etri-base-dialog\n  [hiddenFooter]=\"true\"\n  (onClose)=\"onClose.emit()\"\n  class=\"w-[90vw]\"\n>\n  <h1 header etriDialogHeader>{{ schema() }}.{{ table() }}</h1>\n  <div class=\"overflow-auto  min-h-[500px] h-[80vh] w-full\">\n    <table class=\"table table-xs\">\n      <thead class=\"sticky top-0 bg-white\">\n      <tr>\n        <th class=\"border-r border-zinc-200\">#</th>\n        @for (column of columns(); track $index) {\n          <th class=\"border-r border-zinc-200 last:border-r-0\">{{ column }}</th>\n        }\n      </tr>\n      </thead>\n      <tbody>\n        @if (loading()) {\n          <tr>\n            <td [colSpan]=\"columns().length + 1\">\n              <etri-loading/>\n            </td>\n          </tr>\n        } @else {\n          @for (row of data(); track $index) {\n            <tr class=\"even:bg-zinc-50 hover:bg-zinc-100\">\n              <th class=\"border-r border-zinc-200\">{{ $index + 1 | number }}</th>\n              @for (item of row; track $index; let i = $index) {\n                @if (isNumber(item)) {\n                  <td class=\"text-right border-r border-zinc-200 last:border-r-0\">{{ item | number }}</td>\n                } @else {\n                  <td>{{ item }}</td>\n                }\n              }\n            </tr>\n          } @empty {\n            <tr>\n              <td class=\"text-zinc-500 text-center\" [colSpan]=\"columns().length + 1\">결과가 없습니다.</td>\n            </tr>\n          }\n        }\n      </tbody>\n    </table>\n  </div>\n</etri-base-dialog>\n"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-5be2d681e04bb73bc94181398acf8f77abbbdff173c06eca5527f669e861321317560c6036584312ada51c0c2d834778f277264cbdf7223e694798bb4d9922b5",
            "file": "src/app/components/molecules/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-tabs",
            "styleUrls": [
                "tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tabs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedIndex",
                    "defaultValue": "model<number | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "selectOption",
                    "defaultValue": "output<{ index: number; option: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "tabOptions",
                    "defaultValue": "input<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "option",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "option",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, model, output } from '@angular/core';\n\n@Component({\n  selector: 'etri-tabs',\n  standalone: true,\n  styleUrls: ['tabs.component.scss'],\n  templateUrl: 'tabs.component.html',\n})\nexport class TabsComponent {\n  tabOptions = input<string[]>();\n  selectedIndex = model<number | null>(null);\n  selectOption = output<{ index: number; option: string }>();\n\n  select(index: number, option: string) {\n    this.selectedIndex.set(index);\n    this.selectOption.emit({ index, option });\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "tabs.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div role=\"tablist\" class=\"tabs tabs-lifted\">\n  @for (option of tabOptions(); track $index) {\n    <button\n      type=\"button\"\n      (click)=\"select($index, option)\"\n      class=\"tab {{ selectedIndex() === $index ? 'tab-active' : '' }}\"\n    >{{ option }}\n    </button>\n  }\n</div>\n"
        },
        {
            "name": "TraindbBannerComponent",
            "id": "component-TraindbBannerComponent-75e74c6fd164c84b0d18b58a1b131e3c247ce7e521ba0a300bbee8b0e9436d5e03a90f8c9f4f912a5313ac9a25397f45d7c455efc3497d16faf7f76c6dcd6c4b",
            "file": "src/app/components/molecules/traindb-banner/traindb-banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-traindb-banner",
            "styleUrls": [
                "traindb-banner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "traindb-banner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "host",
                    "defaultValue": "computed(() => this.traindb()?.host ?? null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "computed(() => this.traindb()?.name ?? null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "port",
                    "defaultValue": "computed(() => this.traindb()?.port ?? null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "traindb",
                    "defaultValue": "input<FindTrainDBDto | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<FindTrainDBDto | null>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IpAnonymizationPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input, InputSignal } from '@angular/core';\nimport { FindTrainDBDto } from '../../../dto';\nimport { IpAnonymizationPipe } from '../../../pipes';\n\n@Component({\n  host: {\n    class: 'flex items-center gap-4 py-2 px-4 bg-white'\n  },\n  selector: 'etri-traindb-banner',\n  standalone: true,\n  styleUrls: ['traindb-banner.component.scss'],\n  templateUrl: 'traindb-banner.component.html',\n  imports: [\n    IpAnonymizationPipe\n  ]\n})\nexport class TraindbBannerComponent {\n  readonly traindb: InputSignal<FindTrainDBDto | null> = input<FindTrainDBDto | null>(null);\n  readonly name = computed(() => this.traindb()?.name ?? null);\n  readonly host = computed(() => this.traindb()?.host ?? null);\n  readonly port = computed(() => this.traindb()?.port ?? null);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "traindb-banner.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<h3 class=\"text-xs text-primary font-semibold\">{{ name() }}</h3>\n<span class=\"text-xs text-zinc-600\">{{ host() | ipAnonymization }}:{{ port() }}</span>\n"
        },
        {
            "name": "TraindbFormPageComponent",
            "id": "component-TraindbFormPageComponent-069d8d2d49753526dcb4adec1a92f670494541259234f57486ae2e2cd94240faddd23a96668115eff5e8b3b3090129049e2fa5895699c404b1e5e707f08c45bf",
            "file": "src/app/routes/traindb/pages/traindb-form-page/traindb-form-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-traindb-form-page",
            "styleUrls": [
                "traindb-form-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "traindb-form-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "testConnectionStatus",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"success\" | \"failure\" | \"loading\" | null",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "testConnection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { delay, finalize, map, of, Subscription, switchMap, tap } from 'rxjs';\nimport { LoadingComponent } from '../../../../components';\nimport { TraindbService } from '../../../../services';\n\n@Component({\n  host: {\n    class: 'page block mx-auto',\n  },\n  imports: [\n    RouterLink,\n    ReactiveFormsModule,\n    LoadingComponent\n  ],\n  selector: 'etri-traindb-form-page',\n  standalone: true,\n  styleUrls: ['traindb-form-page.component.scss'],\n  templateUrl: 'traindb-form-page.component.html'\n})\nexport class TraindbFormPageComponent implements OnInit, OnDestroy {\n  id: number | null = null;\n  testConnectionStatus: 'success' | 'failure' | 'loading' | null = null;\n  loading = false;\n  readonly formGroup: FormGroup;\n  private readonly traindbService = inject(TraindbService);\n\n  private readonly route = inject(ActivatedRoute);\n  private readonly router = inject(Router);\n  private readonly subscription = new Subscription();\n\n  constructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      name: [null, [Validators.required]],\n      host: [null, [Validators.required]],\n      port: [null, [Validators.required]],\n      username: [null],\n      password: [null],\n    });\n  }\n\n  testConnection() {\n    this.testConnectionStatus = 'loading';\n    const dto = this.formGroup.getRawValue();\n    this.traindbService.testConnection({\n      host: dto.host,\n      port: dto.port,\n      username: dto.username,\n      password: dto.password,\n    }).pipe(\n      delay(500)\n    ).subscribe({\n      next: ({ success }) => {\n        this.testConnectionStatus = success ? 'success' : 'failure';\n      },\n      error: err => {\n        console.error(err);\n        this.testConnectionStatus = 'failure';\n      }\n    })\n  }\n\n  submit() {\n    const dto = this.formGroup.getRawValue();\n    this.loading = true;\n    const observable = this.id ? this.traindbService.updateTrainDB(this.id, dto) : this.traindbService.createTrainDB(dto);\n    observable.pipe(\n      finalize(() => this.loading = false),\n    ).subscribe({\n      next: () => this.router.navigate(['/traindb']),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      this.route.params.pipe(\n        map(params => params['id']),\n        tap(id => this.id = id ? +id : null),\n        switchMap(id => id ? this.traindbService.findTrainDB(+id) : of(null))\n      ).subscribe({\n        next: traindb => {\n          if (traindb) this.formGroup.patchValue(traindb);\n        },\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "traindb-form-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<h1>{{ id ? 'Update' : 'Register' }} TrainDB</h1>\n\n<form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  class=\"section elevate p-8 space-y-4\"\n>\n  <div class=\"flex flex-col gap-8\">\n    <label\n      class=\"input input-bordered flex items-center gap-4\"\n    >\n      Name:\n      <input\n        formControlName=\"name\"\n        type=\"text\"\n        placeholder=\"e.g. Etri TrainDB\"\n        class=\"grow\"\n      />\n    </label>\n    <label\n      class=\"input input-bordered flex items-center gap-4\"\n    >\n      Host:\n      <input\n        formControlName=\"host\"\n        type=\"text\"\n        placeholder=\"e.g. 123.123.123.123\"\n        class=\"grow\"\n      />\n    </label>\n    <label\n      class=\"input input-bordered flex items-center gap-4\"\n    >\n      Port:\n      <input\n        formControlName=\"port\"\n        type=\"text\"\n        class=\"grow\"\n        placeholder=\"e.g. 58000\"\n      />\n    </label>\n    <label class=\"input input-bordered flex items-center gap-4\">\n      Username:\n      <input\n        formControlName=\"username\"\n        type=\"text\"\n        placeholder=\"e.g. database_username\"\n        class=\"grow\"\n      />\n    </label>\n    <label class=\"input input-bordered flex items-center gap-4\">\n      Password:\n      <input\n        formControlName=\"password\"\n        type=\"password\"\n        placeholder=\"e.g. database_password\"\n        autocomplete=\"off\"\n        class=\"grow\"\n      />\n    </label>\n  </div>\n  <div class=\"flex gap-4 px-2\">\n    <button\n      type=\"button\"\n      [disabled]=\"formGroup.get('host')?.invalid || formGroup.get('port')?.invalid\"\n      (click)=\"testConnection()\"\n      class=\"text-primary disabled:text-zinc-500\"\n    >Test Connection\n    </button>\n    @if (testConnectionStatus === 'loading') {\n      <etri-loading size=\"xs\"></etri-loading>\n    } @else if (testConnectionStatus === 'failure') {\n      <span class=\"text-error\">Failure</span>\n    } @else if (testConnectionStatus === 'success') {\n      <span class=\"text-secondary\">Success</span>\n    } @else {\n      <span class=\"text-zinc-500\"> - </span>\n    }\n  </div>\n  <div class=\"flex gap-4\">\n    <a\n      routerLink=\"/traindb\"\n      class=\"btn grow no-underline\"\n    >Cancel</a>\n    <button\n      [disabled]=\"formGroup.invalid || loading\"\n      class=\"btn btn-primary grow text-white disabled:btn-disabled\"\n    >\n      @if (loading) {\n        <etri-loading size=\"xs\"></etri-loading>\n      } @else {\n        {{ id ? 'Update' : 'Register' }}\n      }\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "TraindbListPageComponent",
            "id": "component-TraindbListPageComponent-d8603ea22cc2f2693a299dbda6be57951547d6fc5cef2e4f361c5b3757f88f32e5312562e39011d3e8d97ae86589aace74b9549c281d655aa8362130017cb93d",
            "file": "src/app/routes/traindb/pages/traindb-list-page/traindb-list-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-traindb-list-page",
            "styleUrls": [
                "traindb-list-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "traindb-list-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "keyword",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "computed(() => this.traindbService.loading())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbList",
                    "defaultValue": "signal([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<FindTrainDBDto[]>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteTrainDB",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "db",
                            "type": "FindTrainDBDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "db",
                            "type": "FindTrainDBDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadTraindbs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "moveDashboard",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTrainDB",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "IpAnonymizationPipe",
                    "type": "pipe"
                },
                {
                    "name": "PatternFilterPipe",
                    "type": "pipe"
                },
                {
                    "name": "SearchInputComponent",
                    "type": "component"
                },
                {
                    "name": "TrashIconComponent",
                    "type": "component"
                },
                {
                    "name": "PencilSquareIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DecimalPipe } from '@angular/common';\nimport { Component, computed, inject, signal, WritableSignal } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport {\n  LoadingComponent,\n  PencilSquareIconComponent,\n  SearchInputComponent,\n  TrashIconComponent\n} from '../../../../components';\nimport { StorageKey } from '../../../../constants';\nimport { FindTrainDBDto } from '../../../../dto';\nimport { IpAnonymizationPipe, PatternFilterPipe } from '../../../../pipes';\nimport { TraindbService } from '../../../../services';\n\n@Component({\n  imports: [\n    LoadingComponent,\n    DecimalPipe,\n    RouterLink,\n    IpAnonymizationPipe,\n    PatternFilterPipe,\n    SearchInputComponent,\n    TrashIconComponent,\n    PencilSquareIconComponent\n  ],\n  selector: 'etri-traindb-list-page',\n  standalone: true,\n  styleUrls: ['traindb-list-page.component.scss'],\n  templateUrl: 'traindb-list-page.component.html'\n})\nexport class TraindbListPageComponent {\n  readonly traindbList: WritableSignal<FindTrainDBDto[]> = signal([]);\n  readonly loading = computed(() => this.traindbService.loading());\n  readonly keyword = signal('');\n\n  private readonly router = inject(Router);\n  private readonly traindbService = inject(TraindbService);\n\n  constructor() {\n    this.loadTraindbs();\n  }\n\n  async updateTrainDB(event: MouseEvent, id: number) {\n    event.stopPropagation();\n    await this.router.navigate(['/traindb', id, 'update']);\n  }\n\n  deleteTrainDB(event: MouseEvent, db: FindTrainDBDto) {\n    event.stopPropagation();\n    if (!confirm(`${db.name}을 삭제하시겠습니까?`)) return;\n    this.traindbService.deleteTrainDB(db.id).subscribe({\n      next: () => this.loadTraindbs(),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      },\n    })\n  }\n\n  async moveDashboard(event: MouseEvent, id: number) {\n    event.stopPropagation();\n    sessionStorage.setItem(StorageKey.CURRENT_TRAINDB, `${id}`);\n    await this.router.navigate(['/dashboard']);\n  }\n\n  private loadTraindbs() {\n    this.traindbService.searchTrainDB().subscribe({\n      next: list => this.traindbList.set(list),\n      error: console.error,\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page;\n}\n",
                    "styleUrl": "traindb-list-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 37
            },
            "extends": [],
            "templateData": "<h1>TrainDB</h1>\n\n<section class=\"section elevate flex gap-4\">\n  <etri-search-input\n    class=\"inline-block grow max-w-lg\"\n    (onKeyword)=\"keyword.set($event)\"/>\n  <button\n    type=\"button\"\n    routerLink=\"/traindb/register\"\n    class=\"ml-auto btn btn-primary btn-sm text-white no-underline rounded-none\">New</button>\n</section>\n\n<section class=\"section elevate p-0 overflow-auto\">\n  <table class=\"table\">\n    <!-- head -->\n    <thead class=\"sticky top-0\">\n    <tr>\n      <th class=\"text-right\">#</th>\n      <th class=\"text-left\">Name</th>\n      <th class=\"text-left\">Host</th>\n      <th class=\"text-left\">Port</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n      @for (db of traindbList() | patternFilter:keyword():'name'; track $index) {\n        <tr\n          (click)=\"moveDashboard($event, +db.id)\"\n          class=\"even:bg-zinc-50 hover:bg-zinc-100 cursor-pointer\"\n        >\n          <th class=\"text-right\">{{ $index + 1 | number }}</th>\n          <td>{{ db.name }}</td>\n          <td>{{ db.host | ipAnonymization }}</td>\n          <td>{{ db.port }}</td>\n          <td class=\"flex gap-2 py-2 px-4\">\n            <button\n              type=\"button\"\n              (click)=\"deleteTrainDB($event, db)\"\n              class=\"btn btn-warning btn-xs rounded-none text-white\"\n            >\n              <etri-trash-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n            <button\n              type=\"button\"\n              (click)=\"updateTrainDB($event, db.id)\"\n              class=\"btn btn-secondary btn-xs rounded-none no-underline text-white\"\n            >\n              <etri-pencil-square-icon type=\"solid\" class=\"size-4\"/>\n            </button>\n          </td>\n        </tr>\n      } @empty {\n        <tr>\n          @if (loading()) {\n            <td colspan=\"5\">\n              <div class=\"flex flex-col gap-2 items-center py-4\">\n                <etri-loading/>\n                <span class=\"text-zinc-500 text-xs\">Loading...</span>\n              </div>\n            </td>\n          } @else {\n            <td class=\"text-zinc-500 text-center\" colspan=\"5\">결과가 없습니다.</td>\n          }\n        </tr>\n      }\n    </tbody>\n  </table>\n</section>\n"
        },
        {
            "name": "TrainModelDataComponent",
            "id": "component-TrainModelDataComponent-52251dd47d36e795401562da8089cfdc530000848d8444de4bee7a2a565e42f3ae84f5ee3c606362f9538746d12ec7f6ed023bd945f5a15a5e5e828dd014d87e",
            "file": "src/app/components/organisms/train-model-data/train-model-data.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-train-model-data",
            "styleUrls": [
                "train-model-data.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "train-model-data.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "columnsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "input<Column[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "columnsLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": false
                },
                {
                    "name": "onPreview",
                    "defaultValue": "output<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "selectedColumns",
                    "defaultValue": "model<Column[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "column",
                            "type": "Column",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "Column",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleColumn",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "column",
                            "type": "Column",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "column",
                            "type": "Column",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, effect, input, model, output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Column } from '../../../dto';\nimport { LoadingComponent } from '../../atoms';\n\n@Component({\n  selector: 'etri-train-model-data',\n  standalone: true,\n  styleUrls: ['train-model-data.component.scss'],\n  templateUrl: 'train-model-data.component.html',\n  imports: [\n    LoadingComponent,\n    FormsModule\n  ]\n})\nexport class TrainModelDataComponent {\n  columnsLoading = input(false);\n  columns = input<Column[]>([]);\n  selectedColumns = model<Column[]>([]);\n  onPreview = output<string[]>();\n\n  constructor() {\n    effect(() => {\n      console.log(this.selectedColumns());\n    });\n  }\n\n\n  toggleColumn(event: MouseEvent, column: Column) {\n    // event.preventDefault();\n    const idx = this.selectedColumns().map(col => col.name).indexOf(column.name);\n    const columns = this.selectedColumns();\n    if (idx !== -1) columns.splice(idx, 1);\n    else columns.push(column);\n    this.selectedColumns.set([...columns]);\n  }\n\n  isSelected(column: Column) {\n    return this.selectedColumns().map(col => col.name).includes(column.name);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "train-model-data.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "extends": [],
            "templateData": "<div class=\"px-4\">\n  <table class=\"table\">\n    <thead class=\"sticky top-0\">\n    <tr>\n      <th class=\"text-left\"></th>\n      <th class=\"text-left\">Name</th>\n      <th class=\"text-left\">Type</th>\n    </tr>\n    </thead>\n    <tbody>\n      @if (columnsLoading()) {\n        <tr>\n          <td colspan=\"3\">\n            <div class=\"flex flex-col gap-2 items-center py-4\">\n              <etri-loading/>\n              <span class=\"text-zinc-500 text-xs\">Loading...</span>\n            </div>\n          </td>\n        </tr>\n      } @else {\n        @for (column of columns(); track $index) {\n          <tr>\n            <td>\n              <input\n                type=\"checkbox\"\n                [checked]=\"isSelected(column)\"\n                (click)=\"toggleColumn($event, column)\"\n                class=\"checkbox checkbox-sm checkbox-primary\"\n              />\n            </td>\n            <td>{{ column.name }}</td>\n            <td>{{ column.type }}</td>\n          </tr>\n        } @empty {\n          <tr>\n            <td class=\"text-zinc-500 text-center\" colspan=\"3\">결과가 없습니다.</td>\n          </tr>\n        }\n      }\n    </tbody>\n  </table>\n</div>\n"
        },
        {
            "name": "TrainModelPageComponent",
            "id": "component-TrainModelPageComponent-ea8739a04d7586d29e47a0acd6299d241194e4dc30393aa20795baee76e772b7e216689766feb395f7ac1eb0e2cf33b7bfd587c840bb006aefc1787fd6c29268",
            "file": "src/app/routes/models/pages/train-model-page/train-model-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-train-model-page",
            "styleUrls": [
                "train-model-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "train-model-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "signal<Column[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "columnsLoading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "conflictName",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "databaseList",
                    "defaultValue": "signal<FindDatabase[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "databaseService",
                    "defaultValue": "inject(DatabaseService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "dialog",
                    "defaultValue": "inject(Dialog)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hyperParameterList",
                    "defaultValue": "signal<HyperParameter[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hyperParameters",
                    "defaultValue": "signal<HyperParameter[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hyperParameterService",
                    "defaultValue": "inject(HyperParameterService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "modelService",
                    "defaultValue": "inject(ModelService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "modeltypes",
                    "defaultValue": "computed(() => [...new Set(this.hyperParameterList().map(param => param.modeltype))])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "schemas",
                    "defaultValue": "signal<Schema[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "selected",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "selectedColumns",
                    "defaultValue": "signal<Column[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "submitting",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "tableService",
                    "defaultValue": "inject(TableService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeHyperParameters",
                    "args": [
                        {
                            "name": "params",
                            "type": "TrainModelOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "TrainModelOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadDatabases",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadHyperParameters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "preview",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTable",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "IpAnonymizationPipe",
                    "type": "pipe"
                },
                {
                    "name": "CircleStackIconComponent",
                    "type": "component"
                },
                {
                    "name": "TableCellsIconComponent",
                    "type": "component"
                },
                {
                    "name": "DatabaseTablesComponent",
                    "type": "component"
                },
                {
                    "name": "TabsComponent",
                    "type": "component"
                },
                {
                    "name": "TrainModelDataComponent",
                    "type": "component"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "HyperParameterInputsComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Dialog } from '@angular/cdk/dialog';\nimport { JsonPipe } from '@angular/common';\nimport { Component, computed, effect, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { distinctUntilChanged, finalize, of, Subscription, switchMap, tap } from 'rxjs';\nimport {\n  CircleStackIconComponent,\n  HyperParameterInputsComponent,\n  LoadingComponent,\n  TableCellsIconComponent,\n  TablePreviewDialog,\n  TabsComponent,\n  TrainModelDataComponent\n} from '../../../../components';\nimport { DatabaseTablesComponent } from '../../../../components/molecules/database-tables';\nimport { Column, FindDatabase, HyperParameter, Schema, Table, TrainModelOption } from '../../../../dto';\nimport { IpAnonymizationPipe } from '../../../../pipes';\nimport {\n  DatabaseService,\n  HyperParameterService,\n  ModelService,\n  TableService,\n  TraindbService\n} from '../../../../services';\n\n@Component({\n  selector: 'etri-train-model-page',\n  standalone: true,\n  styleUrls: ['train-model-page.component.scss'],\n  templateUrl: 'train-model-page.component.html',\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IpAnonymizationPipe,\n    CircleStackIconComponent,\n    TableCellsIconComponent,\n    DatabaseTablesComponent,\n    TabsComponent,\n    TrainModelDataComponent,\n    LoadingComponent,\n    JsonPipe,\n    HyperParameterInputsComponent\n  ]\n})\nexport class TrainModelPageComponent implements OnInit, OnDestroy {\n  selected: { schema: string; table: Table; } | null = null;\n  readonly conflictName = signal(false);\n  readonly databaseList = signal<FindDatabase[]>([]);\n  readonly schemas = signal<Schema[]>([]);\n  readonly columnsLoading = signal(false);\n  readonly columns = signal<Column[]>([]);\n  readonly selectedColumns = signal<Column[]>([]);\n  readonly hyperParameterList = signal<HyperParameter[]>([]);\n  readonly modeltypes = computed(() => [...new Set(this.hyperParameterList().map(param => param.modeltype))]);\n  readonly hyperParameters = signal<HyperParameter[]>([]);\n  readonly submitting = signal(false);\n\n  readonly formGroup: FormGroup;\n  readonly tableService = inject(TableService);\n  private readonly databaseService = inject(DatabaseService);\n  private readonly traindbService = inject(TraindbService);\n  private readonly hyperParameterService = inject(HyperParameterService);\n  private readonly modelService = inject(ModelService);\n  private readonly router = inject(Router);\n  private readonly dialog = inject(Dialog);\n  private readonly subscription = new Subscription();\n\n  constructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      name: [null, [Validators.required]],\n      database_id: [null, [Validators.required]],\n      schema: [null, [Validators.required]],\n      table: [null, [Validators.required]],\n      columns: [null, [Validators.required]],\n      modeltype: [null, [Validators.required]],\n      sample: [null],\n      options: [null, [Validators.required]],\n    });\n    this.loadDatabases();\n    this.loadHyperParameters();\n    effect(() => {\n      const columns = this.selectedColumns();\n      this.formGroup.get('columns')?.setValue(columns.length > 0 ? columns.map(c => c.name) : null);\n    });\n  }\n\n  selectTable(event: { schema: string; table: Table; }) {\n    this.selected = event;\n    this.formGroup.get('schema')?.setValue(event.schema);\n    this.formGroup.get('table')?.setValue(event.table.name);\n    const databaseId = this.formGroup.get('database_id')!.value;\n\n    this.columnsLoading.set(true);\n    this.tableService.describeTable(databaseId, event.schema, event.table.name).pipe(\n      finalize(() => this.columnsLoading.set(false))\n    ).subscribe({\n      next: columns => {\n        this.columns.set([...columns]);\n        this.selectedColumns.set([...columns]);\n      },\n      error: console.error\n    });\n  }\n\n  preview() {\n    this.dialog.open(TablePreviewDialog, {\n      data: {\n        database_id: this.formGroup.get('database_id')!.value,\n        schema: this.formGroup.get('schema')!.value,\n        table: this.formGroup.get('table')!.value,\n        columns: this.selectedColumns().map(col => col.name),\n      }\n    });\n  }\n\n  changeHyperParameters(params: TrainModelOption[]) {\n    this.formGroup.get('options')?.setValue(params.length > 0 ? params : null);\n  }\n\n  submit() {\n    const dto = this.formGroup.getRawValue();\n    this.submitting.set(true);\n    this.modelService.trainModel(dto).pipe(\n      finalize(() => this.submitting.set(false))\n    ).subscribe({\n      next: () => this.router.navigate(['/models']),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          alert('이미 사용 중인 모델명입니다.');\n          this.conflictName.set(true);\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    })\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      this.formGroup.get('database_id')!.valueChanges.pipe(\n        distinctUntilChanged(),\n        tap(() => {\n          this.columns.set([]);\n          this.selectedColumns.set([]);\n          this.selected = null;\n          this.formGroup.get('schema')?.reset();\n          this.formGroup.get('table')?.reset();\n          this.formGroup.get('columns')?.reset();\n        }),\n        switchMap(id => id ? this.tableService.searchTables(+id) : of([]))\n      ).subscribe({\n        next: schemas => this.schemas.set(schemas),\n        error: console.error\n      })\n    );\n\n    this.subscription.add(\n      this.formGroup.get('modeltype')!.valueChanges.subscribe({\n        next: modeltype => this.hyperParameters.set([...this.hyperParameterList().filter(param => param.modeltype === modeltype)]),\n        error: console.error\n      })\n    );\n\n    this.subscription.add(\n      this.formGroup.get('name')!.valueChanges.subscribe(() => this.conflictName.set(false))\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private loadDatabases() {\n    const traindbId = this.traindbService.currentId();\n    this.databaseService.searchDatabases(traindbId!).subscribe({\n      next: list => this.databaseList.set(list),\n      error: err => {\n        console.error(err);\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      },\n    });\n  }\n\n  private loadHyperParameters() {\n    const traindbId = this.traindbService.currentId();\n    this.hyperParameterService.searchHyperParameters(traindbId!).subscribe({\n      next: list => this.hyperParameterList.set(list),\n      error: err => {\n        console.error(err);\n      }\n    })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply page;\n}\n",
                    "styleUrl": "train-model-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 67,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<h1>Train Model</h1>\n\n<form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  class=\"space-y-1\"\n>\n  <section class=\"section elevate flex items-center gap-4 w-full\">\n    <label\n      class=\"input input-bordered flex items-center gap-4 w-full max-w-md {{ conflictName() ? 'input-error' : '' }}\"\n    >\n      Name:\n      <input\n        formControlName=\"name\"\n        type=\"text\"\n        placeholder=\"Input model name\"\n        class=\"grow\"\n      />\n    </label>\n    <button\n      [disabled]=\"formGroup.invalid || submitting()\"\n      class=\"ml-auto btn btn-primary text-white\"\n    >\n      @if (submitting()) {\n        <etri-loading/>\n      } @else {\n        Train\n      }\n    </button>\n  </section>\n  <div class=\"flex gap-1\">\n    <section class=\"section elevate shrink-0 max-w-md\">\n      <h2 class=\"mt-0\">Select Database Table</h2>\n      <div class=\"pb-4 border-b border-zinc-300\">\n        <select\n          formControlName=\"database_id\"\n          class=\"select select-bordered\"\n        >\n          <option [ngValue]=\"null\" disabled selected>Select Database</option>\n          @for (database of databaseList(); track database.id) {\n            <option\n              [ngValue]=\"database.id\"\n            >{{ database.name }}({{ database.host | ipAnonymization }}:{{ database.port }})\n            </option>\n          }\n        </select>\n      </div>\n      <div class=\"p-4\">\n        <div class=\"h-[350px] w-[300px] overflow-auto\">\n          @for (schema of schemas(); track schema) {\n            <etri-database-tables\n              [schema]=\"schema.name\"\n              [selected]=\"selected\"\n              [tables]=\"schema.tables\"\n              (selectTable)=\"selectTable($event)\"\n            ></etri-database-tables>\n          } @empty {\n            @if (tableService.loading()) {\n              <etri-loading/>\n            } @else if (!formGroup.get('database')?.value) {\n              <span class=\"text-zinc-500\">데이터베이스 서버를 선택하세요.</span>\n            } @else {\n              <span class=\"text-zinc-500\">결과가 없습니다.</span>\n            }\n          }\n        </div>\n      </div>\n    </section>\n    <section class=\"section elevate grow\">\n      <h2 class=\"mt-0\">Data Selection</h2>\n      <div class=\"mb-4 flex gap-4 items-center\">\n        <label class=\"flex items-center gap-4\">\n          선택된 테이블:\n          @if (!selected) {\n            <span class=\"text-zinc-500\">없음</span>\n          } @else {\n            <div\n              class=\"flex items-center gap-2 text-primary font-semibold\"\n            >\n              <span class=\"badge badge-secondary badge-sm\">{{ selected.table.type }}</span>\n              <span>{{ selected.schema }}.{{ selected.table.name }}</span>\n            </div>\n          }\n        </label>\n        <button\n          type=\"button\"\n          [disabled]=\"selectedColumns().length === 0\"\n          (click)=\"preview()\"\n          class=\"ml-auto btn btn-secondary btn-sm text-white\"\n        >Preview</button>\n      </div>\n      <label\n        class=\"input input-bordered flex items-center gap-4 w-full max-w-xs {{ conflictName() ? 'input-error' : '' }}\"\n      >\n        Sample:\n        <input\n          formControlName=\"sample\"\n          type=\"text\"\n          placeholder=\"Sample, default 100\"\n          class=\"grow text-right\"\n        />\n        %\n      </label>\n      <etri-train-model-data\n        [columnsLoading]=\"columnsLoading()\"\n        [columns]=\"columns()\"\n        [selectedColumns]=\"selectedColumns()\"\n        (selectedColumnsChange)=\"selectedColumns.set($event)\"\n      />\n    </section>\n  </div>\n  <section class=\"section elevate grow\">\n    <h2 class=\"mt-0\">Model Type & Hyper Parameter</h2>\n    <div class=\"flex flex-col items-start gap-4\">\n      <select\n        formControlName=\"modeltype\"\n        class=\"select select-bordered\"\n      >\n        <option [ngValue]=\"null\" disabled selected>Select Model Type</option>\n        @for (modeltype of modeltypes(); track $index) {\n          <option [ngValue]=\"modeltype\">{{ modeltype }}</option>\n        }\n      </select>\n      @if (!formGroup.get('modeltype')?.value) {\n        <span class=\"px-4 text-zinc-500\">모델타입을 선택해주세요.</span>\n      }\n      <etri-hyper-parameter-inputs\n        [hyperparameters]=\"hyperParameters()\"\n        (onChange)=\"changeHyperParameters($event)\"\n      ></etri-hyper-parameter-inputs>\n\n    </div>\n  </section>\n</form>\n"
        },
        {
            "name": "TrashIconComponent",
            "id": "component-TrashIconComponent-8f8785975507449578c200f12dd2f74f20ee6436047d2babab7e17933e6543e82f594fab3a9eb27ea52be9f6b718caa03e05223b12902deb3cd01ea87780535d",
            "file": "src/app/components/atoms/icons/trash-icon/trash-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-trash-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path fill-rule=\"evenodd\"\n          d=\"M16.5 4.478v.227a48.816 48.816 0 0 1 3.878.512.75.75 0 1 1-.256 1.478l-.209-.035-1.005 13.07a3 3 0 0 1-2.991 2.77H8.084a3 3 0 0 1-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 0 1-.256-1.478A48.567 48.567 0 0 1 7.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 0 1 3.369 0c1.603.051 2.815 1.387 2.815 2.951Zm-6.136-1.452a51.196 51.196 0 0 1 3.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 0 0-6 0v-.113c0-.794.609-1.428 1.364-1.452Zm-.355 5.945a.75.75 0 1 0-1.5.058l.347 9a.75.75 0 1 0 1.499-.058l-.346-9Zm5.48.058a.75.75 0 1 0-1.498-.058l-.347 9a.75.75 0 0 0 1.5.058l.345-9Z\"\n          clip-rule=\"evenodd\"/>\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n          d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"/>\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-trash-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path fill-rule=\"evenodd\"\n              d=\"M16.5 4.478v.227a48.816 48.816 0 0 1 3.878.512.75.75 0 1 1-.256 1.478l-.209-.035-1.005 13.07a3 3 0 0 1-2.991 2.77H8.084a3 3 0 0 1-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 0 1-.256-1.478A48.567 48.567 0 0 1 7.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 0 1 3.369 0c1.603.051 2.815 1.387 2.815 2.951Zm-6.136-1.452a51.196 51.196 0 0 1 3.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 0 0-6 0v-.113c0-.794.609-1.428 1.364-1.452Zm-.355 5.945a.75.75 0 1 0-1.5.058l.347 9a.75.75 0 1 0 1.499-.058l-.346-9Zm5.48.058a.75.75 0 1 0-1.498-.058l-.347 9a.75.75 0 0 0 1.5.058l.345-9Z\"\n              clip-rule=\"evenodd\"/>\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n              d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"/>\n      </svg>\n    }\n  `\n})\nexport class TrashIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        },
        {
            "name": "UpdateModelDialog",
            "id": "component-UpdateModelDialog-e5e059e28bc96424e840c66fd39ada019633eb3ae9c7106d0f51975ede5aaf0fef8df34c5306e53a9a2326bb2b5121575e7e24096d6a033f9b78a09cd04f45e6",
            "file": "src/app/components/organisms/dialogs/update-model-dialog/update-model-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-update-model-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<etri-update-model-dialog_\n  [model]=\"data\"\n  (onClose)=\"dialogRef.close($event)\"\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "inject(DIALOG_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Model",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(DialogRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "UpdateModelDialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { Component, inject, input, OnInit, output, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { finalize } from 'rxjs';\nimport { Model, UpdateModel } from '../../../../dto';\nimport { ModelService, TraindbService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    FormsModule,\n    LoadingComponent,\n  ],\n  selector: 'etri-update-model-dialog_',\n  standalone: true,\n  styleUrls: ['update-model-dialog.component.scss'],\n  templateUrl: 'update-model-dialog.component.html'\n})\nexport class UpdateModelDialogComponent implements OnInit {\n  name: string | null = null;\n  status: string | null = null;\n\n  readonly onClose = output<boolean>();\n  readonly loading = signal(false);\n  readonly model = input.required<Model>();\n  readonly conflictName = signal(false);\n  private readonly traindbService = inject(TraindbService);\n  private readonly modelService = inject(ModelService);\n\n  updateModel() {\n    const traindbId = this.traindbService.currentId();\n    const dto: UpdateModel = {\n      name: this.model().name === this.name ? null : this.name,\n      status: this.model().status === this.status ? null : this.status,\n    };\n    this.loading.set(true);\n    this.modelService.updateModel(traindbId!, this.model().name, dto).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: () => this.onClose.emit(true),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName.set(true);\n          alert('이미 사용 중인 모델명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      },\n    });\n  }\n\n  changeName(name: string) {\n    this.name = name;\n    if (this.conflictName()) this.conflictName.set(false);\n  }\n\n  ngOnInit() {\n    this.name = this.model().name;\n    this.status = this.model().status;\n  }\n}\n\n@Component({\n  imports: [\n    UpdateModelDialogComponent\n  ],\n  selector: 'etri-update-model-dialog',\n  standalone: true,\n  template: `\n    <etri-update-model-dialog_\n      [model]=\"data\"\n      (onClose)=\"dialogRef.close($event)\"\n    />\n  `\n})\nexport class UpdateModelDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: Model = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UpdateModelDialogComponent",
            "id": "component-UpdateModelDialogComponent-e5e059e28bc96424e840c66fd39ada019633eb3ae9c7106d0f51975ede5aaf0fef8df34c5306e53a9a2326bb2b5121575e7e24096d6a033f9b78a09cd04f45e6",
            "file": "src/app/components/organisms/dialogs/update-model-dialog/update-model-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-update-model-dialog_",
            "styleUrls": [
                "update-model-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "update-model-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "conflictName",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "modelService",
                    "defaultValue": "inject(ModelService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "status",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateModel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BaseDialogComponent",
                    "type": "component"
                },
                {
                    "name": "DialogHeaderDirective",
                    "type": "directive"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { Component, inject, input, OnInit, output, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { finalize } from 'rxjs';\nimport { Model, UpdateModel } from '../../../../dto';\nimport { ModelService, TraindbService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    FormsModule,\n    LoadingComponent,\n  ],\n  selector: 'etri-update-model-dialog_',\n  standalone: true,\n  styleUrls: ['update-model-dialog.component.scss'],\n  templateUrl: 'update-model-dialog.component.html'\n})\nexport class UpdateModelDialogComponent implements OnInit {\n  name: string | null = null;\n  status: string | null = null;\n\n  readonly onClose = output<boolean>();\n  readonly loading = signal(false);\n  readonly model = input.required<Model>();\n  readonly conflictName = signal(false);\n  private readonly traindbService = inject(TraindbService);\n  private readonly modelService = inject(ModelService);\n\n  updateModel() {\n    const traindbId = this.traindbService.currentId();\n    const dto: UpdateModel = {\n      name: this.model().name === this.name ? null : this.name,\n      status: this.model().status === this.status ? null : this.status,\n    };\n    this.loading.set(true);\n    this.modelService.updateModel(traindbId!, this.model().name, dto).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: () => this.onClose.emit(true),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName.set(true);\n          alert('이미 사용 중인 모델명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      },\n    });\n  }\n\n  changeName(name: string) {\n    this.name = name;\n    if (this.conflictName()) this.conflictName.set(false);\n  }\n\n  ngOnInit() {\n    this.name = this.model().name;\n    this.status = this.model().status;\n  }\n}\n\n@Component({\n  imports: [\n    UpdateModelDialogComponent\n  ],\n  selector: 'etri-update-model-dialog',\n  standalone: true,\n  template: `\n    <etri-update-model-dialog_\n      [model]=\"data\"\n      (onClose)=\"dialogRef.close($event)\"\n    />\n  `\n})\nexport class UpdateModelDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: Model = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block w-[90vw] max-w-[600px] max-h-[95vh];\n}\n",
                    "styleUrl": "update-model-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<etri-base-dialog\n  (onClose)=\"onClose.emit(false)\"\n>\n  <h1 header etriDialogHeader>Update Model</h1>\n  <div class=\"flex flex-col items-start gap-4\">\n    <label\n      class=\"input input-bordered flex items-center gap-4 w-full max-w-md {{ conflictName() ? 'input-error' : '' }}\"\n    >\n      Name:\n      <input\n        type=\"text\"\n        [ngModel]=\"name\"\n        (ngModelChange)=\"changeName($event)\"\n        placeholder=\"Input model name\"\n        class=\"grow\"\n      />\n    </label>\n\n    <select\n      [(ngModel)]=\"status\"\n      class=\"select select-bordered\"\n    >\n      <option [ngValue]=\"null\" disabled selected>Select Status</option>\n      <option value=\"ENABLED\">ENABLED</option>\n      <option value=\"DISABLED\">DISABLED</option>\n    </select>\n  </div>\n  <div footer class=\"flex justify-end items-center gap-4\">\n    <button\n      type=\"button\"\n      (click)=\"onClose.emit(false)\"\n      class=\"btn btn-sm\"\n    >Cancel\n    </button>\n    <button\n      type=\"button\"\n      [disabled]=\"loading() || !name?.trim() || !status\"\n      (click)=\"updateModel()\"\n      class=\"btn btn-sm btn-primary text-white\"\n    >\n      @if (loading()) {\n        <etri-loading/>\n      } @else {\n        Update\n      }\n    </button>\n  </div>\n</etri-base-dialog>\n"
        },
        {
            "name": "UpdateSynopsisDialog",
            "id": "component-UpdateSynopsisDialog-27eefc2e90ed5bc07e91c4e9e28ef9c811855125ac238372bc052f549d73b9c810e149fda0906a8007dec0ea528bc7966be46b35d8c183935ee7c8d67c8a7b35",
            "file": "src/app/components/organisms/dialogs/update-synopsis-dialog/update-synopsis-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-update-synopsis-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<etri-update-synopsis-dialog_\n  [synopsis]=\"data\"\n  (onClose)=\"dialogRef.close($event)\"\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "inject(DIALOG_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Synopsis",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(DialogRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "UpdateSynopsisDialogComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { Component, inject, input, OnInit, output, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { finalize } from 'rxjs';\nimport { Synopsis, UpdateSynopsis } from '../../../../dto';\nimport { SynopsisService, TraindbService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    FormsModule,\n    LoadingComponent\n  ],\n  selector: 'etri-update-synopsis-dialog_',\n  standalone: true,\n  styleUrls: ['update-synopsis-dialog.component.scss'],\n  templateUrl: 'update-synopsis-dialog.component.html'\n})\nexport class UpdateSynopsisDialogComponent implements OnInit {\n  name: string | null = null;\n  status: string | null = null;\n\n  readonly onClose = output<boolean>();\n  readonly loading = signal(false);\n  readonly synopsis = input.required<Synopsis>();\n  readonly conflictName = signal(false);\n  private readonly traindbService = inject(TraindbService);\n  private readonly synopsysService = inject(SynopsisService);\n\n  updateSynopsis() {\n    const traindbId = this.traindbService.currentId();\n    const dto: UpdateSynopsis = {\n      name: this.synopsis().name === this.name ? null : this.name,\n      status: this.synopsis().status === this.status ? null : this.status,\n    };\n    this.loading.set(true);\n    this.synopsysService.updateSynopsis(traindbId!, this.synopsis().name, dto).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: () => this.onClose.emit(true),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName.set(true);\n          alert('이미 사용 중인 시놉시스명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    });\n  }\n\n  changeName(name: string) {\n    this.name = name;\n    if (this.conflictName()) this.conflictName.set(false);\n  }\n\n  ngOnInit() {\n    this.name = this.synopsis().name;\n    this.status = this.synopsis().status;\n  }\n}\n\n@Component({\n  imports: [\n    UpdateSynopsisDialogComponent\n  ],\n  selector: 'etri-update-synopsis-dialog',\n  standalone: true,\n  template: `\n    <etri-update-synopsis-dialog_\n      [synopsis]=\"data\"\n      (onClose)=\"dialogRef.close($event)\"\n    />\n  `\n})\nexport class UpdateSynopsisDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: Synopsis = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UpdateSynopsisDialogComponent",
            "id": "component-UpdateSynopsisDialogComponent-27eefc2e90ed5bc07e91c4e9e28ef9c811855125ac238372bc052f549d73b9c810e149fda0906a8007dec0ea528bc7966be46b35d8c183935ee7c8d67c8a7b35",
            "file": "src/app/components/organisms/dialogs/update-synopsis-dialog/update-synopsis-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-update-synopsis-dialog_",
            "styleUrls": [
                "update-synopsis-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "update-synopsis-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "synopsis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "conflictName",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "status",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "synopsis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "synopsysService",
                    "defaultValue": "inject(SynopsisService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "traindbService",
                    "defaultValue": "inject(TraindbService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateSynopsis",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BaseDialogComponent",
                    "type": "component"
                },
                {
                    "name": "DialogHeaderDirective",
                    "type": "directive"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DIALOG_DATA, DialogRef } from '@angular/cdk/dialog';\nimport { Component, inject, input, OnInit, output, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { finalize } from 'rxjs';\nimport { Synopsis, UpdateSynopsis } from '../../../../dto';\nimport { SynopsisService, TraindbService } from '../../../../services';\nimport { DialogHeaderDirective, LoadingComponent } from '../../../atoms';\nimport { BaseDialogComponent } from '../base-dialog';\n\n@Component({\n  imports: [\n    BaseDialogComponent,\n    DialogHeaderDirective,\n    FormsModule,\n    LoadingComponent\n  ],\n  selector: 'etri-update-synopsis-dialog_',\n  standalone: true,\n  styleUrls: ['update-synopsis-dialog.component.scss'],\n  templateUrl: 'update-synopsis-dialog.component.html'\n})\nexport class UpdateSynopsisDialogComponent implements OnInit {\n  name: string | null = null;\n  status: string | null = null;\n\n  readonly onClose = output<boolean>();\n  readonly loading = signal(false);\n  readonly synopsis = input.required<Synopsis>();\n  readonly conflictName = signal(false);\n  private readonly traindbService = inject(TraindbService);\n  private readonly synopsysService = inject(SynopsisService);\n\n  updateSynopsis() {\n    const traindbId = this.traindbService.currentId();\n    const dto: UpdateSynopsis = {\n      name: this.synopsis().name === this.name ? null : this.name,\n      status: this.synopsis().status === this.status ? null : this.status,\n    };\n    this.loading.set(true);\n    this.synopsysService.updateSynopsis(traindbId!, this.synopsis().name, dto).pipe(\n      finalize(() => this.loading.set(false))\n    ).subscribe({\n      next: () => this.onClose.emit(true),\n      error: err => {\n        console.error(err);\n        if (err.status === 409) {\n          this.conflictName.set(true);\n          alert('이미 사용 중인 시놉시스명입니다.');\n          return;\n        }\n        alert(`Error: ${err.error?.detail ?? err.message}`);\n      }\n    });\n  }\n\n  changeName(name: string) {\n    this.name = name;\n    if (this.conflictName()) this.conflictName.set(false);\n  }\n\n  ngOnInit() {\n    this.name = this.synopsis().name;\n    this.status = this.synopsis().status;\n  }\n}\n\n@Component({\n  imports: [\n    UpdateSynopsisDialogComponent\n  ],\n  selector: 'etri-update-synopsis-dialog',\n  standalone: true,\n  template: `\n    <etri-update-synopsis-dialog_\n      [synopsis]=\"data\"\n      (onClose)=\"dialogRef.close($event)\"\n    />\n  `\n})\nexport class UpdateSynopsisDialog {\n  readonly dialogRef = inject(DialogRef);\n  readonly data: Synopsis = inject(DIALOG_DATA);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply block max-w-[400px] max-h-[90vh];\n}\n",
                    "styleUrl": "update-synopsis-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<etri-base-dialog\n  (onClose)=\"onClose.emit(false)\"\n>\n  <h1 header etriDialogHeader>Update Synopsis</h1>\n  <div class=\"flex flex-col items-start gap-4\">\n    <label\n      class=\"input input-bordered flex items-center gap-4 w-full max-w-md {{ conflictName() ? 'input-error' : '' }}\"\n    >\n      Name:\n      <input\n        type=\"text\"\n        [ngModel]=\"name\"\n        (ngModelChange)=\"changeName($event)\"\n        placeholder=\"Input model name\"\n        class=\"grow\"\n      />\n    </label>\n\n    <select\n      [(ngModel)]=\"status\"\n      class=\"select select-bordered\"\n    >\n      <option [ngValue]=\"null\" disabled selected>Select Status</option>\n      <option value=\"ENABLED\">ENABLED</option>\n      <option value=\"DISABLED\">DISABLED</option>\n    </select>\n  </div>\n  <div footer class=\"flex justify-end items-center gap-4\">\n    <button\n      type=\"button\"\n      (click)=\"onClose.emit(false)\"\n      class=\"btn btn-sm\"\n    >Cancel\n    </button>\n    <button\n      type=\"button\"\n      [disabled]=\"loading() || !name?.trim() || !status\"\n      (click)=\"updateSynopsis()\"\n      class=\"btn btn-sm btn-primary text-white\"\n    >\n      @if (loading()) {\n        <etri-loading/>\n      } @else {\n        Update\n      }\n    </button>\n  </div>\n</etri-base-dialog>\n"
        },
        {
            "name": "XMarkIconComponent",
            "id": "component-XMarkIconComponent-27664f7f4eb12217b948ecfc5e232595bf7023dc2a35d43cfd9341bf6970ae3d8c1a31eb54988b86227b9772640242bc2f107313a2d4bb10753b68ce2452fd7a",
            "file": "src/app/components/atoms/icons/x-mark-icon/x-mark-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "etri-x-mark-icon",
            "styleUrls": [],
            "styles": [],
            "template": "@if (type() === 'solid') {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path fill-rule=\"evenodd\" d=\"M5.47 5.47a.75.75 0 0 1 1.06 0L12 10.94l5.47-5.47a.75.75 0 1 1 1.06 1.06L13.06 12l5.47 5.47a.75.75 0 1 1-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 0 1-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\" />\n  </svg>\n} @else {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    [class]=\"class()\"\n  >\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n  </svg>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "input<string>('size-6')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "input<'solid' | 'outline'>('outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<\"solid\" | \"outline\">",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "BaseIconDirective"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BaseIconDirective } from '../base-icon.directive';\n\n@Component({\n  selector: 'etri-x-mark-icon',\n  standalone: true,\n  template: `\n    @if (type() === 'solid') {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path fill-rule=\"evenodd\" d=\"M5.47 5.47a.75.75 0 0 1 1.06 0L12 10.94l5.47-5.47a.75.75 0 1 1 1.06 1.06L13.06 12l5.47 5.47a.75.75 0 1 1-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 0 1-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\" />\n      </svg>\n    } @else {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        [class]=\"class()\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n      </svg>\n    }\n  `\n})\nexport class XMarkIconComponent extends BaseIconDirective {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseIconDirective"
            ]
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(appRoutes, withViewTransitions()),\n    provideHttpClient(),\n    importProvidersFrom(\n      MonacoEditorModule.forRoot(monacoConfig)\n    )\n  ]\n}"
            },
            {
                "name": "CHART_TYPES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/dto/dashboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Object.values(ChartType)"
            },
            {
                "name": "COLUMN_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/columns.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Column[]",
                "defaultValue": "[\n  {\n    name: 'order_id',\n    type: 'INTEGER NOT NULL'\n  },\n  {\n    name: 'product_id',\n    type: 'INTEGER NOT NULL'\n  },\n  {\n    name: 'add_to_cart_order',\n    type: 'INTEGER NOT NULL'\n  },\n  {\n    name: 'reordered',\n    type: 'INTEGER NOT NULL'\n  }\n]"
            },
            {
                "name": "DATABASE_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/databases.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FindDatabase[]",
                "defaultValue": "[\n  {\n    id: 1,\n    name: 'Etri MySQL',\n    dbms: 'mysql',\n    host: TRAINDB_LIST[0].host,\n    port: 13306,\n    username: null,\n    password: null,\n    traindb_id: TRAINDB_LIST[0].id,\n    traindb: TRAINDB_LIST[0],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 2,\n    name: 'Etri Kairos',\n    dbms: 'kairos',\n    host: TRAINDB_LIST[0].host,\n    port: 5000,\n    username: null,\n    password: null,\n    traindb_id: TRAINDB_LIST[0].id,\n    traindb: TRAINDB_LIST[0],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 3,\n    name: 'Bimatrix MySQL',\n    dbms: 'mysql',\n    host: TRAINDB_LIST[1].host,\n    port: 3306,\n    username: null,\n    password: null,\n    traindb_id: TRAINDB_LIST[1].id,\n    traindb: TRAINDB_LIST[1],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 3,\n    name: 'Bimatrix Kairos',\n    dbms: 'kairos',\n    host: TRAINDB_LIST[1].host,\n    port: 5000,\n    username: null,\n    password: null,\n    traindb_id: TRAINDB_LIST[1].id,\n    traindb: TRAINDB_LIST[1],\n    created_at: new Date(),\n    updated_at: new Date(),\n  }\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  apiHost: 'http://localhost/api',\n  // apiHost: 'http://192.168.10.39/api',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  apiHost: '/api'\n}"
            },
            {
                "name": "HYPER_PARAMETER_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/hyperpararmeters.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HyperParameter[]",
                "defaultValue": "[\n  {\n    modeltype: 'rspn',\n    name: 'rdc_threshold',\n    type: 'float',\n    default_value: '0.3',\n    description: 'threshold for determining correlation'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'random_dim',\n    type: 'int',\n    default_value: '100',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'num_channels',\n    type: 'int',\n    default_value: '64',\n    description: 'the number of channels'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-5',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'embedding_dim',\n    type: 'int',\n    default_value: '128',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'generator_dim',\n    type: 'tuple or list of ints',\n    default_value: '(256, 256)',\n    description: 'the size of the output samples for each one of the residuals'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'discriminator_dim',\n    type: 'tuple or list of ints',\n    default_value: '(256, 256)',\n    description: 'the size of the output samples for each one of the discriminator layers'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'generator_lr',\n    type: 'float',\n    default_value: '2e-4',\n    description: 'the learning rate for the generator'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'generator_decay',\n    type: 'float',\n    default_value: '1e-6',\n    description: 'generator weight decay for the Adam optimizer'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'discriminator_lr',\n    type: 'float',\n    default_value: '2e-4',\n    description: 'the learning rate for the discriminator'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'discriminator_decay',\n    type: 'float',\n    default_value: '1e-6',\n    description: 'discriminator weight decay for the Adam optimizer'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'pac',\n    type: 'int',\n    default_value: '10',\n    description: 'the number of samples to group together when applying the discriminator'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'embedding_dim',\n    type: 'int',\n    default_value: '128',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'gen_dim',\n    type: 'tuple or list of ints',\n    default_value: '(128, 128)',\n    description: 'the size of the output samples for each one of the residuals'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'dis_dim',\n    type: 'tuple or list of ints',\n    default_value: '(128, 128)',\n    description: 'the size of the output samples for each one of the discriminator layers'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'lr',\n    type: 'float',\n    default_value: '2e-3',\n    description: 'the learning rate for the generator and discriminator'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-6',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'num_split',\n    type: 'int',\n    default_value: '3',\n    description: 'the number of splits for the discriminator'\n  },\n  {\n    modeltype: 'stasy',\n    name: 'epochs',\n    type: 'int',\n    default_value: '10000',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'embedding_dim',\n    type: 'int',\n    default_value: '128',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'compress_dims',\n    type: 'tuple or list of ints',\n    default_value: '(128, 128)',\n    description: 'the size of each hidden layer in the encoder'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'decompress_dims',\n    type: 'tuple or list of ints',\n    default_value: '(128, 128)',\n    description: 'the size of each hidden layer in the decoder'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-5',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'loss_factor',\n    type: 'int',\n    default_value: '2',\n    description: 'the multiplier for the reconstruction error'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'random_dim',\n    type: 'int',\n    default_value: '100',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'num_channels',\n    type: 'int',\n    default_value: '64',\n    description: 'the number of channels'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-5',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'random_dim',\n    type: 'int',\n    default_value: '100',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'num_channels',\n    type: 'int',\n    default_value: '64',\n    description: 'the number of channels'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-5',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  }\n]"
            },
            {
                "name": "MODEL_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Model[]",
                "defaultValue": "[\n  {\n    name: 'm_tablegan',\n    modeltype: 'tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['product_id', 'order_id', 'add_to_cart_order', 'reordered'],\n    table_rows: 1384617,\n    trained_rows: 1384617,\n    status: 'ENABLED',\n    server: 'http://192.168.0.64:58080/',\n    start: '2023-12-19 17:47:04.000000',\n    training_status: 'FINISHED',\n    options: { 'epochs': 1 },\n  },\n  {\n    name: 'New_Model',\n    modeltype: 'tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['add_to_cart_order', 'order_id', 'product_id'],\n    table_rows: 1384617,\n    trained_rows: 1384617,\n    status: 'DISABLED',\n    server: null,\n    start: null,\n    training_status: null,\n    options: { 'epochs': 1 },\n  },\n  {\n    name: 'test_tgan',\n    modeltype: 'tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['reordered', 'add_to_cart_order'],\n    table_rows: 1384617,\n    trained_rows: 1384617,\n    status: 'ENABLED',\n    server: 'http://192.168.0.64:58080/',\n    start: '2024-05-24 11:08:39.000000',\n    training_status: 'TRAINING',\n    options: { 'epochs': 1 },\n  },\n  {\n    name: 'test_rspn',\n    modeltype: 'rspn',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['reordered', 'add_to_cart_order'],\n    table_rows: 1384617,\n    trained_rows: 1384617,\n    status: 'ENABLED',\n    server: 'http://192.168.0.64:58080/',\n    start: '2024-05-24 11:08:39.000000',\n    training_status: 'FINISHED',\n    options: { 'epochs': 1 },\n  },\n]"
            },
            {
                "name": "MODELTYPE_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/modeltypes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Modeltype[]",
                "defaultValue": "[\n  {\n    name: 'rspn',\n    category: 'INFERENCE',\n    location: 'REMOTE',\n    className: 'RSPN',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'tablegan',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'CTGAN',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'ctgan',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'OCTGAN',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'octgan',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'STASY',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'stasy',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'TVAE',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'tvae',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'TableGAN',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'local_tvae',\n    category: 'SYNOPSIS',\n    location: 'LOCAL',\n    className: 'TableGAN',\n    uri: 'models/TableGAN.py',\n  },\n]"
            },
            {
                "name": "monaco",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/config/monaco-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "signal<any>(null)"
            },
            {
                "name": "monacoConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/config/monaco-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "NgxMonacoEditorConfig",
                "defaultValue": "{\n  onMonacoLoad: () => {\n    const monaco = (window as any).monaco;\n    monaco.languages.register({ id: 'sql' });\n    monaco.languages.setMonarchTokensProvider('sql', {\n      tokenizer: {\n        root: [\n          [/\\bSELECT\\b/, 'keyword'],\n          [/\\bselect\\b/, 'keyword'],\n          [/\\bFROM\\b/, 'keyword'],\n          [/\\bfrom\\b/, 'keyword'],\n          [/\\bWHERE\\b/, 'keyword'],\n          [/\\bwhere\\b/, 'keyword'],\n          [/\\bAPPROXIMATE\\b/, 'keyword'],\n          [/\\bapproximate\\b/, 'keyword'],\n          [/\\bLIMIT\\b/, 'keyword'],\n          [/\\blimit\\b/, 'keyword'],\n          // Add other SQL keywords as needed\n        ]\n      }\n    });\n    const sqlKeywords = [\n      { label: 'SELECT', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'SELECT' },\n      { label: 'FROM', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'FROM' },\n      { label: 'WHERE', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'WHERE' },\n      { label: 'APPROXIMATE', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'APPROXIMATE' },\n      { label: 'LIMIT', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'LIMIT' },\n      // { label: 'INSERT', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'INSERT' },\n      // { label: 'INTO', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'INTO' },\n      // { label: 'UPDATE', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'UPDATE' },\n      // { label: 'DELETE', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'DELETE' }\n    ];\n    monaco.languages.registerCompletionItemProvider('sql', {\n      provideCompletionItems: (model: any, position: any) => {\n        const textUntilPosition = model.getValueInRange({\n          startLineNumber: 1,\n          startColumn: 1,\n          endLineNumber: position.lineNumber,\n          endColumn: position.column\n        }).toUpperCase();\n\n        const word = model.getWordUntilPosition(position);\n        const range = {\n          startLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endLineNumber: position.lineNumber,\n          endColumn: word.endColumn\n        };\n\n        const suggestions = [];\n\n        if (textUntilPosition.match(/\\bSELECT\\s*$/)) {\n          suggestions.push({\n            label: 'APPROXIMATE',\n            kind: monaco.languages.CompletionItemKind.Keyword,\n            insertText: 'APPROXIMATE',\n            range: range\n          });\n        }\n\n        // 기본 SQL 키워드 추가\n        sqlKeywords.forEach(keyword => {\n          suggestions.push({\n            ...keyword,\n            range: range\n          });\n        });\n\n        return { suggestions: suggestions };\n      }\n    });\n  },\n}"
            },
            {
                "name": "QUERY_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/queries.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FindQuery[]",
                "defaultValue": "[\n  {\n    id: 1,\n    name: '근사질의 테스트',\n    traindb_id: 1,\n    database_id: 1,\n    is_approximate: true,\n    sql: 'SELECT APPROXIMATE reordered FROM instacart.order_products',\n    traindb: TRAINDB_LIST[0],\n    database: DATABASE_LIST[0],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 2,\n    name: '정확질의 테스트',\n    traindb_id: 1,\n    database_id: 2,\n    is_approximate: false,\n    sql: 'SELECT reordered FROM instacart.order_products',\n    traindb: TRAINDB_LIST[1],\n    database: DATABASE_LIST[1],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n]"
            },
            {
                "name": "RUN_QUERY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/run-query.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "RunQuery",
                "defaultValue": "{\n  ...TABLE_PREVIEW,\n  execution_time: 2.123\n}"
            },
            {
                "name": "SCHEMA_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/schemas.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Schema[]",
                "defaultValue": "[\n  {\n    name: 'Schema_1',\n    tables: [\n      {\n        name: 'Table_1_very_very_long_name___________01',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_2',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_3',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_4',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_5',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_6',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_7',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_8',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_9',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },{\n    name: 'Schema_10',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_11',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_12',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n]"
            },
            {
                "name": "SYNOPSIS_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/synopses.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Synopsis[]",
                "defaultValue": "[\n  {\n    name: 'order_products_syn_bi',\n    model: 'm_tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['add_to_cart_order', 'reordered'],\n    rows: 100,\n    ratio: '0.00007222',\n    external: 'NO',\n    status: 'ENABLED',\n    statistics: '',\n  },\n  {\n    name: 'order_products_syn_bimatrix',\n    model: 'm_tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['add_to_cart_order', 'reordered'],\n    rows: 100,\n    ratio: '0.00007222',\n    external: 'NO',\n    status: 'ENABLED',\n    statistics: '',\n  },\n  {\n    name: 'tmp',\n    model: 'New_Model',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['add_to_cart_order', 'order_id', 'product_id'],\n    rows: 100,\n    ratio: '0.00007222',\n    external: 'NO',\n    status: 'ENABLED',\n    statistics: '',\n  }\n]"
            },
            {
                "name": "TABLE_PREVIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/table-preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TablePreviewResponse",
                "defaultValue": "{\n  columns: ['order_id', 'product_id', 'add_to_cart_order', 'reordered'],\n  types: ['INTEGER', 'INTEGER', 'INTEGER', 'INTEGER'],\n  'data': [\n    [2, 1819, 8, 1],\n    [2, 9327, 3, 0],\n    [2, 17794, 6, 1],\n    [2, 28985, 2, 1],\n    [2, 30035, 5, 0],\n    [2, 33120, 1, 1],\n    [2, 40141, 7, 1],\n    [2, 43668, 9, 0],\n    [2, 45918, 4, 1],\n    [3, 17461, 7, 1],\n    [3, 17668, 5, 1],\n    [3, 17704, 3, 1],\n    [3, 21903, 4, 1],\n    [3, 24838, 2, 1],\n    [3, 32665, 8, 1],\n    [3, 33754, 1, 1],\n    [3, 46667, 6, 1],\n    [4, 10054, 5, 1],\n    [4, 17616, 10, 1],\n    [4, 21351, 6, 1],\n    [4, 22598, 7, 1],\n    [4, 25146, 11, 1],\n    [4, 26434, 2, 1],\n    [4, 27761, 4, 1],\n    [4, 32645, 12, 1],\n    [4, 34862, 8, 1],\n    [4, 39758, 3, 1],\n    [4, 40285, 9, 1],\n    [4, 41276, 13, 1],\n    [4, 46842, 1, 0],\n    [5, 6184, 12, 1],\n    [5, 6348, 10, 1],\n    [5, 8479, 26, 0],\n    [5, 9633, 8, 1],\n    [5, 12962, 16, 1],\n    [5, 13176, 1, 1],\n    [5, 13245, 7, 1],\n    [5, 15005, 2, 1],\n    [5, 18569, 19, 1],\n    [5, 20914, 14, 1],\n    [5, 23909, 5, 1],\n    [5, 24773, 18, 1],\n    [5, 27360, 9, 1],\n    [5, 27966, 4, 1],\n    [5, 37011, 15, 1],\n    [5, 38693, 24, 0],\n    [5, 40878, 11, 1],\n    [5, 41176, 20, 1],\n    [5, 45698, 17, 1],\n    [5, 46522, 23, 0]\n  ]\n}"
            },
            {
                "name": "TRAINDB_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/traindb.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FindTrainDBDto[]",
                "defaultValue": "[\n  {\n    id: 1,\n    name: 'Etri TrainDB',\n    host: '192.168.0.29',\n    port: 58000,\n    username: null,\n    password: null,\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 2,\n    name: 'Bimatrix TrainDB',\n    host: '192.168.0.30',\n    port: 58000,\n    username: null,\n    password: null,\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 3,\n    name: 'Test TrainDB1',\n    host: '192.168.0.31',\n    port: 58000,\n    username: null,\n    password: null,\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 4,\n    name: 'Test TrainDB2',\n    host: '192.168.0.31',\n    port: 58001,\n    username: null,\n    password: null,\n    created_at: new Date(),\n    updated_at: new Date(),\n  }\n]"
            },
            {
                "name": "VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/organisms/dashboard/dashboard-item-input/dashboard-item-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Provider",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DashboardItemInputComponent),\n  multi: true,\n}"
            },
            {
                "name": "VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/organisms/dashboard/query-select/query-select.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Provider",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => QuerySelectComponent),\n  multi: true,\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "DashboardItem",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ChartItem | BubbleChartItem",
                "file": "src/app/dto/dashboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FindDashboardItem",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/dto/dashboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            }
        ],
        "enumerations": [
            {
                "name": "ChartType",
                "childs": [
                    {
                        "name": "BAR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bar"
                    },
                    {
                        "name": "LINE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "line"
                    },
                    {
                        "name": "SCATTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "scatter"
                    },
                    {
                        "name": "PIE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "pie"
                    },
                    {
                        "name": "BUBBLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bubble"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/dto/dashboard.ts"
            },
            {
                "name": "StorageKey",
                "childs": [
                    {
                        "name": "CURRENT_TRAINDB",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "current_traindb"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/storage-key.ts"
            }
        ],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(appRoutes, withViewTransitions()),\n    provideHttpClient(),\n    importProvidersFrom(\n      MonacoEditorModule.forRoot(monacoConfig)\n    )\n  ]\n}"
                }
            ],
            "src/app/dto/dashboard.ts": [
                {
                    "name": "CHART_TYPES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/dto/dashboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Object.values(ChartType)"
                }
            ],
            "src/app/mocks/columns.ts": [
                {
                    "name": "COLUMN_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/columns.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Column[]",
                    "defaultValue": "[\n  {\n    name: 'order_id',\n    type: 'INTEGER NOT NULL'\n  },\n  {\n    name: 'product_id',\n    type: 'INTEGER NOT NULL'\n  },\n  {\n    name: 'add_to_cart_order',\n    type: 'INTEGER NOT NULL'\n  },\n  {\n    name: 'reordered',\n    type: 'INTEGER NOT NULL'\n  }\n]"
                }
            ],
            "src/app/mocks/databases.ts": [
                {
                    "name": "DATABASE_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/databases.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FindDatabase[]",
                    "defaultValue": "[\n  {\n    id: 1,\n    name: 'Etri MySQL',\n    dbms: 'mysql',\n    host: TRAINDB_LIST[0].host,\n    port: 13306,\n    username: null,\n    password: null,\n    traindb_id: TRAINDB_LIST[0].id,\n    traindb: TRAINDB_LIST[0],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 2,\n    name: 'Etri Kairos',\n    dbms: 'kairos',\n    host: TRAINDB_LIST[0].host,\n    port: 5000,\n    username: null,\n    password: null,\n    traindb_id: TRAINDB_LIST[0].id,\n    traindb: TRAINDB_LIST[0],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 3,\n    name: 'Bimatrix MySQL',\n    dbms: 'mysql',\n    host: TRAINDB_LIST[1].host,\n    port: 3306,\n    username: null,\n    password: null,\n    traindb_id: TRAINDB_LIST[1].id,\n    traindb: TRAINDB_LIST[1],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 3,\n    name: 'Bimatrix Kairos',\n    dbms: 'kairos',\n    host: TRAINDB_LIST[1].host,\n    port: 5000,\n    username: null,\n    password: null,\n    traindb_id: TRAINDB_LIST[1].id,\n    traindb: TRAINDB_LIST[1],\n    created_at: new Date(),\n    updated_at: new Date(),\n  }\n]"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  apiHost: 'http://localhost/api',\n  // apiHost: 'http://192.168.10.39/api',\n }"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  apiHost: '/api'\n}"
                }
            ],
            "src/app/mocks/hyperpararmeters.ts": [
                {
                    "name": "HYPER_PARAMETER_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/hyperpararmeters.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HyperParameter[]",
                    "defaultValue": "[\n  {\n    modeltype: 'rspn',\n    name: 'rdc_threshold',\n    type: 'float',\n    default_value: '0.3',\n    description: 'threshold for determining correlation'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'random_dim',\n    type: 'int',\n    default_value: '100',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'num_channels',\n    type: 'int',\n    default_value: '64',\n    description: 'the number of channels'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-5',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'tablegan',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'embedding_dim',\n    type: 'int',\n    default_value: '128',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'generator_dim',\n    type: 'tuple or list of ints',\n    default_value: '(256, 256)',\n    description: 'the size of the output samples for each one of the residuals'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'discriminator_dim',\n    type: 'tuple or list of ints',\n    default_value: '(256, 256)',\n    description: 'the size of the output samples for each one of the discriminator layers'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'generator_lr',\n    type: 'float',\n    default_value: '2e-4',\n    description: 'the learning rate for the generator'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'generator_decay',\n    type: 'float',\n    default_value: '1e-6',\n    description: 'generator weight decay for the Adam optimizer'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'discriminator_lr',\n    type: 'float',\n    default_value: '2e-4',\n    description: 'the learning rate for the discriminator'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'discriminator_decay',\n    type: 'float',\n    default_value: '1e-6',\n    description: 'discriminator weight decay for the Adam optimizer'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'ctgan',\n    name: 'pac',\n    type: 'int',\n    default_value: '10',\n    description: 'the number of samples to group together when applying the discriminator'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'embedding_dim',\n    type: 'int',\n    default_value: '128',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'gen_dim',\n    type: 'tuple or list of ints',\n    default_value: '(128, 128)',\n    description: 'the size of the output samples for each one of the residuals'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'dis_dim',\n    type: 'tuple or list of ints',\n    default_value: '(128, 128)',\n    description: 'the size of the output samples for each one of the discriminator layers'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'lr',\n    type: 'float',\n    default_value: '2e-3',\n    description: 'the learning rate for the generator and discriminator'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-6',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'octgan',\n    name: 'num_split',\n    type: 'int',\n    default_value: '3',\n    description: 'the number of splits for the discriminator'\n  },\n  {\n    modeltype: 'stasy',\n    name: 'epochs',\n    type: 'int',\n    default_value: '10000',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'embedding_dim',\n    type: 'int',\n    default_value: '128',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'compress_dims',\n    type: 'tuple or list of ints',\n    default_value: '(128, 128)',\n    description: 'the size of each hidden layer in the encoder'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'decompress_dims',\n    type: 'tuple or list of ints',\n    default_value: '(128, 128)',\n    description: 'the size of each hidden layer in the decoder'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-5',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'tvae',\n    name: 'loss_factor',\n    type: 'int',\n    default_value: '2',\n    description: 'the multiplier for the reconstruction error'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'random_dim',\n    type: 'int',\n    default_value: '100',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'num_channels',\n    type: 'int',\n    default_value: '64',\n    description: 'the number of channels'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-5',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'wyjang',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'random_dim',\n    type: 'int',\n    default_value: '100',\n    description: 'the size of the random sample passed to the generator'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'num_channels',\n    type: 'int',\n    default_value: '64',\n    description: 'the number of channels'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'l2scale',\n    type: 'float',\n    default_value: '1e-5',\n    description: 'regularization term'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'batch_size',\n    type: 'int',\n    default_value: '500',\n    description: 'the number of samples to process in each step'\n  },\n  {\n    modeltype: 'TableGAN_Test',\n    name: 'epochs',\n    type: 'int',\n    default_value: '300',\n    description: 'the number of training epochs'\n  }\n]"
                }
            ],
            "src/app/mocks/models.ts": [
                {
                    "name": "MODEL_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Model[]",
                    "defaultValue": "[\n  {\n    name: 'm_tablegan',\n    modeltype: 'tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['product_id', 'order_id', 'add_to_cart_order', 'reordered'],\n    table_rows: 1384617,\n    trained_rows: 1384617,\n    status: 'ENABLED',\n    server: 'http://192.168.0.64:58080/',\n    start: '2023-12-19 17:47:04.000000',\n    training_status: 'FINISHED',\n    options: { 'epochs': 1 },\n  },\n  {\n    name: 'New_Model',\n    modeltype: 'tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['add_to_cart_order', 'order_id', 'product_id'],\n    table_rows: 1384617,\n    trained_rows: 1384617,\n    status: 'DISABLED',\n    server: null,\n    start: null,\n    training_status: null,\n    options: { 'epochs': 1 },\n  },\n  {\n    name: 'test_tgan',\n    modeltype: 'tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['reordered', 'add_to_cart_order'],\n    table_rows: 1384617,\n    trained_rows: 1384617,\n    status: 'ENABLED',\n    server: 'http://192.168.0.64:58080/',\n    start: '2024-05-24 11:08:39.000000',\n    training_status: 'TRAINING',\n    options: { 'epochs': 1 },\n  },\n  {\n    name: 'test_rspn',\n    modeltype: 'rspn',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['reordered', 'add_to_cart_order'],\n    table_rows: 1384617,\n    trained_rows: 1384617,\n    status: 'ENABLED',\n    server: 'http://192.168.0.64:58080/',\n    start: '2024-05-24 11:08:39.000000',\n    training_status: 'FINISHED',\n    options: { 'epochs': 1 },\n  },\n]"
                }
            ],
            "src/app/mocks/modeltypes.ts": [
                {
                    "name": "MODELTYPE_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/modeltypes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Modeltype[]",
                    "defaultValue": "[\n  {\n    name: 'rspn',\n    category: 'INFERENCE',\n    location: 'REMOTE',\n    className: 'RSPN',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'tablegan',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'CTGAN',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'ctgan',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'OCTGAN',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'octgan',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'STASY',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'stasy',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'TVAE',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'tvae',\n    category: 'SYNOPSIS',\n    location: 'REMOTE',\n    className: 'TableGAN',\n    uri: 'http://192.168.0.29:58080/',\n  },\n  {\n    name: 'local_tvae',\n    category: 'SYNOPSIS',\n    location: 'LOCAL',\n    className: 'TableGAN',\n    uri: 'models/TableGAN.py',\n  },\n]"
                }
            ],
            "src/app/config/monaco-config.ts": [
                {
                    "name": "monaco",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/config/monaco-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "signal<any>(null)"
                },
                {
                    "name": "monacoConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/config/monaco-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgxMonacoEditorConfig",
                    "defaultValue": "{\n  onMonacoLoad: () => {\n    const monaco = (window as any).monaco;\n    monaco.languages.register({ id: 'sql' });\n    monaco.languages.setMonarchTokensProvider('sql', {\n      tokenizer: {\n        root: [\n          [/\\bSELECT\\b/, 'keyword'],\n          [/\\bselect\\b/, 'keyword'],\n          [/\\bFROM\\b/, 'keyword'],\n          [/\\bfrom\\b/, 'keyword'],\n          [/\\bWHERE\\b/, 'keyword'],\n          [/\\bwhere\\b/, 'keyword'],\n          [/\\bAPPROXIMATE\\b/, 'keyword'],\n          [/\\bapproximate\\b/, 'keyword'],\n          [/\\bLIMIT\\b/, 'keyword'],\n          [/\\blimit\\b/, 'keyword'],\n          // Add other SQL keywords as needed\n        ]\n      }\n    });\n    const sqlKeywords = [\n      { label: 'SELECT', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'SELECT' },\n      { label: 'FROM', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'FROM' },\n      { label: 'WHERE', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'WHERE' },\n      { label: 'APPROXIMATE', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'APPROXIMATE' },\n      { label: 'LIMIT', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'LIMIT' },\n      // { label: 'INSERT', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'INSERT' },\n      // { label: 'INTO', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'INTO' },\n      // { label: 'UPDATE', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'UPDATE' },\n      // { label: 'DELETE', kind: monaco.languages.CompletionItemKind.Keyword, insertText: 'DELETE' }\n    ];\n    monaco.languages.registerCompletionItemProvider('sql', {\n      provideCompletionItems: (model: any, position: any) => {\n        const textUntilPosition = model.getValueInRange({\n          startLineNumber: 1,\n          startColumn: 1,\n          endLineNumber: position.lineNumber,\n          endColumn: position.column\n        }).toUpperCase();\n\n        const word = model.getWordUntilPosition(position);\n        const range = {\n          startLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endLineNumber: position.lineNumber,\n          endColumn: word.endColumn\n        };\n\n        const suggestions = [];\n\n        if (textUntilPosition.match(/\\bSELECT\\s*$/)) {\n          suggestions.push({\n            label: 'APPROXIMATE',\n            kind: monaco.languages.CompletionItemKind.Keyword,\n            insertText: 'APPROXIMATE',\n            range: range\n          });\n        }\n\n        // 기본 SQL 키워드 추가\n        sqlKeywords.forEach(keyword => {\n          suggestions.push({\n            ...keyword,\n            range: range\n          });\n        });\n\n        return { suggestions: suggestions };\n      }\n    });\n  },\n}"
                }
            ],
            "src/app/mocks/queries.ts": [
                {
                    "name": "QUERY_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/queries.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FindQuery[]",
                    "defaultValue": "[\n  {\n    id: 1,\n    name: '근사질의 테스트',\n    traindb_id: 1,\n    database_id: 1,\n    is_approximate: true,\n    sql: 'SELECT APPROXIMATE reordered FROM instacart.order_products',\n    traindb: TRAINDB_LIST[0],\n    database: DATABASE_LIST[0],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 2,\n    name: '정확질의 테스트',\n    traindb_id: 1,\n    database_id: 2,\n    is_approximate: false,\n    sql: 'SELECT reordered FROM instacart.order_products',\n    traindb: TRAINDB_LIST[1],\n    database: DATABASE_LIST[1],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n]"
                }
            ],
            "src/app/mocks/run-query.ts": [
                {
                    "name": "RUN_QUERY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/run-query.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RunQuery",
                    "defaultValue": "{\n  ...TABLE_PREVIEW,\n  execution_time: 2.123\n}"
                }
            ],
            "src/app/mocks/schemas.ts": [
                {
                    "name": "SCHEMA_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/schemas.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Schema[]",
                    "defaultValue": "[\n  {\n    name: 'Schema_1',\n    tables: [\n      {\n        name: 'Table_1_very_very_long_name___________01',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_2',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_3',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_4',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_5',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_6',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_7',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_8',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_9',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },{\n    name: 'Schema_10',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_11',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n  {\n    name: 'Schema_12',\n    tables: [\n      {\n        name: 'Table_1',\n        type: 'TABLE'\n      },\n      {\n        name: 'Table_2',\n        type: 'VIEW'\n      },\n    ],\n  },\n]"
                }
            ],
            "src/app/mocks/synopses.ts": [
                {
                    "name": "SYNOPSIS_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/synopses.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Synopsis[]",
                    "defaultValue": "[\n  {\n    name: 'order_products_syn_bi',\n    model: 'm_tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['add_to_cart_order', 'reordered'],\n    rows: 100,\n    ratio: '0.00007222',\n    external: 'NO',\n    status: 'ENABLED',\n    statistics: '',\n  },\n  {\n    name: 'order_products_syn_bimatrix',\n    model: 'm_tablegan',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['add_to_cart_order', 'reordered'],\n    rows: 100,\n    ratio: '0.00007222',\n    external: 'NO',\n    status: 'ENABLED',\n    statistics: '',\n  },\n  {\n    name: 'tmp',\n    model: 'New_Model',\n    schema: 'instacart_small',\n    table: 'order_products',\n    columns: ['add_to_cart_order', 'order_id', 'product_id'],\n    rows: 100,\n    ratio: '0.00007222',\n    external: 'NO',\n    status: 'ENABLED',\n    statistics: '',\n  }\n]"
                }
            ],
            "src/app/mocks/table-preview.ts": [
                {
                    "name": "TABLE_PREVIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/table-preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TablePreviewResponse",
                    "defaultValue": "{\n  columns: ['order_id', 'product_id', 'add_to_cart_order', 'reordered'],\n  types: ['INTEGER', 'INTEGER', 'INTEGER', 'INTEGER'],\n  'data': [\n    [2, 1819, 8, 1],\n    [2, 9327, 3, 0],\n    [2, 17794, 6, 1],\n    [2, 28985, 2, 1],\n    [2, 30035, 5, 0],\n    [2, 33120, 1, 1],\n    [2, 40141, 7, 1],\n    [2, 43668, 9, 0],\n    [2, 45918, 4, 1],\n    [3, 17461, 7, 1],\n    [3, 17668, 5, 1],\n    [3, 17704, 3, 1],\n    [3, 21903, 4, 1],\n    [3, 24838, 2, 1],\n    [3, 32665, 8, 1],\n    [3, 33754, 1, 1],\n    [3, 46667, 6, 1],\n    [4, 10054, 5, 1],\n    [4, 17616, 10, 1],\n    [4, 21351, 6, 1],\n    [4, 22598, 7, 1],\n    [4, 25146, 11, 1],\n    [4, 26434, 2, 1],\n    [4, 27761, 4, 1],\n    [4, 32645, 12, 1],\n    [4, 34862, 8, 1],\n    [4, 39758, 3, 1],\n    [4, 40285, 9, 1],\n    [4, 41276, 13, 1],\n    [4, 46842, 1, 0],\n    [5, 6184, 12, 1],\n    [5, 6348, 10, 1],\n    [5, 8479, 26, 0],\n    [5, 9633, 8, 1],\n    [5, 12962, 16, 1],\n    [5, 13176, 1, 1],\n    [5, 13245, 7, 1],\n    [5, 15005, 2, 1],\n    [5, 18569, 19, 1],\n    [5, 20914, 14, 1],\n    [5, 23909, 5, 1],\n    [5, 24773, 18, 1],\n    [5, 27360, 9, 1],\n    [5, 27966, 4, 1],\n    [5, 37011, 15, 1],\n    [5, 38693, 24, 0],\n    [5, 40878, 11, 1],\n    [5, 41176, 20, 1],\n    [5, 45698, 17, 1],\n    [5, 46522, 23, 0]\n  ]\n}"
                }
            ],
            "src/app/mocks/traindb.ts": [
                {
                    "name": "TRAINDB_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/traindb.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FindTrainDBDto[]",
                    "defaultValue": "[\n  {\n    id: 1,\n    name: 'Etri TrainDB',\n    host: '192.168.0.29',\n    port: 58000,\n    username: null,\n    password: null,\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 2,\n    name: 'Bimatrix TrainDB',\n    host: '192.168.0.30',\n    port: 58000,\n    username: null,\n    password: null,\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 3,\n    name: 'Test TrainDB1',\n    host: '192.168.0.31',\n    port: 58000,\n    username: null,\n    password: null,\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 4,\n    name: 'Test TrainDB2',\n    host: '192.168.0.31',\n    port: 58001,\n    username: null,\n    password: null,\n    created_at: new Date(),\n    updated_at: new Date(),\n  }\n]"
                }
            ],
            "src/app/components/organisms/dashboard/dashboard-item-input/dashboard-item-input.component.ts": [
                {
                    "name": "VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/organisms/dashboard/dashboard-item-input/dashboard-item-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Provider",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DashboardItemInputComponent),\n  multi: true,\n}"
                }
            ],
            "src/app/components/organisms/dashboard/query-select/query-select.component.ts": [
                {
                    "name": "VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/organisms/dashboard/query-select/query-select.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Provider",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => QuerySelectComponent),\n  multi: true,\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/dto/dashboard.ts": [
                {
                    "name": "ChartType",
                    "childs": [
                        {
                            "name": "BAR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bar"
                        },
                        {
                            "name": "LINE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "line"
                        },
                        {
                            "name": "SCATTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "scatter"
                        },
                        {
                            "name": "PIE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "pie"
                        },
                        {
                            "name": "BUBBLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bubble"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/dto/dashboard.ts"
                }
            ],
            "src/app/constants/storage-key.ts": [
                {
                    "name": "StorageKey",
                    "childs": [
                        {
                            "name": "CURRENT_TRAINDB",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "current_traindb"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/storage-key.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/dto/dashboard.ts": [
                {
                    "name": "DashboardItem",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ChartItem | BubbleChartItem",
                    "file": "src/app/dto/dashboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "FindDashboardItem",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/dto/dashboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/buttons/dashboard-button/dashboard-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/arrow-down-tray-icon/arrow-down-tray-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArrowDownTrayIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/arrow-up-tray-icon/arrow-up-tray-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArrowUpTrayIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/base-icon.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BaseIconDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/chart-bar-icon/chart-bar-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartBarIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/chevron-left-icon/chevron-left-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChevronLeftIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/circle-stack-icon/circle-stack-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CircleStackIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/command-line-icon/command-line-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommandLineIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/computer-desktop-icon/computer-desktop-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComputerDesktopIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/cube-icon/cube-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CubeIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/document-magnifying-glass-icon/document-magnifying-glass-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentMagnifyingGlassIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/magnifying-glass-icon/magnifying-glass-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MagnifyingGlassIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/pencil-square-icon/pencil-square-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PencilSquareIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/play-icon/play-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlayIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/plus-icon/plus-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlusIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/rectangle-group-icon/rectangle-group-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RectangleGroupIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/rectangle-stack-icon/rectangle-stack-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RectangleStackIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/square-3-stack-3d-icon/square-3-stack-3d-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Square3Stack3dIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/table-cells-icon/table-cells-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableCellsIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/trash-icon/trash-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrashIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icons/x-mark-icon/x-mark-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "XMarkIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/loading/loading.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/typographies/dialog-header/dialog-header.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DialogHeaderDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/database-tables/database-tables.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatabaseTablesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/search-input/search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/select-columns/select-columns.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectColumnsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/traindb-banner/traindb-banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TraindbBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/charts/bar-chart/bar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BarChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/charts/line-chart/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/charts/scatter-chart/scatter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScatterChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dashboard/chart-item/chart-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dashboard/dashboard-item-input/dashboard-item-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardItemInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dashboard/dashboard-item-input/dashboard-item-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dashboard/dashboard-item/dashboard-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dashboard/dashboard-items/dashboard-items.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardItemsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dashboard/query-select/query-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuerySelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dashboard/query-select/query-select.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/base-dialog/base-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/import-model-dialog/import-model-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImportModelDialog",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/import-model-dialog/import-model-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImportModelDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/import-synopsis-dialog/import-synopsis-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImportSynopsisDialog",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/import-synopsis-dialog/import-synopsis-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImportSynopsisDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/make-chart-dialog/make-chart-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MakeChartDialog",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/make-chart-dialog/make-chart-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MakeChartDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/model-dialog/model-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModelDialog",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/model-dialog/model-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModelDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/run-query-dialog/run-query-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RunQueryDialog",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/run-query-dialog/run-query-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RunQueryDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/table-preview-dialog/table-preview-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TablePreviewDialog",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/table-preview-dialog/table-preview-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TablePreviewDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/update-model-dialog/update-model-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateModelDialog",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/update-model-dialog/update-model-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateModelDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/update-synopsis-dialog/update-synopsis-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateSynopsisDialog",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/dialogs/update-synopsis-dialog/update-synopsis-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateSynopsisDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/hyper-parameter-inputs/hyper-parameter-inputs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HyperParameterInputsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/navigator/navigator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/train-model-data/train-model-data.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrainModelDataComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/config/monaco-config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "monaco",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/config/monaco-config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "monacoConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/column.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Column",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BaseChartItem",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BubbleChartItem",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BubbleChartItemFields",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ChartItem",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ChartItemFields",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateDashboard",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Dashboard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FindDashboard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateDashboard",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/dashboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CHART_TYPES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/database.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateDatabase",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/database.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Database",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/database.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FindDatabase",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/database.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestDatabaseConnectionRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/database.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestDatabaseConnectionResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/database.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateDatabase",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/hyper-parameter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HyperParameter",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Model",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TrainModel",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TrainModelOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/modeltype.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateModeltypeDto",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/modeltype.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FindModeltypeDto",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/modeltype.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Modeltype",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/query.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateQuery",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/query.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FindQuery",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/query.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Query",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/query.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RunQuery",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/query.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateQuery",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Schema",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/synopsis.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateSynopsis",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/synopsis.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Synopsis",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/synopsis.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateSynopsis",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/table.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/table.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TablePreviewRequest",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/table.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TablePreviewResponse",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/traindb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateTrainDBDto",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/traindb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FindTrainDBDto",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/traindb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestTrainDBConnectionRequestDto",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/traindb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestTrainDBConnectionResponseDto",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/traindb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TrainDB",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/dto/traindb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateTrainDBDto",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/columns.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COLUMN_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/databases.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DATABASE_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/hyperpararmeters.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HYPER_PARAMETER_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/models.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MODEL_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/modeltypes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MODELTYPE_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/queries.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "QUERY_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/run-query.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RUN_QUERY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/schemas.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SCHEMA_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/synopses.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SYNOPSIS_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/table-preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TABLE_PREVIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/traindb.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TRAINDB_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/column-to-axis-data.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ColumnToAxisDataPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/column-to-index.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ColumnToIndexPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/ip-anonymization.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "IpAnonymizationPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/patternFilter.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "PatternFilterPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/benchmarks/pages/benchmark-list-page/benchmark-list-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BenchmarkListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/dashboard/pages/dashboard-page/dashboard-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/dashboard/pages/make-dashboard-page/dashboard-form-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/databases/pages/database-form-page/database-form-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatabaseFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/databases/pages/database-list-page/database-list-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatabaseListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/models/pages/model-list-page/model-list-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModelListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/models/pages/train-model-page/train-model-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrainModelPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/modeltypes/pages/modeltype-form-page/modeltype-form-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModeltypeFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/modeltypes/pages/modeltype-list-page/modeltype-list-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModeltypeListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/queries/pages/query-form-page/query-form-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueryFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/queries/pages/query-list-page/query-list-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueryListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/synopses/pages/synopsis-form-page/synopsis-form-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SynopsisFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/synopses/pages/synopsis-list-page/synopsis-list-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SynopsisListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/traindb/pages/traindb-form-page/traindb-form-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TraindbFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/routes/traindb/pages/traindb-list-page/traindb-list-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TraindbListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/services/dashboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DashboardService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/services/database.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DatabaseService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/services/hyper-parameter.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HyperParameterService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/layout.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LayoutService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/model.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ModelService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/modeltype.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ModeltypeService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/query.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "QueryService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/services/synopsis.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SynopsisService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/table.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TableService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/traindb.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TraindbService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}